/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  TestUniswapV3Feature,
  TestUniswapV3FeatureInterface,
} from "../../../contracts/test/TestUniswapV3Feature";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BytesLike,
  Overrides,
} from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IEtherTokenV06",
        name: "weth",
        type: "address",
      },
      {
        internalType: "address",
        name: "uniFactory",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "poolInitCodeHash",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "FEATURE_NAME",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "FEATURE_VERSION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedPath",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "sellAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minBuyAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "_sellHeldTokenForTokenToUniswapV3",
    outputs: [
      {
        internalType: "uint256",
        name: "buyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "migrate",
    outputs: [
      {
        internalType: "bytes4",
        name: "success",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedPath",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "minBuyAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "sellEthForTokenToUniswapV3",
    outputs: [
      {
        internalType: "uint256",
        name: "buyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedPath",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "sellAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minBuyAmount",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "recipient",
        type: "address",
      },
    ],
    name: "sellTokenForEthToUniswapV3",
    outputs: [
      {
        internalType: "uint256",
        name: "buyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedPath",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "sellAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minBuyAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "sellTokenForTokenToUniswapV3",
    outputs: [
      {
        internalType: "uint256",
        name: "buyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "amount0Delta",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "amount1Delta",
        type: "int256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "uniswapV3SwapCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6101206040526200001a60018060006200010560201b60201c565b60a0908152503480156200002d57600080fd5b5060405162001d6c38038062001d6c833981810160405281019062000053919062000174565b8282823073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815250508273ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff1660601b8152505060588273ffffffffffffffffffffffffffffffffffffffff16901b60f860ff901b1760001b60e081815250508061010081815250505050505050506200026a565b60008163ffffffff1660208463ffffffff16901b60408663ffffffff16901b171790509392505050565b60008151905062000140816200021c565b92915050565b600081519050620001578162000236565b92915050565b6000815190506200016e8162000250565b92915050565b6000806000606084860312156200018a57600080fd5b60006200019a868287016200015d565b9350506020620001ad868287016200012f565b9250506040620001c08682870162000146565b9150509250925092565b6000620001d782620001fc565b9050919050565b6000819050919050565b6000620001f582620001ca565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6200022781620001ca565b81146200023357600080fd5b50565b6200024181620001de565b81146200024d57600080fd5b50565b6200025b81620001e8565b81146200026757600080fd5b50565b60805160601c60a05160c05160601c60e05161010051611ab7620002b560003980610b47525080610b2252508061024452806103b452508061021e525080610aac5250611ab76000f3fe60806040526004361061007f5760003560e01c80636af479b21161004e5780636af479b21461014e578063803ba26d1461018b5780638fd3ab80146101c8578063fa461e33146101f357610086565b8063031b905c1461008b5780633598d8ab146100b65780634a931ba1146100e65780636ae4b4f71461012357610086565b3661008657005b600080fd5b34801561009757600080fd5b506100a061021c565b6040516100ad919061188b565b60405180910390f35b6100d060048036038101906100cb91906110a6565b610240565b6040516100dd919061188b565b60405180910390f35b3480156100f257600080fd5b5061010d6004803603810190610108919061110d565b6102e1565b60405161011a919061188b565b60405180910390f35b34801561012f57600080fd5b50610138610347565b6040516101459190611769565b60405180910390f35b34801561015a57600080fd5b506101756004803603810190610170919061110d565b610380565b604051610182919061188b565b60405180910390f35b34801561019757600080fd5b506101b260048036038101906101ad9190611188565b6103a1565b6040516101bf919061188b565b60405180910390f35b3480156101d457600080fd5b506101dd6104cd565b6040516101ea9190611725565b60405180910390f35b3480156101ff57600080fd5b5061021a6004803603810190610215919061123f565b61052c565b005b7f000000000000000000000000000000000000000000000000000000000000000081565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b1580156102aa57600080fd5b505af11580156102be573d6000803e3d6000fd5b50505050506102d8843485306102d3876106cf565b610713565b90509392505050565b60003073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461032857610327610322336109ed565b610a85565b5b61033d85858530610338876106cf565b610713565b9050949350505050565b6040518060400160405280601081526020017f556e69737761705633466561747572650000000000000000000000000000000081525081565b600061039785858533610392876106cf565b610713565b9050949350505050565b60006103b08585853330610713565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16632e1a7d4d826040518263ffffffff1660e01b815260040161040b919061188b565b600060405180830381600087803b15801561042557600080fd5b505af1158015610439573d6000803e3d6000fd5b505050506000606061044a846106cf565b73ffffffffffffffffffffffffffffffffffffffff168360405161046d9061169b565b60006040518083038185875af1925050503d80600081146104aa576040519150601f19603f3d011682016040523d82523d6000602084013e6104af565b606091505b5091509150816104c3576104c281610a85565b5b5050949350505050565b60006104df633598d8ab60e01b610a8d565b6104ef63803ba26d60e01b610a8d565b6104ff636af479b260e01b610a8d565b61050f634a931ba160e01b610a8d565b61051f63fa461e3360e01b610a8d565b632c64c5ef60e01b905090565b60008060008060808686905014610578576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056f9061178b565b60405180910390fd5b60443560240180359450602081013593506040810135915060608101359250508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16106105d25782846105d5565b83835b80945081955050506105e8848285610b1d565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610655576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064c9061182b565b60405180910390fd5b5060008713156106705761066b8382338a610c05565b6106c6565b600086131561068a5761068582823389610c05565b6106c5565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106bc906117ab565b60405180910390fd5b5b50505050505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161461070a578161070c565b335b9050919050565b60008085146109a1577f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff85111561077f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610776906117eb565b60405180910390fd5b6060608067ffffffffffffffff8111801561079957600080fd5b506040519080825280601f01601f1916602001820160405280156107cc5781602001600182028036833780820191505090505b5090505b60011561099f5760006107e288610c5b565b905060008060008060006107f58d610c69565b925092509250610806838383610b1d565b93508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16109450610846878483858e610ce0565b5050506000808273ffffffffffffffffffffffffffffffffffffffff1663128acb08866108735789610875565b305b868e8861089957600173fffd8963efd1fc6a506488495d951d5263988d26036108a3565b60016401000276a3015b8b6040518663ffffffff1660e01b81526004016108c49594939291906116cb565b6040805180830381600087803b1580156108dd57600080fd5b505af11580156108f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109159190611203565b915091506000846109265782610928565b815b60000390506000811215610971576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109689061184b565b60405180910390fd5b809750508461098457505050505061099f565b309850869a506109938c610d1c565b9b5050505050506107d0565b505b808411156109e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109db9061180b565b60405180910390fd5b95945050505050565b60607ff0ec779b0bcda6d84abf99ee2c67647d1100ebbb553a9c2d1c2ba1579592832c82604051602401610a2191906116b0565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050509050919050565b805160208201fd5b3073ffffffffffffffffffffffffffffffffffffffff16636eb224cb827f00000000000000000000000000000000000000000000000000000000000000006040518363ffffffff1660e01b8152600401610ae8929190611740565b600060405180830381600087803b158015610b0257600080fd5b505af1158015610b16573d6000803e3d6000fd5b5050505050565b6000807f0000000000000000000000000000000000000000000000000000000000000000905060007f000000000000000000000000000000000000000000000000000000000000000090506000808573ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff1610610ba5578588610ba8565b87865b91509150604051808581526015810190508381528260208201528862ffffff1660408201526060812081526020810190508481526055822073ffffffffffffffffffffffffffffffffffffffff1696505050505050509392505050565b3073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610c4957610c4484848484610d80565b610c55565b610c54848383610e9e565b5b50505050565b6000602b8251119050919050565b6000806000602b84511015610cb3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610caa906117cb565b60405180910390fd5b60208401805160601c9350601481019050805160e81c9250600381019050805160601c9150509193909250565b602085018481528360208201528262ffffff1660408201528173ffffffffffffffffffffffffffffffffffffffff166060820152505050505050565b6060601782511015610d63576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d5a906117cb565b60405180910390fd5b600060179050600081845103905081840192508083525050919050565b3073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415610def576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610de69061186b565b60405180910390fd5b6040517f23b872dd00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8416600482015273ffffffffffffffffffffffffffffffffffffffff83166024820152816044820152602081606483600073ffffffffffffffffffffffffffffffffffffffff8a165af13d60018351146020821015168115178216915081610e9557806000843e8083fd5b50505050505050565b3073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610f0d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f049061186b565b60405180910390fd5b6040517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83166004820152816024820152602081604483600073ffffffffffffffffffffffffffffffffffffffff89165af13d60018351146020821015168115178216915081610f9757806000843e8083fd5b505050505050565b600081359050610fae81611a25565b92915050565b600081359050610fc381611a3c565b92915050565b60008083601f840112610fdb57600080fd5b8235905067ffffffffffffffff811115610ff457600080fd5b60208301915083600182028301111561100c57600080fd5b9250929050565b600082601f83011261102457600080fd5b8135611037611032826118d3565b6118a6565b9150808252602083016020830185838301111561105357600080fd5b61105e8382846119d2565b50505092915050565b60008135905061107681611a53565b92915050565b60008151905061108b81611a53565b92915050565b6000813590506110a081611a6a565b92915050565b6000806000606084860312156110bb57600080fd5b600084013567ffffffffffffffff8111156110d557600080fd5b6110e186828701611013565b93505060206110f286828701611091565b925050604061110386828701610f9f565b9150509250925092565b6000806000806080858703121561112357600080fd5b600085013567ffffffffffffffff81111561113d57600080fd5b61114987828801611013565b945050602061115a87828801611091565b935050604061116b87828801611091565b925050606061117c87828801610f9f565b91505092959194509250565b6000806000806080858703121561119e57600080fd5b600085013567ffffffffffffffff8111156111b857600080fd5b6111c487828801611013565b94505060206111d587828801611091565b93505060406111e687828801611091565b92505060606111f787828801610fb4565b91505092959194509250565b6000806040838503121561121657600080fd5b60006112248582860161107c565b92505060206112358582860161107c565b9150509250929050565b6000806000806060858703121561125557600080fd5b600061126387828801611067565b945050602061127487828801611067565b935050604085013567ffffffffffffffff81111561129157600080fd5b61129d87828801610fc9565b925092505092959194509250565b6112b481611942565b82525050565b6112c381611966565b82525050565b6112d281611972565b82525050565b60006112e3826118ff565b6112ed8185611915565b93506112fd8185602086016119e1565b61130681611a14565b840191505092915050565b61131a8161199e565b82525050565b600061132b8261190a565b6113358185611931565b93506113458185602086016119e1565b61134e81611a14565b840191505092915050565b6000611366602983611931565b91507f556e6973776170466561747572652f494e56414c49445f535741505f43414c4c60008301527f4241434b5f4441544100000000000000000000000000000000000000000000006020830152604082019050919050565b60006113cc602583611931565b91507f556e69737761705633466561747572652f494e56414c49445f535741505f414d60008301527f4f554e54530000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000611432602283611931565b91507f556e69737761705633466561747572652f4241445f504154485f454e434f444960008301527f4e470000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000611498602583611931565b91507f556e69737761705633466561747572652f53454c4c5f414d4f554e545f4f564560008301527f52464c4f570000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006114fe601c83611931565b91507f556e69737761705633466561747572652f554e444552424f55474854000000006000830152602082019050919050565b600061153e602d83611931565b91507f556e69737761705633466561747572652f494e56414c49445f535741505f434160008301527f4c4c4241434b5f43414c4c4552000000000000000000000000000000000000006020830152604082019050919050565b60006115a4602383611931565b91507f556e69737761705633466561747572652f494e56414c49445f4255595f414d4f60008301527f554e5400000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061160a600083611926565b9150600082019050919050565b6000611624602483611931565b91507f466978696e546f6b656e5370656e6465722f43414e4e4f545f494e564f4b455f60008301527f53454c46000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b611686816119a8565b82525050565b611695816119c8565b82525050565b60006116a6826115fd565b9150819050919050565b60006020820190506116c560008301846112ab565b92915050565b600060a0820190506116e060008301886112ab565b6116ed60208301876112ba565b6116fa6040830186611311565b611707606083018561167d565b818103608083015261171981846112d8565b90509695505050505050565b600060208201905061173a60008301846112c9565b92915050565b600060408201905061175560008301856112c9565b61176260208301846112ab565b9392505050565b600060208201905081810360008301526117838184611320565b905092915050565b600060208201905081810360008301526117a481611359565b9050919050565b600060208201905081810360008301526117c4816113bf565b9050919050565b600060208201905081810360008301526117e481611425565b9050919050565b600060208201905081810360008301526118048161148b565b9050919050565b60006020820190508181036000830152611824816114f1565b9050919050565b6000602082019050818103600083015261184481611531565b9050919050565b6000602082019050818103600083015261186481611597565b9050919050565b6000602082019050818103600083015261188481611617565b9050919050565b60006020820190506118a0600083018461168c565b92915050565b6000604051905081810181811067ffffffffffffffff821117156118c957600080fd5b8060405250919050565b600067ffffffffffffffff8211156118ea57600080fd5b601f19601f8301169050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600061194d826119a8565b9050919050565b600061195f826119a8565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b838110156119ff5780820151818401526020810190506119e4565b83811115611a0e576000848401525b50505050565b6000601f19601f8301169050919050565b611a2e81611942565b8114611a3957600080fd5b50565b611a4581611954565b8114611a5057600080fd5b50565b611a5c8161199e565b8114611a6757600080fd5b50565b611a73816119c8565b8114611a7e57600080fd5b5056fea264697066735822122061f898e746c5a500a2882c5f514a50db2a0d6e8a78f4e0a88bba032db15edecb64736f6c634300060c0033";

type TestUniswapV3FeatureConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestUniswapV3FeatureConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestUniswapV3Feature__factory extends ContractFactory {
  constructor(...args: TestUniswapV3FeatureConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    weth: string,
    uniFactory: string,
    poolInitCodeHash: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestUniswapV3Feature> {
    return super.deploy(
      weth,
      uniFactory,
      poolInitCodeHash,
      overrides || {}
    ) as Promise<TestUniswapV3Feature>;
  }
  override getDeployTransaction(
    weth: string,
    uniFactory: string,
    poolInitCodeHash: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      weth,
      uniFactory,
      poolInitCodeHash,
      overrides || {}
    );
  }
  override attach(address: string): TestUniswapV3Feature {
    return super.attach(address) as TestUniswapV3Feature;
  }
  override connect(signer: Signer): TestUniswapV3Feature__factory {
    return super.connect(signer) as TestUniswapV3Feature__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestUniswapV3FeatureInterface {
    return new utils.Interface(_abi) as TestUniswapV3FeatureInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestUniswapV3Feature {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TestUniswapV3Feature;
  }
}
