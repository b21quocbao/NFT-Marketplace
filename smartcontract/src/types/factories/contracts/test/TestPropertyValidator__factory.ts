/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  TestPropertyValidator,
  TestPropertyValidatorInterface,
} from "../../../contracts/test/TestPropertyValidator";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "propertyData",
        type: "bytes",
      },
    ],
    name: "validateProperty",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506102af806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80631395c0f314610030575b600080fd5b61004a6004803603810190610045919061010c565b61004c565b005b60008282905011610092576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610089906101de565b60405180910390fd5b50505050565b6000813590506100a78161024b565b92915050565b60008083601f8401126100bf57600080fd5b8235905067ffffffffffffffff8111156100d857600080fd5b6020830191508360018202830111156100f057600080fd5b9250929050565b60008135905061010681610262565b92915050565b6000806000806060858703121561012257600080fd5b600061013087828801610098565b9450506020610141878288016100f7565b935050604085013567ffffffffffffffff81111561015e57600080fd5b61016a878288016100ad565b925092505092959194509250565b6000610185602e836101fe565b91507f5465737450726f706572747956616c696461746f723a3a76616c69646174655060008301527f726f70657274792f5245564552540000000000000000000000000000000000006020830152604082019050919050565b600060208201905081810360008301526101f781610178565b9050919050565b600082825260208201905092915050565b600061021a82610221565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6102548161020f565b811461025f57600080fd5b50565b61026b81610241565b811461027657600080fd5b5056fea2646970667358221220a02cf207a0922bf78b28f04033a65ba02186b67e4162453dcc58a8ce5f2890c064736f6c634300060c0033";

type TestPropertyValidatorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestPropertyValidatorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestPropertyValidator__factory extends ContractFactory {
  constructor(...args: TestPropertyValidatorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestPropertyValidator> {
    return super.deploy(overrides || {}) as Promise<TestPropertyValidator>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TestPropertyValidator {
    return super.attach(address) as TestPropertyValidator;
  }
  override connect(signer: Signer): TestPropertyValidator__factory {
    return super.connect(signer) as TestPropertyValidator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestPropertyValidatorInterface {
    return new utils.Interface(_abi) as TestPropertyValidatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestPropertyValidator {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TestPropertyValidator;
  }
}
