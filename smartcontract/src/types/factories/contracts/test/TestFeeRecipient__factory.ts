/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  TestFeeRecipient,
  TestFeeRecipientInterface,
} from "../../../contracts/test/TestFeeRecipient";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FeeReceived",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "receiveZeroExFeeCallback",
    outputs: [
      {
        internalType: "bytes4",
        name: "success",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506103cb806100206000396000f3fe6080604052600436106100225760003560e01c806330787dd11461002e57610029565b3661002957005b600080fd5b34801561003a57600080fd5b506100556004803603810190610050919061018b565b61006b565b60405161006291906102b3565b60405180910390f35b60007fbb527541f6cc244ae00ab689f8c23d072a30a3b4176021df62ea1c2bac8aa226858560405161009e92919061028a565b60405180910390a161014d8414156100eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100e2906102ce565b60405180910390fd5b61029a8414156101045763deadbeef60e01b905061010f565b6330787dd160e01b90505b949350505050565b60008135905061012681610367565b92915050565b60008083601f84011261013e57600080fd5b8235905067ffffffffffffffff81111561015757600080fd5b60208301915083600182028301111561016f57600080fd5b9250929050565b6000813590506101858161037e565b92915050565b600080600080606085870312156101a157600080fd5b60006101af87828801610117565b94505060206101c087828801610176565b935050604085013567ffffffffffffffff8111156101dd57600080fd5b6101e98782880161012c565b925092505092959194509250565b610200816102ff565b82525050565b61020f81610311565b82525050565b60006102226031836102ee565b91507f54657374466565526563697069656e743a3a726563656976655a65726f45784660008301527f656543616c6c6261636b2f5245564552540000000000000000000000000000006020830152604082019050919050565b6102848161035d565b82525050565b600060408201905061029f60008301856101f7565b6102ac602083018461027b565b9392505050565b60006020820190506102c86000830184610206565b92915050565b600060208201905081810360008301526102e781610215565b9050919050565b600082825260208201905092915050565b600061030a8261033d565b9050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b610370816102ff565b811461037b57600080fd5b50565b6103878161035d565b811461039257600080fd5b5056fea26469706673582212203e65be5c11adab6efbefc571bbad95db669b8f0fd13bbabf5a0fb61abee7d5c964736f6c634300060c0033";

type TestFeeRecipientConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestFeeRecipientConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestFeeRecipient__factory extends ContractFactory {
  constructor(...args: TestFeeRecipientConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestFeeRecipient> {
    return super.deploy(overrides || {}) as Promise<TestFeeRecipient>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TestFeeRecipient {
    return super.attach(address) as TestFeeRecipient;
  }
  override connect(signer: Signer): TestFeeRecipient__factory {
    return super.connect(signer) as TestFeeRecipient__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestFeeRecipientInterface {
    return new utils.Interface(_abi) as TestFeeRecipientInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestFeeRecipient {
    return new Contract(address, _abi, signerOrProvider) as TestFeeRecipient;
  }
}
