/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  TestMigrator,
  TestMigratorInterface,
} from "../../../contracts/test/TestMigrator";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "callData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "TestMigrateCalled",
    type: "event",
  },
  {
    inputs: [],
    name: "failingMigrate",
    outputs: [
      {
        internalType: "bytes4",
        name: "success",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "revertingMigrate",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "succeedingMigrate",
    outputs: [
      {
        internalType: "bytes4",
        name: "success",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061047a806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80637bed0d4614610046578063d3a80e0014610064578063e9dd3b5e14610082575b600080fd5b61004e61008c565b60405161005b9190610320565b60405180910390f35b61006c610154565b6040516100799190610320565b60405180910390f35b61008a61021c565b005b60007fe47925e33e8d756f6e7b37949af1b9aa319f06d1e2a77e9975c524eb2dfc62946000363073ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156100f857600080fd5b505afa15801561010c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610130919061026c565b60405161013f9392919061033b565b60405180910390a163deadbeef60e01b905090565b60007fe47925e33e8d756f6e7b37949af1b9aa319f06d1e2a77e9975c524eb2dfc62946000363073ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156101c057600080fd5b505afa1580156101d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101f8919061026c565b6040516102079392919061033b565b60405180910390a1632c64c5ef60e01b905090565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024e9061036d565b60405180910390fd5b6000815190506102668161042d565b92915050565b60006020828403121561027e57600080fd5b600061028c84828501610257565b91505092915050565b61029e816103af565b82525050565b6102ad816103c1565b82525050565b60006102bf838561038d565b93506102cc83858461040d565b6102d58361041c565b840190509392505050565b60006102ed60068361039e565b91507f4f4f5053494500000000000000000000000000000000000000000000000000006000830152602082019050919050565b600060208201905061033560008301846102a4565b92915050565b600060408201905081810360008301526103568185876102b3565b90506103656020830184610295565b949350505050565b60006020820190508181036000830152610386816102e0565b9050919050565b600082825260208201905092915050565b600082825260208201905092915050565b60006103ba826103ed565b9050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b82818337600083830152505050565b6000601f19601f8301169050919050565b610436816103af565b811461044157600080fd5b5056fea264697066735822122077177ba2ac9ac12c54e90bf7b8e7b786a9a3218be1675fc713e6fb3ed97b005064736f6c634300060c0033";

type TestMigratorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestMigratorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestMigrator__factory extends ContractFactory {
  constructor(...args: TestMigratorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestMigrator> {
    return super.deploy(overrides || {}) as Promise<TestMigrator>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TestMigrator {
    return super.attach(address) as TestMigrator;
  }
  override connect(signer: Signer): TestMigrator__factory {
    return super.connect(signer) as TestMigrator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestMigratorInterface {
    return new utils.Interface(_abi) as TestMigratorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestMigrator {
    return new Contract(address, _abi, signerOrProvider) as TestMigrator;
  }
}
