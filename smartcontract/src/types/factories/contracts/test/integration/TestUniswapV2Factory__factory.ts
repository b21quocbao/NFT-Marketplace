/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  TestUniswapV2Factory,
  TestUniswapV2FactoryInterface,
} from "../../../../contracts/test/integration/TestUniswapV2Factory";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract TestUniswapV2Pool",
        name: "pool",
        type: "address",
      },
    ],
    name: "PoolCreated",
    type: "event",
  },
  {
    inputs: [],
    name: "POOL_INIT_CODE_HASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20TokenV06",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "contract IERC20TokenV06",
        name: "tokenB",
        type: "address",
      },
    ],
    name: "createPool",
    outputs: [
      {
        internalType: "contract TestUniswapV2Pool",
        name: "pool",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "creationParameters",
    outputs: [
      {
        internalType: "contract IERC20TokenV06",
        name: "token0",
        type: "address",
      },
      {
        internalType: "contract IERC20TokenV06",
        name: "token1",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20TokenV06",
        name: "",
        type: "address",
      },
      {
        internalType: "contract IERC20TokenV06",
        name: "",
        type: "address",
      },
    ],
    name: "getPool",
    outputs: [
      {
        internalType: "contract TestUniswapV2Pool",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b506040518060200161002190610048565b6020820181038252601f19601f820116604052508051906020012060808181525050610055565b6109ea8061130683390190565b60805161129761006f6000398061018452506112976000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063531aa03e146100515780637ba6f23114610081578063dc6fd8ab146100a0578063e3433615146100be575b600080fd5b61006b600480360381019061006691906105f7565b6100ee565b604051610078919061074d565b60405180910390f35b610089610130565b604051610097929190610724565b60405180910390f35b6100a8610182565b6040516100b59190610709565b60405180910390f35b6100d860048036038101906100d391906105f7565b6101a6565b6040516100e5919061074d565b60405180910390f35b60006020528160005260406000206020528060005260406000206000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60018060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008060008373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16106101e55783856101e8565b84845b91509150600073ffffffffffffffffffffffffffffffffffffffff166000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146102f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ed90610768565b60405180910390fd5b60405180604001604052808373ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff16815250600160008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505081816040516020016103dd9291906106dd565b604051602081830303815290604052805190602001206040516103ff906105d5565b8190604051809103906000f590508015801561041f573d6000803e3d6000fd5b509250826000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550826000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f83a48fbcfc991335314e74d0496aab6a1987e992ddc85dddbcc4d6dd6ef2e9fc836040516105c5919061074d565b60405180910390a1505092915050565b6109ea8061087883390190565b6000813590506105f181610860565b92915050565b6000806040838503121561060a57600080fd5b6000610618858286016105e2565b9250506020610629858286016105e2565b9150509250929050565b61063c816107ab565b82525050565b61064b816107e7565b82525050565b61066261065d826107e7565b61082f565b82525050565b6106718161080b565b82525050565b6000610684602883610788565b91507f54657374556e69737761705632466163746f72792f504f4f4c5f414c5245414460008301527f595f4558495354530000000000000000000000000000000000000000000000006020830152604082019050919050565b60006106e98285610651565b6014820191506106f98284610651565b6014820191508190509392505050565b600060208201905061071e6000830184610633565b92915050565b60006040820190506107396000830185610642565b6107466020830184610642565b9392505050565b60006020820190506107626000830184610668565b92915050565b6000602082019050818103600083015261078181610677565b9050919050565b600082825260208201905092915050565b60006107a4826107c7565b9050919050565b6000819050919050565b60006107c082610799565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107f2826107f9565b9050919050565b6000610804826107c7565b9050919050565b60006108168261081d565b9050919050565b6000610828826107c7565b9050919050565b600061083a82610841565b9050919050565b600061084c82610853565b9050919050565b60008160601b9050919050565b610869816107b5565b811461087457600080fd5b5056fe60c060405234801561001057600080fd5b50610019610116565b3373ffffffffffffffffffffffffffffffffffffffff16637ba6f2316040518163ffffffff1660e01b8152600401604080518083038186803b15801561005e57600080fd5b505afa158015610072573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061009691906101bd565b9050806000015181602001518073ffffffffffffffffffffffffffffffffffffffff1660a09073ffffffffffffffffffffffffffffffffffffffff1660601b8152508173ffffffffffffffffffffffffffffffffffffffff1660809073ffffffffffffffffffffffffffffffffffffffff1660601b81525050505061026e565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b60008151905061016b81610257565b92915050565b60006040828403121561018357600080fd5b61018d60406101e6565b9050600061019d8482850161015c565b60008301525060206101b18482850161015c565b60208301525092915050565b6000604082840312156101cf57600080fd5b60006101dd84828501610171565b91505092915050565b6000604051905081810181811067ffffffffffffffff8211171561020957600080fd5b8060405250919050565b600061021e82610237565b9050919050565b600061023082610213565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b61026081610225565b811461026b57600080fd5b50565b60805160601c60a05160601c61074a6102a0600039806101b3528061037852508060fb52806102c5525061074a6000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063022c0d9f1461005c5780630902f1ac146100785780630dfe16811461009857806318243296146100b6578063d21220a7146100d2575b600080fd5b610076600480360381019061007191906104c5565b6100f0565b005b610080610267565b60405161008f939291906105d4565b60405180910390f35b6100a06102c3565b6040516100ad91906105b9565b60405180910390f35b6100d060048036038101906100cb9190610476565b6102e7565b005b6100da610376565b6040516100e791906105b9565b60405180910390f35b60008511156101a8577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84876040518363ffffffff1660e01b8152600401610154929190610590565b602060405180830381600087803b15801561016e57600080fd5b505af1158015610182573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101a6919061044d565b505b6000841115610260577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84866040518363ffffffff1660e01b815260040161020c929190610590565b602060405180830381600087803b15801561022657600080fd5b505af115801561023a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061025e919061044d565b505b5050505050565b60008060008060009054906101000a90046dffffffffffffffffffffffffffff166000600e9054906101000a90046dffffffffffffffffffffffffffff166000601c9054906101000a900463ffffffff16925092509250909192565b7f000000000000000000000000000000000000000000000000000000000000000081565b826000806101000a8154816dffffffffffffffffffffffffffff02191690836dffffffffffffffffffffffffffff160217905550816000600e6101000a8154816dffffffffffffffffffffffffffff02191690836dffffffffffffffffffffffffffff160217905550806000601c6101000a81548163ffffffff021916908363ffffffff160217905550505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000813590506103a9816106a1565b92915050565b6000815190506103be816106b8565b92915050565b60008083601f8401126103d657600080fd5b8235905067ffffffffffffffff8111156103ef57600080fd5b60208301915083600182028301111561040757600080fd5b9250929050565b60008135905061041d816106cf565b92915050565b600081359050610432816106e6565b92915050565b600081359050610447816106fd565b92915050565b60006020828403121561045f57600080fd5b600061046d848285016103af565b91505092915050565b60008060006060848603121561048b57600080fd5b60006104998682870161040e565b93505060206104aa8682870161040e565b92505060406104bb86828701610438565b9150509250925092565b6000806000806000608086880312156104dd57600080fd5b60006104eb88828901610423565b95505060206104fc88828901610423565b945050604061050d8882890161039a565b935050606086013567ffffffffffffffff81111561052a57600080fd5b610536888289016103c4565b92509250509295509295909350565b61054e8161060b565b82525050565b61055d8161067d565b82525050565b61056c81610629565b82525050565b61057b81610663565b82525050565b61058a8161066d565b82525050565b60006040820190506105a56000830185610545565b6105b26020830184610572565b9392505050565b60006020820190506105ce6000830184610554565b92915050565b60006060820190506105e96000830186610563565b6105f66020830185610563565b6106036040830184610581565b949350505050565b600061061682610643565b9050919050565b60008115159050919050565b60006dffffffffffffffffffffffffffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b60006106888261068f565b9050919050565b600061069a82610643565b9050919050565b6106aa8161060b565b81146106b557600080fd5b50565b6106c18161061d565b81146106cc57600080fd5b50565b6106d881610629565b81146106e357600080fd5b50565b6106ef81610663565b81146106fa57600080fd5b50565b6107068161066d565b811461071157600080fd5b5056fea26469706673582212203854a303972ae03b27b18f9a0e433e013cfc94ed80fb6dab3ef99fc262508e0864736f6c634300060c0033a26469706673582212201435d09c394ee6d42574709033adf22a62977a2d5199b06d741c525f4fd3c05364736f6c634300060c003360c060405234801561001057600080fd5b50610019610116565b3373ffffffffffffffffffffffffffffffffffffffff16637ba6f2316040518163ffffffff1660e01b8152600401604080518083038186803b15801561005e57600080fd5b505afa158015610072573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061009691906101bd565b9050806000015181602001518073ffffffffffffffffffffffffffffffffffffffff1660a09073ffffffffffffffffffffffffffffffffffffffff1660601b8152508173ffffffffffffffffffffffffffffffffffffffff1660809073ffffffffffffffffffffffffffffffffffffffff1660601b81525050505061026e565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b60008151905061016b81610257565b92915050565b60006040828403121561018357600080fd5b61018d60406101e6565b9050600061019d8482850161015c565b60008301525060206101b18482850161015c565b60208301525092915050565b6000604082840312156101cf57600080fd5b60006101dd84828501610171565b91505092915050565b6000604051905081810181811067ffffffffffffffff8211171561020957600080fd5b8060405250919050565b600061021e82610237565b9050919050565b600061023082610213565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b61026081610225565b811461026b57600080fd5b50565b60805160601c60a05160601c61074a6102a0600039806101b3528061037852508060fb52806102c5525061074a6000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063022c0d9f1461005c5780630902f1ac146100785780630dfe16811461009857806318243296146100b6578063d21220a7146100d2575b600080fd5b610076600480360381019061007191906104c5565b6100f0565b005b610080610267565b60405161008f939291906105d4565b60405180910390f35b6100a06102c3565b6040516100ad91906105b9565b60405180910390f35b6100d060048036038101906100cb9190610476565b6102e7565b005b6100da610376565b6040516100e791906105b9565b60405180910390f35b60008511156101a8577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84876040518363ffffffff1660e01b8152600401610154929190610590565b602060405180830381600087803b15801561016e57600080fd5b505af1158015610182573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101a6919061044d565b505b6000841115610260577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84866040518363ffffffff1660e01b815260040161020c929190610590565b602060405180830381600087803b15801561022657600080fd5b505af115801561023a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061025e919061044d565b505b5050505050565b60008060008060009054906101000a90046dffffffffffffffffffffffffffff166000600e9054906101000a90046dffffffffffffffffffffffffffff166000601c9054906101000a900463ffffffff16925092509250909192565b7f000000000000000000000000000000000000000000000000000000000000000081565b826000806101000a8154816dffffffffffffffffffffffffffff02191690836dffffffffffffffffffffffffffff160217905550816000600e6101000a8154816dffffffffffffffffffffffffffff02191690836dffffffffffffffffffffffffffff160217905550806000601c6101000a81548163ffffffff021916908363ffffffff160217905550505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000813590506103a9816106a1565b92915050565b6000815190506103be816106b8565b92915050565b60008083601f8401126103d657600080fd5b8235905067ffffffffffffffff8111156103ef57600080fd5b60208301915083600182028301111561040757600080fd5b9250929050565b60008135905061041d816106cf565b92915050565b600081359050610432816106e6565b92915050565b600081359050610447816106fd565b92915050565b60006020828403121561045f57600080fd5b600061046d848285016103af565b91505092915050565b60008060006060848603121561048b57600080fd5b60006104998682870161040e565b93505060206104aa8682870161040e565b92505060406104bb86828701610438565b9150509250925092565b6000806000806000608086880312156104dd57600080fd5b60006104eb88828901610423565b95505060206104fc88828901610423565b945050604061050d8882890161039a565b935050606086013567ffffffffffffffff81111561052a57600080fd5b610536888289016103c4565b92509250509295509295909350565b61054e8161060b565b82525050565b61055d8161067d565b82525050565b61056c81610629565b82525050565b61057b81610663565b82525050565b61058a8161066d565b82525050565b60006040820190506105a56000830185610545565b6105b26020830184610572565b9392505050565b60006020820190506105ce6000830184610554565b92915050565b60006060820190506105e96000830186610563565b6105f66020830185610563565b6106036040830184610581565b949350505050565b600061061682610643565b9050919050565b60008115159050919050565b60006dffffffffffffffffffffffffffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b60006106888261068f565b9050919050565b600061069a82610643565b9050919050565b6106aa8161060b565b81146106b557600080fd5b50565b6106c18161061d565b81146106cc57600080fd5b50565b6106d881610629565b81146106e357600080fd5b50565b6106ef81610663565b81146106fa57600080fd5b50565b6107068161066d565b811461071157600080fd5b5056fea26469706673582212203854a303972ae03b27b18f9a0e433e013cfc94ed80fb6dab3ef99fc262508e0864736f6c634300060c0033";

type TestUniswapV2FactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestUniswapV2FactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestUniswapV2Factory__factory extends ContractFactory {
  constructor(...args: TestUniswapV2FactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestUniswapV2Factory> {
    return super.deploy(overrides || {}) as Promise<TestUniswapV2Factory>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TestUniswapV2Factory {
    return super.attach(address) as TestUniswapV2Factory;
  }
  override connect(signer: Signer): TestUniswapV2Factory__factory {
    return super.connect(signer) as TestUniswapV2Factory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestUniswapV2FactoryInterface {
    return new utils.Interface(_abi) as TestUniswapV2FactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestUniswapV2Factory {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TestUniswapV2Factory;
  }
}
