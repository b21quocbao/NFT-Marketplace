/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  TestUniswapV3Pool,
  TestUniswapV3PoolInterface,
} from "../../../../../contracts/test/integration/TestUniswapV3Pool.sol/TestUniswapV3Pool";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "fee",
    outputs: [
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "bool",
        name: "zeroForOne",
        type: "bool",
      },
      {
        internalType: "int256",
        name: "amountSpecified",
        type: "int256",
      },
      {
        internalType: "uint160",
        name: "",
        type: "uint160",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "swap",
    outputs: [
      {
        internalType: "int256",
        name: "amount0",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "amount1",
        type: "int256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token0",
    outputs: [
      {
        internalType: "contract IERC20TokenV06",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token1",
    outputs: [
      {
        internalType: "contract IERC20TokenV06",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60e06040523480156200001157600080fd5b506200001c62000139565b3373ffffffffffffffffffffffffffffffffffffffff16637ba6f2316040518163ffffffff1660e01b815260040160606040518083038186803b1580156200006357600080fd5b505afa15801562000078573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200009e919062000222565b90508060000151816020015182604001518062ffffff1660c09062ffffff1660e81b8152508173ffffffffffffffffffffffffffffffffffffffff1660a09073ffffffffffffffffffffffffffffffffffffffff1660601b8152508273ffffffffffffffffffffffffffffffffffffffff1660809073ffffffffffffffffffffffffffffffffffffffff1660601b8152505050505062000307565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600062ffffff1681525090565b6000815190506200019c81620002d3565b92915050565b600060608284031215620001b557600080fd5b620001c160606200024e565b90506000620001d3848285016200018b565b6000830152506020620001e9848285016200018b565b6020830152506040620001ff848285016200020b565b60408301525092915050565b6000815190506200021c81620002ed565b92915050565b6000606082840312156200023557600080fd5b60006200024584828501620001a2565b91505092915050565b6000604051905081810181811067ffffffffffffffff821117156200027257600080fd5b8060405250919050565b60006200028982620002a4565b9050919050565b60006200029d826200027c565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062ffffff82169050919050565b620002de8162000290565b8114620002ea57600080fd5b50565b620002f881620002c4565b81146200030457600080fd5b50565b60805160601c60a05160601c60c05160e81c610b236200035a6000398061062a5250806101b4528061026e52806104fc528061060652508060de5280610107528061032a528061044d5250610b236000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80630dfe168114610051578063128acb081461006f578063d21220a7146100a0578063ddca3f43146100be575b600080fd5b6100596100dc565b60405161006691906108f4565b60405180910390f35b61008960048036038101906100849190610714565b610100565b60405161009792919061090f565b60405180910390f35b6100a8610604565b6040516100b591906108f4565b60405180910390f35b6100c6610628565b6040516100d39190610998565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000081565b60008060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161015e91906108b0565b60206040518083038186803b15801561017657600080fd5b505afa15801561018a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101ae91906107cf565b905060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161020b91906108b0565b60206040518083038186803b15801561022357600080fd5b505afa158015610237573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061025b91906107cf565b9050881561031f578793508060000392507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8b836040518363ffffffff1660e01b81526004016102c79291906108cb565b602060405180830381600087803b1580156102e157600080fd5b505af11580156102f5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061031991906107a6565b506103d7565b8160000393508792507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8b846040518363ffffffff1660e01b81526004016103839291906108cb565b602060405180830381600087803b15801561039d57600080fd5b505af11580156103b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d591906107a6565b505b3373ffffffffffffffffffffffffffffffffffffffff1663fa461e33858589896040518563ffffffff1660e01b81526004016104169493929190610938565b600060405180830381600087803b15801561043057600080fd5b505af1158015610444573d6000803e3d6000fd5b505050506000827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016104a491906108b0565b60206040518083038186803b1580156104bc57600080fd5b505afa1580156104d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f491906107cf565b0390506000827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161055391906108b0565b60206040518083038186803b15801561056b57600080fd5b505afa15801561057f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a391906107cf565b0390508582121580156105b65750848112155b6105f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ec90610978565b60405180910390fd5b50505050965096945050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008135905061065b81610a7a565b92915050565b60008135905061067081610a91565b92915050565b60008151905061068581610a91565b92915050565b60008083601f84011261069d57600080fd5b8235905067ffffffffffffffff8111156106b657600080fd5b6020830191508360018202830111156106ce57600080fd5b9250929050565b6000813590506106e481610aa8565b92915050565b6000813590506106f981610abf565b92915050565b60008151905061070e81610ad6565b92915050565b60008060008060008060a0878903121561072d57600080fd5b600061073b89828a0161064c565b965050602061074c89828a01610661565b955050604061075d89828a016106d5565b945050606061076e89828a016106ea565b935050608087013567ffffffffffffffff81111561078b57600080fd5b61079789828a0161068b565b92509250509295509295509295565b6000602082840312156107b857600080fd5b60006107c684828501610676565b91505092915050565b6000602082840312156107e157600080fd5b60006107ef848285016106ff565b91505092915050565b610801816109d5565b82525050565b600061081383856109b3565b9350610820838584610a5a565b61082983610a69565b840190509392505050565b61083d81610a36565b82525050565b61084c816109f3565b82525050565b600061085f601f836109c4565b91507f54657374556e69737761705633506f6f6c2f535741505f4e4f545f50414944006000830152602082019050919050565b61089b81610a1d565b82525050565b6108aa81610a2c565b82525050565b60006020820190506108c560008301846107f8565b92915050565b60006040820190506108e060008301856107f8565b6108ed60208301846108a1565b9392505050565b60006020820190506109096000830184610834565b92915050565b60006040820190506109246000830185610843565b6109316020830184610843565b9392505050565b600060608201905061094d6000830187610843565b61095a6020830186610843565b818103604083015261096d818486610807565b905095945050505050565b6000602082019050818103600083015261099181610852565b9050919050565b60006020820190506109ad6000830184610892565b92915050565b600082825260208201905092915050565b600082825260208201905092915050565b60006109e0826109fd565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062ffffff82169050919050565b6000819050919050565b6000610a4182610a48565b9050919050565b6000610a53826109fd565b9050919050565b82818337600083830152505050565b6000601f19601f8301169050919050565b610a83816109d5565b8114610a8e57600080fd5b50565b610a9a816109e7565b8114610aa557600080fd5b50565b610ab1816109f3565b8114610abc57600080fd5b50565b610ac8816109fd565b8114610ad357600080fd5b50565b610adf81610a2c565b8114610aea57600080fd5b5056fea264697066735822122028250b066975615f2a2fb3f592cf2c293a4fff12f7935e3e630d1e1112bb02f364736f6c634300060c0033";

type TestUniswapV3PoolConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestUniswapV3PoolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestUniswapV3Pool__factory extends ContractFactory {
  constructor(...args: TestUniswapV3PoolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestUniswapV3Pool> {
    return super.deploy(overrides || {}) as Promise<TestUniswapV3Pool>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TestUniswapV3Pool {
    return super.attach(address) as TestUniswapV3Pool;
  }
  override connect(signer: Signer): TestUniswapV3Pool__factory {
    return super.connect(signer) as TestUniswapV3Pool__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestUniswapV3PoolInterface {
    return new utils.Interface(_abi) as TestUniswapV3PoolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestUniswapV3Pool {
    return new Contract(address, _abi, signerOrProvider) as TestUniswapV3Pool;
  }
}
