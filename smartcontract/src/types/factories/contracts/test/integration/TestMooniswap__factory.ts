/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  TestMooniswap,
  TestMooniswapInterface,
} from "../../../../contracts/test/integration/TestMooniswap";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "contract IERC20TokenV06",
        name: "sellToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract IERC20TokenV06",
        name: "buyToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "sellAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "minBuyAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "referral",
        type: "address",
      },
    ],
    name: "MooniswapCalled",
    type: "event",
  },
  {
    inputs: [],
    name: "nextBuyAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amt",
        type: "uint256",
      },
    ],
    name: "setNextBoughtAmount",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20TokenV06",
        name: "sellToken",
        type: "address",
      },
      {
        internalType: "contract TestMintableERC20Token",
        name: "buyToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "sellAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minBuyAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "referral",
        type: "address",
      },
    ],
    name: "swap",
    outputs: [
      {
        internalType: "uint256",
        name: "boughtAmount",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506107e0806100206000396000f3fe6080604052600436106100345760003560e01c80632f733ef614610039578063d5bcb9b514610055578063eff5bb1c14610085575b600080fd5b610053600480360381019061004e919061045f565b6100b0565b005b61006f600480360381019061006a91906103e8565b6100ba565b60405161007c91906105e4565b60405180910390f35b34801561009157600080fd5b5061009a610350565b6040516100a791906105e4565b60405180910390f35b8060008190555050565b60007faa342d629894ef154c7d1f0791aa8a76e4fb14291563378c99103127e28ed80c3487878787876040516100f5969594939291906105ff565b60405180910390a16000549050600080819055508281101561014c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610143906105a4565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614610215578573ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b81526004016101bd93929190610544565b602060405180830381600087803b1580156101d757600080fd5b505af11580156101eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061020f91906103bf565b50610258565b348414610257576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024e906105c4565b60405180910390fd5b5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614156102d9573373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156102d3573d6000803e3d6000fd5b50610347565b8473ffffffffffffffffffffffffffffffffffffffff166340c10f1933836040518363ffffffff1660e01b815260040161031492919061057b565b600060405180830381600087803b15801561032e57600080fd5b505af1158015610342573d6000803e3d6000fd5b505050505b95945050505050565b60005481565b60008135905061036581610737565b92915050565b60008151905061037a8161074e565b92915050565b60008135905061038f81610765565b92915050565b6000813590506103a48161077c565b92915050565b6000813590506103b981610793565b92915050565b6000602082840312156103d157600080fd5b60006103df8482850161036b565b91505092915050565b600080600080600060a0868803121561040057600080fd5b600061040e88828901610380565b955050602061041f88828901610395565b9450506040610430888289016103aa565b9350506060610441888289016103aa565b925050608061045288828901610356565b9150509295509295909350565b60006020828403121561047157600080fd5b600061047f848285016103aa565b91505092915050565b610491816106dd565b82525050565b6104a081610671565b82525050565b6104af816106ef565b82525050565b60006104c2600b83610660565b91507f554e444552424f554748540000000000000000000000000000000000000000006000830152602082019050919050565b6000610502600e83610660565b91507f4e4f545f454e4f5547485f4554480000000000000000000000000000000000006000830152602082019050919050565b61053e816106d3565b82525050565b60006060820190506105596000830186610488565b6105666020830185610497565b6105736040830184610535565b949350505050565b60006040820190506105906000830185610488565b61059d6020830184610535565b9392505050565b600060208201905081810360008301526105bd816104b5565b9050919050565b600060208201905081810360008301526105dd816104f5565b9050919050565b60006020820190506105f96000830184610535565b92915050565b600060c0820190506106146000830189610535565b61062160208301886104a6565b61062e60408301876104a6565b61063b6060830186610535565b6106486080830185610535565b61065560a0830184610497565b979650505050505050565b600082825260208201905092915050565b600061067c826106b3565b9050919050565b60008115159050919050565b600061069a82610671565b9050919050565b60006106ac82610671565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006106e882610713565b9050919050565b60006106fa82610701565b9050919050565b600061070c826106b3565b9050919050565b600061071e82610725565b9050919050565b6000610730826106b3565b9050919050565b61074081610671565b811461074b57600080fd5b50565b61075781610683565b811461076257600080fd5b50565b61076e8161068f565b811461077957600080fd5b50565b610785816106a1565b811461079057600080fd5b50565b61079c816106d3565b81146107a757600080fd5b5056fea264697066735822122016b8a4a315fd9f2c924776393a8e44bcc268282b916871a4576472435305348364736f6c634300060c0033";

type TestMooniswapConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestMooniswapConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestMooniswap__factory extends ContractFactory {
  constructor(...args: TestMooniswapConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestMooniswap> {
    return super.deploy(overrides || {}) as Promise<TestMooniswap>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TestMooniswap {
    return super.attach(address) as TestMooniswap;
  }
  override connect(signer: Signer): TestMooniswap__factory {
    return super.connect(signer) as TestMooniswap__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestMooniswapInterface {
    return new utils.Interface(_abi) as TestMooniswapInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestMooniswap {
    return new Contract(address, _abi, signerOrProvider) as TestMooniswap;
  }
}
