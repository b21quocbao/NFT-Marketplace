/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  TestZeroExFeature,
  TestZeroExFeatureInterface,
} from "../../../contracts/test/TestZeroExFeature";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    anonymous: false,
    inputs: [],
    name: "NotPayableFnCalled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "PayableFnCalled",
    type: "event",
  },
  {
    inputs: [],
    name: "internalFn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "notPayableFn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "payableFn",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "unimplmentedFn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b503073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505060805160601c6102a9610060600039506102a96000f3fe60806040526004361061003f5760003560e01c8063055365c8146100445780630aa225f61461005b5780634ca9af38146100725780637ef135f514610089575b600080fd5b34801561005057600080fd5b50610059610093565b005b34801561006757600080fd5b506100706100da565b005b34801561007e57600080fd5b506100876100dc565b005b61009161010a565b005b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146100d8576100d76100d233610143565b6101db565b5b565b565b7f853944c89195a950bcc60453a9db3fa373f0fd94da7646ebe4ce2486019a8fce60405160405180910390a1565b7fffad500b2647b958d58303af2c5ccbde5b48b0035a9a4205669ce384faa3248d34604051610139919061021c565b60405180910390a1565b60607ff0ec779b0bcda6d84abf99ee2c67647d1100ebbb553a9c2d1c2ba1579592832c826040516024016101779190610201565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050509050919050565b805160208201fd5b6101ec81610237565b82525050565b6101fb81610269565b82525050565b600060208201905061021660008301846101e3565b92915050565b600060208201905061023160008301846101f2565b92915050565b600061024282610249565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600081905091905056fea2646970667358221220a09cca70b6f469a3f131d25f20d108cfa9f73e6ffe4de2cac8bcd062dfe2b5fe64736f6c634300060c0033";

type TestZeroExFeatureConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestZeroExFeatureConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestZeroExFeature__factory extends ContractFactory {
  constructor(...args: TestZeroExFeatureConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestZeroExFeature> {
    return super.deploy(overrides || {}) as Promise<TestZeroExFeature>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TestZeroExFeature {
    return super.attach(address) as TestZeroExFeature;
  }
  override connect(signer: Signer): TestZeroExFeature__factory {
    return super.connect(signer) as TestZeroExFeature__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestZeroExFeatureInterface {
    return new utils.Interface(_abi) as TestZeroExFeatureInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestZeroExFeature {
    return new Contract(address, _abi, signerOrProvider) as TestZeroExFeature;
  }
}
