/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  TestTransformerHost,
  TestTransformerHostInterface,
} from "../../../contracts/test/TestTransformerHost";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20Transformer",
        name: "transformer",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address payable",
            name: "sender",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct IERC20Transformer.TransformContext",
        name: "context",
        type: "tuple",
      },
    ],
    name: "rawExecuteTransform",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610654806100206000396000f3fe6080604052600436106100225760003560e01c8063844e7c5b1461002e57610029565b3661002957005b600080fd5b34801561003a57600080fd5b5061005560048036038101906100509190610274565b610057565b005b600060608373ffffffffffffffffffffffffffffffffffffffff1663832b24bb60e01b8460405160240161008b919061043c565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516100f59190610405565b600060405180830381855af49150503d8060008114610130576040519150601f19603f3d011682016040523d82523d6000602084013e610135565b606091505b50915091508161014957610148816101e9565b5b6313c9929e60e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681806020019051810190610184919061024b565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146101e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101da9061041c565b60405180910390fd5b50505050565b805160208201fd5b600081359050610200816105d9565b92915050565b600081519050610215816105f0565b92915050565b60008135905061022a81610607565b92915050565b60006060828403121561024257600080fd5b81905092915050565b60006020828403121561025d57600080fd5b600061026b84828501610206565b91505092915050565b6000806040838503121561028757600080fd5b60006102958582860161021b565b925050602083013567ffffffffffffffff8111156102b257600080fd5b6102be85828601610230565b9150509250929050565b6102d181610516565b82525050565b60006102e38385610469565b93506102f0838584610586565b6102f9836105c8565b840190509392505050565b600061030f8261045e565b610319818561047a565b9350610329818560208601610595565b80840191505092915050565b6000610342602e83610485565b91507f546573745472616e73666f726d6572486f73742f494e56414c49445f5452414e60008301527f53464f524d45525f524553554c540000000000000000000000000000000000006020830152604082019050919050565b6000606083016103ae6000840184610496565b6103bb60008601826102c8565b506103c96020840184610496565b6103d660208601826102c8565b506103e460408401846104ad565b85830360408701526103f78382846102d7565b925050508091505092915050565b60006104118284610304565b915081905092915050565b6000602082019050818103600083015261043581610335565b9050919050565b60006020820190508181036000830152610456818461039b565b905092915050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b60006104a560208401846101f1565b905092915050565b600080833560016020038436030381126104c657600080fd5b83810192508235915060208301925067ffffffffffffffff8211156104ea57600080fd5b6001820236038413156104fc57600080fd5b509250929050565b600061050f82610566565b9050919050565b600061052182610566565b9050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600061055f82610504565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b82818337600083830152505050565b60005b838110156105b3578082015181840152602081019050610598565b838111156105c2576000848401525b50505050565b6000601f19601f8301169050919050565b6105e281610516565b81146105ed57600080fd5b50565b6105f981610528565b811461060457600080fd5b50565b61061081610554565b811461061b57600080fd5b5056fea26469706673582212204fbe78e7fc856c2371ef00fc232d2c2478805319bc2e796c3b8aed2ff309232264736f6c634300060c0033";

type TestTransformerHostConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestTransformerHostConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestTransformerHost__factory extends ContractFactory {
  constructor(...args: TestTransformerHostConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestTransformerHost> {
    return super.deploy(overrides || {}) as Promise<TestTransformerHost>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TestTransformerHost {
    return super.attach(address) as TestTransformerHost;
  }
  override connect(signer: Signer): TestTransformerHost__factory {
    return super.connect(signer) as TestTransformerHost__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestTransformerHostInterface {
    return new utils.Interface(_abi) as TestTransformerHostInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestTransformerHost {
    return new Contract(address, _abi, signerOrProvider) as TestTransformerHost;
  }
}
