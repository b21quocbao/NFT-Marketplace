/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  TestRfqOriginRegistration,
  TestRfqOriginRegistrationInterface,
} from "../../../contracts/test/TestRfqOriginRegistration";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract INativeOrdersFeature",
        name: "feature",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "origins",
        type: "address[]",
      },
      {
        internalType: "bool",
        name: "allowed",
        type: "bool",
      },
    ],
    name: "registerAllowedRfqOrigins",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610404806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063564fc11914610030575b600080fd5b61004a60048036038101906100459190610180565b61004c565b005b8273ffffffffffffffffffffffffffffffffffffffff1663b09f1fb183836040518363ffffffff1660e01b815260040161008792919061027b565b600060405180830381600087803b1580156100a157600080fd5b505af11580156100b5573d6000803e3d6000fd5b50505050505050565b6000813590506100cd81610389565b92915050565b600082601f8301126100e457600080fd5b81356100f76100f2826102d8565b6102ab565b9150818183526020840193506020810190508385602084028201111561011c57600080fd5b60005b8381101561014c578161013288826100be565b84526020840193506020830192505060018101905061011f565b5050505092915050565b600081359050610165816103a0565b92915050565b60008135905061017a816103b7565b92915050565b60008060006060848603121561019557600080fd5b60006101a38682870161016b565b935050602084013567ffffffffffffffff8111156101c057600080fd5b6101cc868287016100d3565b92505060406101dd86828701610156565b9150509250925092565b60006101f383836101ff565b60208301905092915050565b61020881610339565b82525050565b600061021982610310565b6102238185610328565b935061022e83610300565b8060005b8381101561025f57815161024688826101e7565b97506102518361031b565b925050600181019050610232565b5085935050505092915050565b6102758161034b565b82525050565b60006040820190508181036000830152610295818561020e565b90506102a4602083018461026c565b9392505050565b6000604051905081810181811067ffffffffffffffff821117156102ce57600080fd5b8060405250919050565b600067ffffffffffffffff8211156102ef57600080fd5b602082029050602081019050919050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600061034482610369565b9050919050565b60008115159050919050565b600061036282610339565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b61039281610339565b811461039d57600080fd5b50565b6103a98161034b565b81146103b457600080fd5b50565b6103c081610357565b81146103cb57600080fd5b5056fea2646970667358221220af6afc2ec6b9f571013dbbd83238890f28525a386f47b25c1e1a3c6b8eb18c9164736f6c634300060c0033";

type TestRfqOriginRegistrationConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestRfqOriginRegistrationConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestRfqOriginRegistration__factory extends ContractFactory {
  constructor(...args: TestRfqOriginRegistrationConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestRfqOriginRegistration> {
    return super.deploy(overrides || {}) as Promise<TestRfqOriginRegistration>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TestRfqOriginRegistration {
    return super.attach(address) as TestRfqOriginRegistration;
  }
  override connect(signer: Signer): TestRfqOriginRegistration__factory {
    return super.connect(signer) as TestRfqOriginRegistration__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestRfqOriginRegistrationInterface {
    return new utils.Interface(_abi) as TestRfqOriginRegistrationInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestRfqOriginRegistration {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TestRfqOriginRegistration;
  }
}
