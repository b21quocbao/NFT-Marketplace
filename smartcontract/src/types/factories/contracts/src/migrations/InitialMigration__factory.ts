/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  InitialMigration,
  InitialMigrationInterface,
} from "../../../../contracts/src/migrations/InitialMigration";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "initializeCaller_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        components: [
          {
            internalType: "contract SimpleFunctionRegistryFeature",
            name: "registry",
            type: "address",
          },
          {
            internalType: "contract OwnableFeature",
            name: "ownable",
            type: "address",
          },
        ],
        internalType: "struct InitialMigration.BootstrapFeatures",
        name: "features",
        type: "tuple",
      },
    ],
    name: "bootstrap",
    outputs: [
      {
        internalType: "bytes4",
        name: "success",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "ethRecipient",
        type: "address",
      },
    ],
    name: "die",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initializeCaller",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "owner",
        type: "address",
      },
      {
        internalType: "contract ZeroEx",
        name: "zeroEx",
        type: "address",
      },
      {
        components: [
          {
            internalType: "contract SimpleFunctionRegistryFeature",
            name: "registry",
            type: "address",
          },
          {
            internalType: "contract OwnableFeature",
            name: "ownable",
            type: "address",
          },
        ],
        internalType: "struct InitialMigration.BootstrapFeatures",
        name: "features",
        type: "tuple",
      },
    ],
    name: "initializeZeroEx",
    outputs: [
      {
        internalType: "contract ZeroEx",
        name: "_zeroEx",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c060405234801561001057600080fd5b50604051610f3c380380610f3c833981810160405281019061003291906100bb565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815250503073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1660601b815250505061012d565b6000815190506100b581610116565b92915050565b6000602082840312156100cd57600080fd5b60006100db848285016100a6565b91505092915050565b60006100ef826100f6565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b61011f816100e4565b811461012a57600080fd5b50565b60805160601c60a05160601c610de161015b600039806104dc5250806102cf52806102f55250610de16000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806308cf7934146100515780635f136a4a14610081578063a23ce6ce1461009f578063c9353cb5146100cf575b600080fd5b61006b60048036038101906100669190610864565b6100eb565b6040516100789190610ab1565b60405180910390f35b6100896102cd565b6040516100969190610a22565b60405180910390f35b6100b960048036038101906100b49190610815565b6102f1565b6040516100c69190610af5565b60405180910390f35b6100e960048036038101906100e491906107ec565b6104da565b005b6000610165826000015163fb969b0a60e01b604051602401604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610581565b6101dd826020015163fb969b0a60e01b604051602401604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610581565b3073ffffffffffffffffffffffffffffffffffffffff16639db64a40630ee8be1b60e01b60006040518363ffffffff1660e01b8152600401610220929190610acc565b600060405180830381600087803b15801561023a57600080fd5b505af115801561024e573d6000803e3d6000fd5b505050503073ffffffffffffffffffffffffffffffffffffffff1663f2fde38b846040518263ffffffff1660e01b815260040161028b9190610a22565b600060405180830381600087803b1580156102a557600080fd5b505af11580156102b9573d6000803e3d6000fd5b5050505063d150751b60e01b905092915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610381576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037890610b10565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff166373f208d5306308cf793460e01b87866040516024016103b9929190610a58565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518363ffffffff1660e01b8152600401610433929190610a81565b600060405180830381600087803b15801561044d57600080fd5b505af1158015610461573d6000803e3d6000fd5b505050503073ffffffffffffffffffffffffffffffffffffffff1663c9353cb5856040518263ffffffff1660e01b815260040161049e9190610a3d565b600060405180830381600087803b1580156104b857600080fd5b505af11580156104cc573d6000803e3d6000fd5b505050508290509392505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610568576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055f90610b10565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16ff5b600060608373ffffffffffffffffffffffffffffffffffffffff16836040516105aa9190610a0b565b600060405180830381855af49150503d80600081146105e5576040519150601f19603f3d011682016040523d82523d6000602084013e6105ea565b606091505b50915091508115806105fe57506020815114155b80610661575063d150751b60e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168180602001905181019061063f91906108a0565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614155b1561067957610678610673858361067f565b61071a565b5b50505050565b60607fd19d65df6830e3cb0da1e12b8e9738e2dc473f830d8af813bcc031eb5a1675d183836040516024016106b5929190610a81565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905092915050565b805160208201fd5b60008135905061073181610d21565b92915050565b60008135905061074681610d38565b92915050565b60008151905061075b81610d4f565b92915050565b60008135905061077081610d66565b92915050565b60008135905061078581610d7d565b92915050565b60008135905061079a81610d94565b92915050565b6000604082840312156107b257600080fd5b6107bc6040610b30565b905060006107cc84828501610776565b60008301525060206107e084828501610761565b60208301525092915050565b6000602082840312156107fe57600080fd5b600061080c84828501610737565b91505092915050565b60008060006080848603121561082a57600080fd5b600061083886828701610737565b93505060206108498682870161078b565b925050604061085a868287016107a0565b9150509250925092565b6000806060838503121561087757600080fd5b600061088585828601610722565b9250506020610896858286016107a0565b9150509250929050565b6000602082840312156108b257600080fd5b60006108c08482850161074c565b91505092915050565b6108d281610c3b565b82525050565b6108e181610ba7565b82525050565b6108f081610b95565b82525050565b6108ff81610bb9565b82525050565b600061091082610b5d565b61091a8185610b68565b935061092a818560208601610cdd565b61093381610d10565b840191505092915050565b600061094982610b5d565b6109538185610b79565b9350610963818560208601610cdd565b80840191505092915050565b61097881610c4d565b82525050565b61098781610c71565b82525050565b61099681610c95565b82525050565b60006109a9601f83610b84565b91507f496e697469616c4d6967726174696f6e2f494e56414c49445f53454e444552006000830152602082019050919050565b6040820160008201516109f2600085018261097e565b506020820151610a05602085018261096f565b50505050565b6000610a17828461093e565b915081905092915050565b6000602082019050610a3760008301846108e7565b92915050565b6000602082019050610a5260008301846108d8565b92915050565b6000606082019050610a6d60008301856108d8565b610a7a60208301846109dc565b9392505050565b6000604082019050610a9660008301856108e7565b8181036020830152610aa88184610905565b90509392505050565b6000602082019050610ac660008301846108f6565b92915050565b6000604082019050610ae160008301856108f6565b610aee60208301846108c9565b9392505050565b6000602082019050610b0a600083018461098d565b92915050565b60006020820190508181036000830152610b298161099c565b9050919050565b6000604051905081810181811067ffffffffffffffff82111715610b5357600080fd5b8060405250919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b6000610ba082610c1b565b9050919050565b6000610bb282610c1b565b9050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6000610bf082610b95565b9050919050565b6000610c0282610b95565b9050919050565b6000610c1482610ba7565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610c4682610cb9565b9050919050565b6000610c5882610c5f565b9050919050565b6000610c6a82610c1b565b9050919050565b6000610c7c82610c83565b9050919050565b6000610c8e82610c1b565b9050919050565b6000610ca082610ca7565b9050919050565b6000610cb282610c1b565b9050919050565b6000610cc482610ccb565b9050919050565b6000610cd682610c1b565b9050919050565b60005b83811015610cfb578082015181840152602081019050610ce0565b83811115610d0a576000848401525b50505050565b6000601f19601f8301169050919050565b610d2a81610b95565b8114610d3557600080fd5b50565b610d4181610ba7565b8114610d4c57600080fd5b50565b610d5881610bb9565b8114610d6357600080fd5b50565b610d6f81610be5565b8114610d7a57600080fd5b50565b610d8681610bf7565b8114610d9157600080fd5b50565b610d9d81610c09565b8114610da857600080fd5b5056fea26469706673582212207fc3c2b275e6797aed956d8623ca95a6bdd06e52fa22036f2aab075102daedda64736f6c634300060c0033";

type InitialMigrationConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: InitialMigrationConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class InitialMigration__factory extends ContractFactory {
  constructor(...args: InitialMigrationConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    initializeCaller_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<InitialMigration> {
    return super.deploy(
      initializeCaller_,
      overrides || {}
    ) as Promise<InitialMigration>;
  }
  override getDeployTransaction(
    initializeCaller_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(initializeCaller_, overrides || {});
  }
  override attach(address: string): InitialMigration {
    return super.attach(address) as InitialMigration;
  }
  override connect(signer: Signer): InitialMigration__factory {
    return super.connect(signer) as InitialMigration__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): InitialMigrationInterface {
    return new utils.Interface(_abi) as InitialMigrationInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): InitialMigration {
    return new Contract(address, _abi, signerOrProvider) as InitialMigration;
  }
}
