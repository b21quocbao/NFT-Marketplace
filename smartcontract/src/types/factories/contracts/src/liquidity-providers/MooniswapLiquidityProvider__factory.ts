/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  MooniswapLiquidityProvider,
  MooniswapLiquidityProviderInterface,
} from "../../../../contracts/src/liquidity-providers/MooniswapLiquidityProvider";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IEtherTokenV06",
        name: "weth",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IERC20TokenV06",
        name: "inputToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract IERC20TokenV06",
        name: "outputToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "inputTokenAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "outputTokenAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "sourceId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "sourceAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "LiquidityProviderFill",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20TokenV06",
        name: "",
        type: "address",
      },
      {
        internalType: "contract IERC20TokenV06",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "getSellQuote",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20TokenV06",
        name: "outputToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "minBuyAmount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "auxiliaryData",
        type: "bytes",
      },
    ],
    name: "sellEthForToken",
    outputs: [
      {
        internalType: "uint256",
        name: "boughtAmount",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20TokenV06",
        name: "inputToken",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "minBuyAmount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "auxiliaryData",
        type: "bytes",
      },
    ],
    name: "sellTokenForEth",
    outputs: [
      {
        internalType: "uint256",
        name: "boughtAmount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20TokenV06",
        name: "inputToken",
        type: "address",
      },
      {
        internalType: "contract IERC20TokenV06",
        name: "outputToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "minBuyAmount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "auxiliaryData",
        type: "bytes",
      },
    ],
    name: "sellTokenForToken",
    outputs: [
      {
        internalType: "uint256",
        name: "boughtAmount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b50604051620018d7380380620018d783398181016040528101906200003791906200008c565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b81525050506200011a565b600081519050620000868162000100565b92915050565b6000602082840312156200009f57600080fd5b6000620000af8482850162000075565b91505092915050565b6000620000c582620000e0565b9050919050565b6000620000d982620000b8565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6200010b81620000cc565b81146200011757600080fd5b50565b60805160601c61178b6200014c6000398061045752806104f45280610743528061079752806109e7525061178b6000f3fe6080604052600436106100435760003560e01c8063343fbcdd1461004f57806365d02b041461008c57806369be90ec146100c9578063b52e8458146101065761004a565b3661004a57005b600080fd5b34801561005b57600080fd5b5061007660048036038101906100719190610fe0565b610136565b6040516100839190611565565b60405180910390f35b34801561009857600080fd5b506100b360048036038101906100ae9190610f4e565b610173565b6040516100c09190611565565b60405180910390f35b3480156100d557600080fd5b506100f060048036038101906100eb9190610e4e565b61025a565b6040516100fd9190611565565b60405180910390f35b610120600480360381019061011b9190610ece565b610348565b60405161012d9190611565565b60405180910390f35b60006040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161016a906114e5565b60405180910390fd5b600061017e876103f8565b158015610191575061018f866103f8565b155b80156101c957508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1614155b610208576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101ff906114c5565b60405180910390fd5b610223878786868681019061021d919061102f565b89610444565b905061025085828873ffffffffffffffffffffffffffffffffffffffff166108879092919063ffffffff16565b9695505050505050565b6000610265866103f8565b156102a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029c906114c5565b60405180910390fd5b6102d48673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee8686868101906102ce919061102f565b89610444565b90508473ffffffffffffffffffffffffffffffffffffffff16816040516102fa9061133b565b60006040518083038185875af1925050503d8060008114610337576040519150601f19603f3d011682016040523d82523d6000602084013e61033c565b606091505b50505095945050505050565b6000610353866103f8565b15610393576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038a906114c5565b60405180910390fd5b6103c273eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee878686868101906103bc919061102f565b89610444565b90506103ef85828873ffffffffffffffffffffffffffffffffffffffff166108879092919063ffffffff16565b95945050505050565b600073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b6000806104518730610913565b905060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff161415610585576104b2876109d4565b156104f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e990611525565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16632e1a7d4d836040518263ffffffff1660e01b815260040161054b9190611565565b600060405180830381600087803b15801561056557600080fd5b505af1158015610579573d6000803e3d6000fd5b50505050819050610680565b61058e886103f8565b156105e45781905061059f876109d4565b156105df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d690611525565b60405180910390fd5b61067f565b8673ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff161415610653576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064a90611545565b60405180910390fd5b61067e85838a73ffffffffffffffffffffffffffffffffffffffff16610a3c9092919063ffffffff16565b5b5b8473ffffffffffffffffffffffffffffffffffffffff1663d5bcb9b5826106a68b6109d4565b6106b0578a6106b3565b60005b6106bc8b6109d4565b6106c6578a6106c9565b60005b868b60006040518763ffffffff1660e01b81526004016106ed9594939291906113bd565b6020604051808303818588803b15801561070657600080fd5b505af115801561071a573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061073f9190611058565b92507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff161415610817577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663d0e30db0846040518263ffffffff1660e01b81526004016000604051808303818588803b1580156107fd57600080fd5b505af1158015610811573d6000803e3d6000fd5b50505050505b7f83dc79d57dbf7f65897db5b817ef3c45ebb363086f52ba01bb57d0cdef08dace888884867f4d6f6f6e697377617000000000000000000000000000000000000000000000008a338b604051610874989796959493929190611410565b60405180910390a1505095945050505050565b606063a9059cbb60e01b83836040516024016108a4929190611394565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905061090d8482610aff565b50505050565b600061091e836103f8565b15610942578173ffffffffffffffffffffffffffffffffffffffff163190506109ce565b8273ffffffffffffffffffffffffffffffffffffffff166370a08231836040518263ffffffff1660e01b815260040161097b9190611350565b60206040518083038186803b15801561099357600080fd5b505afa1580156109a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109cb9190611058565b90505b92915050565b60006109df826103f8565b80610a3557507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b9050919050565b808373ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e30856040518363ffffffff1660e01b8152600401610a7892919061136b565b60206040518083038186803b158015610a9057600080fd5b505afa158015610aa4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ac89190611058565b1015610afa57610af983837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610c1d565b5b505050565b600060608373ffffffffffffffffffffffffffffffffffffffff1683604051610b289190611324565b6000604051808303816000865af19150503d8060008114610b65576040519150601f19603f3d011682016040523d82523d6000602084013e610b6a565b606091505b509150915081610b7e57610b7d81610ca9565b5b600081511415610bd9576000843b905060008111610bd1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bc890611505565b60405180910390fd5b505050610c19565b6020815110610c0d576000610bef826000610cb1565b90506001811415610c0257505050610c19565b610c0b82610ca9565b505b610c1681610ca9565b50505b5050565b606063095ea7b360e01b8383604051602401610c3a929190611394565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050509050610ca38482610aff565b50505050565b805160208201fd5b6000610cbd8383610cc8565b60001c905092915050565b60006020820183511015610cef57610cee610ce96005855160208601610d01565b610ca9565b5b60208201915081830151905092915050565b6060632800659560e01b848484604051602401610d209392919061148e565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090509392505050565b600081359050610d95816116e2565b92915050565b600081359050610daa816116f9565b92915050565b60008083601f840112610dc257600080fd5b8235905067ffffffffffffffff811115610ddb57600080fd5b602083019150836001820283011115610df357600080fd5b9250929050565b600081359050610e0981611710565b92915050565b600081359050610e1e81611727565b92915050565b600081359050610e338161173e565b92915050565b600081519050610e488161173e565b92915050565b600080600080600060808688031215610e6657600080fd5b6000610e7488828901610dfa565b9550506020610e8588828901610d9b565b9450506040610e9688828901610e24565b935050606086013567ffffffffffffffff811115610eb357600080fd5b610ebf88828901610db0565b92509250509295509295909350565b600080600080600060808688031215610ee657600080fd5b6000610ef488828901610dfa565b9550506020610f0588828901610d86565b9450506040610f1688828901610e24565b935050606086013567ffffffffffffffff811115610f3357600080fd5b610f3f88828901610db0565b92509250509295509295909350565b60008060008060008060a08789031215610f6757600080fd5b6000610f7589828a01610dfa565b9650506020610f8689828a01610dfa565b9550506040610f9789828a01610d86565b9450506060610fa889828a01610e24565b935050608087013567ffffffffffffffff811115610fc557600080fd5b610fd189828a01610db0565b92509250509295509295509295565b600080600060608486031215610ff557600080fd5b600061100386828701610dfa565b935050602061101486828701610dfa565b925050604061102586828701610e24565b9150509250925092565b60006020828403121561104157600080fd5b600061104f84828501610e0f565b91505092915050565b60006020828403121561106a57600080fd5b600061107884828501610e39565b91505092915050565b61108a81611636565b82525050565b611099816115a7565b82525050565b6110a8816115cb565b82525050565b60006110b982611580565b6110c3818561158b565b93506110d38185602086016116a2565b80840191505092915050565b6110e881611648565b82525050565b6110f78161166c565b82525050565b600061110a602783611596565b91507f4d6f6f6e69737761704c697175696469747950726f76696465722f494e56414c60008301527f49445f41524753000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000611170602a83611596565b91507f4d6f6f6e69737761704c697175696469747950726f76696465722f4e4f545f4960008301527f4d504c454d454e544544000000000000000000000000000000000000000000006020830152604082019050919050565b60006111d6602783611596565b91507f696e76616c696420746f6b656e20616464726573732c20636f6e7461696e732060008301527f6e6f20636f6465000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061123c60008361158b565b9150600082019050919050565b6000611256602583611596565b91507f4d6f6f6e69737761704c697175696469747950726f76696465722f4554485f5460008301527f4f5f4554480000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006112bc602583611596565b91507f4d6f6f6e69737761704c697175696469747950726f76696465722f53414d455f60008301527f544f4b454e0000000000000000000000000000000000000000000000000000006020830152604082019050919050565b61131e8161162c565b82525050565b600061133082846110ae565b915081905092915050565b60006113468261122f565b9150819050919050565b60006020820190506113656000830184611090565b92915050565b60006040820190506113806000830185611090565b61138d6020830184611090565b9392505050565b60006040820190506113a96000830185611090565b6113b66020830184611315565b9392505050565b600060a0820190506113d260008301886110df565b6113df60208301876110df565b6113ec6040830186611315565b6113f96060830185611315565b6114066080830184611081565b9695505050505050565b600061010082019050611426600083018b6110df565b611433602083018a6110df565b6114406040830189611315565b61144d6060830188611315565b61145a608083018761109f565b61146760a0830186611090565b61147460c0830185611081565b61148160e0830184611090565b9998505050505050505050565b60006060820190506114a360008301866110ee565b6114b06020830185611315565b6114bd6040830184611315565b949350505050565b600060208201905081810360008301526114de816110fd565b9050919050565b600060208201905081810360008301526114fe81611163565b9050919050565b6000602082019050818103600083015261151e816111c9565b9050919050565b6000602082019050818103600083015261153e81611249565b9050919050565b6000602082019050818103600083015261155e816112af565b9050919050565b600060208201905061157a6000830184611315565b92915050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b60006115b28261160c565b9050919050565b60006115c48261160c565b9050919050565b6000819050919050565b60006115e0826115a7565b9050919050565b60006115f2826115a7565b9050919050565b6000819050611607826116d5565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006116418261167e565b9050919050565b60006116538261165a565b9050919050565b60006116658261160c565b9050919050565b6000611677826115f9565b9050919050565b600061168982611690565b9050919050565b600061169b8261160c565b9050919050565b60005b838110156116c05780820151818401526020810190506116a5565b838111156116cf576000848401525b50505050565b600881106116df57fe5b50565b6116eb816115a7565b81146116f657600080fd5b50565b611702816115b9565b811461170d57600080fd5b50565b611719816115d5565b811461172457600080fd5b50565b611730816115e7565b811461173b57600080fd5b50565b6117478161162c565b811461175257600080fd5b5056fea2646970667358221220c174912c4ef8d316ca9e4db11d854186b410bd63e54b1dee3cad7d24a9b70ba564736f6c634300060c0033";

type MooniswapLiquidityProviderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MooniswapLiquidityProviderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MooniswapLiquidityProvider__factory extends ContractFactory {
  constructor(...args: MooniswapLiquidityProviderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    weth: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MooniswapLiquidityProvider> {
    return super.deploy(
      weth,
      overrides || {}
    ) as Promise<MooniswapLiquidityProvider>;
  }
  override getDeployTransaction(
    weth: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(weth, overrides || {});
  }
  override attach(address: string): MooniswapLiquidityProvider {
    return super.attach(address) as MooniswapLiquidityProvider;
  }
  override connect(signer: Signer): MooniswapLiquidityProvider__factory {
    return super.connect(signer) as MooniswapLiquidityProvider__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MooniswapLiquidityProviderInterface {
    return new utils.Interface(_abi) as MooniswapLiquidityProviderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MooniswapLiquidityProvider {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MooniswapLiquidityProvider;
  }
}
