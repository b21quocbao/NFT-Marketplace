/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  TransformerDeployer,
  TransformerDeployerInterface,
} from "../../../../../contracts/src/external/TransformerDeployer.sol/TransformerDeployer";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "address[]",
        name: "initialAuthorities",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "AuthorizedAddressAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "AuthorizedAddressRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "deployedAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "Deployed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "Killed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "addAuthorizedAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "authorities",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "authorized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "bytecode",
        type: "bytes",
      },
    ],
    name: "deploy",
    outputs: [
      {
        internalType: "address",
        name: "deployedAddress",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAuthorizedAddresses",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IKillable",
        name: "target",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "ethRecipient",
        type: "address",
      },
    ],
    name: "kill",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "nonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "removeAuthorizedAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "removeAuthorizedAddressAtIndex",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "toDeploymentNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260016003553480156200001657600080fd5b5060405162001c6738038062001c6783398181016040528101906200003c919062000423565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060005b8151811015620000ba57620000ae8282815181106200009a57fe5b6020026020010151620000c260201b60201c565b8060010190506200007f565b50506200053b565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141562000123576200012262000111620002b960201b620007fd1760201c565b620002f660201b6200083a1760201c565b5b600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615620001a257620001a16200019082620002fe60201b620008421760201c565b620002f660201b6200083a1760201c565b5b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506002819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f3147867c59d17e8fa9d522465651d44aae0a9e38f902f3475b97e58072f0ed4c60405160405180910390a350565b60606040518060400160405280600481526020017f57654fe400000000000000000000000000000000000000000000000000000000815250905090565b805160208201fd5b606063de16f1a060e01b826040516024016200031b919062000479565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050509050919050565b600081519050620003908162000521565b92915050565b600082601f830112620003a857600080fd5b8151620003bf620003b982620004c4565b62000496565b91508181835260208401935060208101905083856020840282011115620003e557600080fd5b60005b83811015620004195781620003fe88826200037f565b845260208401935060208301925050600181019050620003e8565b5050505092915050565b6000602082840312156200043657600080fd5b600082015167ffffffffffffffff8111156200045157600080fd5b6200045f8482850162000396565b91505092915050565b6200047381620004ed565b82525050565b600060208201905062000490600083018462000468565b92915050565b6000604051905081810181811067ffffffffffffffff82111715620004ba57600080fd5b8060405250919050565b600067ffffffffffffffff821115620004dc57600080fd5b602082029050602081019050919050565b6000620004fa8262000501565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6200052c81620004ed565b81146200053857600080fd5b50565b61171c806200054b6000396000f3fe6080604052600436106100a65760003560e01c80638da5cb5b116100645780638da5cb5b146101d05780639ad26744146101fb578063affed0e014610224578063b91816111461024f578063d39de6e91461028c578063f2fde38b146102b7576100a6565b8062774360146100ab5780630567e83e146100db57806342f1181e14610104578063494503d41461012d57806367b043681461016a57806370712939146101a7575b600080fd5b6100c560048036038101906100c091906111fa565b6102e0565b6040516100d291906113d6565b60405180910390f35b3480156100e757600080fd5b5061010260048036038101906100fd919061123b565b610401565b005b34801561011057600080fd5b5061012b60048036038101906101269190611195565b6104b1565b005b34801561013957600080fd5b50610154600480360381019061014f9190611277565b6104c5565b60405161016191906113d6565b60405180910390f35b34801561017657600080fd5b50610191600480360381019061018c9190611195565b610501565b60405161019e91906114f2565b60405180910390f35b3480156101b357600080fd5b506101ce60048036038101906101c99190611195565b610519565b005b3480156101dc57600080fd5b506101e561061f565b6040516101f291906113d6565b60405180910390f35b34801561020757600080fd5b50610222600480360381019061021d91906111be565b610643565b005b34801561023057600080fd5b50610239610659565b60405161024691906114f2565b60405180910390f35b34801561025b57600080fd5b5061027660048036038101906102719190611195565b61065f565b60405161028391906114b7565b60405180910390f35b34801561029857600080fd5b506102a161067f565b6040516102ae9190611495565b60405180910390f35b3480156102c357600080fd5b506102de60048036038101906102d99190611195565b61070d565b005b60006102ea6108c1565b60006003549050600160036000828254019250508190555082516020840134f09150600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561037c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610373906114d2565b60405180910390fd5b80600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f0f7cceb5b8900763db0b46908960abf22a5d055a4a7395b6b83862d93f241d218282336040516103f39392919061145e565b60405180910390a150919050565b6104096108c1565b8173ffffffffffffffffffffffffffffffffffffffff1663c9353cb5826040518263ffffffff1660e01b815260040161044291906113f1565b600060405180830381600087803b15801561045c57600080fd5b505af1158015610470573d6000803e3d6000fd5b505050507fdfbd6241378f1ad47e76019eac61d2c245fdd5709e3fc2cd36641ee506db169382336040516104a5929190611435565b60405180910390a15050565b6104b9610926565b6104c2816109ae565b50565b600281815481106104d257fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60046020528060005260406000206000915090505481565b610521610926565b600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166105845761058361057e82610b6f565b61083a565b5b60005b60028054905081101561061b578173ffffffffffffffffffffffffffffffffffffffff16600282815481106105b857fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561060e576106098282610bee565b61061b565b8080600101915050610587565b5050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61064b610926565b6106558282610bee565b5050565b60035481565b60016020528060005260406000206000915054906101000a900460ff1681565b6060600280548060200260200160405190810160405280929190818152602001828054801561070357602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106b9575b5050505050905090565b610715610926565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561075f5761075a610755610eab565b61083a565b6107fa565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35b50565b60606040518060400160405280600481526020017f57654fe400000000000000000000000000000000000000000000000000000000815250905090565b805160208201fd5b606063de16f1a060e01b8260405160240161085d91906113d6565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050509050919050565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166109245761092361091e33610ee8565b61083a565b5b565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146109ac576109ab6109a63360008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610f67565b61083a565b5b565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156109f4576109f36109ee6107fd565b61083a565b5b600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610a5857610a57610a5282610842565b61083a565b5b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506002819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f3147867c59d17e8fa9d522465651d44aae0a9e38f902f3475b97e58072f0ed4c60405160405180910390a350565b606063eb5108a260e01b82604051602401610b8a91906113d6565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050509050919050565b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610c5157610c50610c4b83610b6f565b61083a565b5b6002805490508110610c7557610c74610c6f82600280549050610fe9565b61083a565b5b8173ffffffffffffffffffffffffffffffffffffffff1660028281548110610c9957fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610d2957610d28610d2360028381548110610cf257fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168461106b565b61083a565b5b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81549060ff0219169055600260016002805490500381548110610d8d57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660028281548110610dc557fe5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506002805480610e1857fe5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905590553373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f1f32c1b084e2de0713b8fb16bd46bb9df710a3dbeae2f3ca93af46e016dcc6b060405160405180910390a35050565b60606040518060400160405280600481526020017fe69edc3e00000000000000000000000000000000000000000000000000000000815250905090565b606063b65a25b960e01b82604051602401610f0391906113d6565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050509050919050565b6060631de45ad160e01b8383604051602401610f8492919061140c565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905092915050565b606063e9f8377160e01b838360405160240161100692919061150d565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905092915050565b606063140a84db60e01b838360405160240161108892919061140c565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905092915050565b6000813590506110fc8161168a565b92915050565b600081359050611111816116a1565b92915050565b600082601f83011261112857600080fd5b813561113b61113682611563565b611536565b9150808252602083016020830185838301111561115757600080fd5b61116283828461167b565b50505092915050565b60008135905061117a816116b8565b92915050565b60008135905061118f816116cf565b92915050565b6000602082840312156111a757600080fd5b60006111b5848285016110ed565b91505092915050565b600080604083850312156111d157600080fd5b60006111df858286016110ed565b92505060206111f085828601611180565b9150509250929050565b60006020828403121561120c57600080fd5b600082013567ffffffffffffffff81111561122657600080fd5b61123284828501611117565b91505092915050565b6000806040838503121561124e57600080fd5b600061125c8582860161116b565b925050602061126d85828601611102565b9150509250929050565b60006020828403121561128957600080fd5b600061129784828501611180565b91505092915050565b60006112ac83836112d6565b60208301905092915050565b6112c181611645565b82525050565b6112d0816115eb565b82525050565b6112df816115d9565b82525050565b6112ee816115d9565b82525050565b60006112ff8261159f565b61130981856115b7565b93506113148361158f565b8060005b8381101561134557815161132c88826112a0565b9750611337836115aa565b925050600181019050611318565b5085935050505092915050565b61135b816115fd565b82525050565b600061136e6021836115c8565b91507f5472616e73666f726d65724465706c6f7965722f4445504c4f595f4641494c4560008301527f44000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6113d08161163b565b82525050565b60006020820190506113eb60008301846112e5565b92915050565b600060208201905061140660008301846112c7565b92915050565b600060408201905061142160008301856112e5565b61142e60208301846112e5565b9392505050565b600060408201905061144a60008301856112e5565b61145760208301846112b8565b9392505050565b600060608201905061147360008301866112e5565b61148060208301856113c7565b61148d60408301846112b8565b949350505050565b600060208201905081810360008301526114af81846112f4565b905092915050565b60006020820190506114cc6000830184611352565b92915050565b600060208201905081810360008301526114eb81611361565b9050919050565b600060208201905061150760008301846113c7565b92915050565b600060408201905061152260008301856113c7565b61152f60208301846113c7565b9392505050565b6000604051905081810181811067ffffffffffffffff8211171561155957600080fd5b8060405250919050565b600067ffffffffffffffff82111561157a57600080fd5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b60006115e48261161b565b9050919050565b60006115f68261161b565b9050919050565b60008115159050919050565b6000611614826115d9565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061165082611657565b9050919050565b600061166282611669565b9050919050565b60006116748261161b565b9050919050565b82818337600083830152505050565b611693816115d9565b811461169e57600080fd5b50565b6116aa816115eb565b81146116b557600080fd5b50565b6116c181611609565b81146116cc57600080fd5b50565b6116d88161163b565b81146116e357600080fd5b5056fea264697066735822122041a14ff4457853d76ba3ca06a9f229eabd1f0db3d1c1a54384ed90e73baeff2b64736f6c634300060c0033";

type TransformerDeployerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TransformerDeployerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TransformerDeployer__factory extends ContractFactory {
  constructor(...args: TransformerDeployerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    initialAuthorities: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TransformerDeployer> {
    return super.deploy(
      initialAuthorities,
      overrides || {}
    ) as Promise<TransformerDeployer>;
  }
  override getDeployTransaction(
    initialAuthorities: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(initialAuthorities, overrides || {});
  }
  override attach(address: string): TransformerDeployer {
    return super.attach(address) as TransformerDeployer;
  }
  override connect(signer: Signer): TransformerDeployer__factory {
    return super.connect(signer) as TransformerDeployer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TransformerDeployerInterface {
    return new utils.Interface(_abi) as TransformerDeployerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TransformerDeployer {
    return new Contract(address, _abi, signerOrProvider) as TransformerDeployer;
  }
}
