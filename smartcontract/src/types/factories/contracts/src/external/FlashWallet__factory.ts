/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  FlashWallet,
  FlashWalletInterface,
} from "../../../../contracts/src/external/FlashWallet";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "callData",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "executeCall",
    outputs: [
      {
        internalType: "bytes",
        name: "resultData",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "callData",
        type: "bytes",
      },
    ],
    name: "executeDelegateCall",
    outputs: [
      {
        internalType: "bytes",
        name: "resultData",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "success",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "success",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceID",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "hasSupport",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "tokenFallback",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505060805160601c610f03610079600039806102e75280610341528061044a528061047052806104ca5250610f036000f3fe6080604052600436106100745760003560e01c8063b68df16d1161004e578063b68df16d14610118578063bc197c8114610148578063c0ee0b8a14610185578063f23a6e61146101ae5761007b565b806301ffc9a71461008057806354132d78146100bd5780638da5cb5b146100ed5761007b565b3661007b57005b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a29190610b45565b6101eb565b6040516100b49190610d19565b60405180910390f35b6100d760048036038101906100d2919061090f565b6102e3565b6040516100e49190610d4f565b60405180910390f35b3480156100f957600080fd5b50610102610448565b60405161010f9190610c21565b60405180910390f35b610132600480360381019061012d91906108b7565b61046c565b60405161013f9190610d4f565b60405180910390f35b34801561015457600080fd5b5061016f600480360381019061016a919061097b565b6105cc565b60405161017c9190610d34565b60405180910390f35b34801561019157600080fd5b506101ac60048036038101906101a79190610ad9565b6105e4565b005b3480156101ba57600080fd5b506101d560048036038101906101d09190610a47565b6105ea565b6040516101e29190610d34565b60405180910390f35b60006301ffc9a760e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061028d575063bc197c8160e01b63f23a6e6160e01b187bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806102dc575063c0ee0b8a60e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b60607f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461036b5761036a610365337f0000000000000000000000000000000000000000000000000000000000000000610600565b610682565b5b60008573ffffffffffffffffffffffffffffffffffffffff16838686604051610395929190610c08565b60006040518083038185875af1925050503d80600081146103d2576040519150601f19603f3d011682016040523d82523d6000602084013e6103d7565b606091505b5080935081925050508061043f5761043e610439308888888080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050878761068a565b610682565b5b50949350505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60607f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104f4576104f36104ee337f0000000000000000000000000000000000000000000000000000000000000000610600565b610682565b5b60008473ffffffffffffffffffffffffffffffffffffffff16848460405161051d929190610c08565b600060405180830381855af49150503d8060008114610558576040519150601f19603f3d011682016040523d82523d6000602084013e61055d565b606091505b508093508192505050806105c4576105c36105be308787878080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050508661072e565b610682565b5b509392505050565b600063bc197c8160e01b905098975050505050505050565b50505050565b600063f23a6e6160e01b90509695505050505050565b6060631de45ad160e01b838360405160240161061d929190610c3c565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905092915050565b805160208201fd5b60607f86945816f737646db7f2d6df01602a2212e8c75829f6940913724c13a83a817886868686866040516024016106c6959493929190610cb8565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905095945050505050565b60607f61e5a7320b4cf56a2980a427f39e3071c967bf2f77fffcaae20e4467e160afcc858585856040516024016107689493929190610c65565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050509050949350505050565b6000813590506107de81610e71565b92915050565b6000813590506107f381610e88565b92915050565b60008083601f84011261080b57600080fd5b8235905067ffffffffffffffff81111561082457600080fd5b60208301915083602082028301111561083c57600080fd5b9250929050565b60008135905061085281610e9f565b92915050565b60008083601f84011261086a57600080fd5b8235905067ffffffffffffffff81111561088357600080fd5b60208301915083600182028301111561089b57600080fd5b9250929050565b6000813590506108b181610eb6565b92915050565b6000806000604084860312156108cc57600080fd5b60006108da868287016107e4565b935050602084013567ffffffffffffffff8111156108f757600080fd5b61090386828701610858565b92509250509250925092565b6000806000806060858703121561092557600080fd5b6000610933878288016107e4565b945050602085013567ffffffffffffffff81111561095057600080fd5b61095c87828801610858565b9350935050604061096f878288016108a2565b91505092959194509250565b60008060008060008060008060a0898b03121561099757600080fd5b60006109a58b828c016107cf565b98505060206109b68b828c016107cf565b975050604089013567ffffffffffffffff8111156109d357600080fd5b6109df8b828c016107f9565b9650965050606089013567ffffffffffffffff8111156109fe57600080fd5b610a0a8b828c016107f9565b9450945050608089013567ffffffffffffffff811115610a2957600080fd5b610a358b828c01610858565b92509250509295985092959890939650565b60008060008060008060a08789031215610a6057600080fd5b6000610a6e89828a016107cf565b9650506020610a7f89828a016107cf565b9550506040610a9089828a016108a2565b9450506060610aa189828a016108a2565b935050608087013567ffffffffffffffff811115610abe57600080fd5b610aca89828a01610858565b92509250509295509295509295565b60008060008060608587031215610aef57600080fd5b6000610afd878288016107cf565b9450506020610b0e878288016108a2565b935050604085013567ffffffffffffffff811115610b2b57600080fd5b610b3787828801610858565b925092505092959194509250565b600060208284031215610b5757600080fd5b6000610b6584828501610843565b91505092915050565b610b7781610d98565b82525050565b610b8681610dbc565b82525050565b610b9581610dc8565b82525050565b6000610ba78385610d8d565b9350610bb4838584610e1e565b82840190509392505050565b6000610bcb82610d71565b610bd58185610d7c565b9350610be5818560208601610e2d565b610bee81610e60565b840191505092915050565b610c0281610e14565b82525050565b6000610c15828486610b9b565b91508190509392505050565b6000602082019050610c366000830184610b6e565b92915050565b6000604082019050610c516000830185610b6e565b610c5e6020830184610b6e565b9392505050565b6000608082019050610c7a6000830187610b6e565b610c876020830186610b6e565b8181036040830152610c998185610bc0565b90508181036060830152610cad8184610bc0565b905095945050505050565b600060a082019050610ccd6000830188610b6e565b610cda6020830187610b6e565b8181036040830152610cec8186610bc0565b9050610cfb6060830185610bf9565b8181036080830152610d0d8184610bc0565b90509695505050505050565b6000602082019050610d2e6000830184610b7d565b92915050565b6000602082019050610d496000830184610b8c565b92915050565b60006020820190508181036000830152610d698184610bc0565b905092915050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b6000610da382610df4565b9050919050565b6000610db582610df4565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015610e4b578082015181840152602081019050610e30565b83811115610e5a576000848401525b50505050565b6000601f19601f8301169050919050565b610e7a81610d98565b8114610e8557600080fd5b50565b610e9181610daa565b8114610e9c57600080fd5b50565b610ea881610dc8565b8114610eb357600080fd5b50565b610ebf81610e14565b8114610eca57600080fd5b5056fea2646970667358221220fe6e0569ae994867adb7c524ee8b6daa84e2b29c32a62d57e66574db3e5bd57664736f6c634300060c0033";

type FlashWalletConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FlashWalletConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FlashWallet__factory extends ContractFactory {
  constructor(...args: FlashWalletConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FlashWallet> {
    return super.deploy(overrides || {}) as Promise<FlashWallet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): FlashWallet {
    return super.attach(address) as FlashWallet;
  }
  override connect(signer: Signer): FlashWallet__factory {
    return super.connect(signer) as FlashWallet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FlashWalletInterface {
    return new utils.Interface(_abi) as FlashWalletInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FlashWallet {
    return new Contract(address, _abi, signerOrProvider) as FlashWallet;
  }
}
