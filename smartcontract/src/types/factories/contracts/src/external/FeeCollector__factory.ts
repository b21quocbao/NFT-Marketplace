/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  FeeCollector,
  FeeCollectorInterface,
} from "../../../../contracts/src/external/FeeCollector";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "AuthorizedAddressAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "AuthorizedAddressRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "addAuthorizedAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "authorities",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "authorized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IEtherTokenV06",
        name: "weth",
        type: "address",
      },
    ],
    name: "convertToWeth",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAuthorizedAddresses",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IEtherTokenV06",
        name: "weth",
        type: "address",
      },
      {
        internalType: "contract IStaking",
        name: "staking",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "removeAuthorizedAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "removeAuthorizedAddressAtIndex",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555062000063336200006960201b60201c565b62000388565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415620000ca57620000c9620000b86200026060201b620007311760201c565b6200029d60201b6200076e1760201c565b5b600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156200014957620001486200013782620002a560201b620007761760201c565b6200029d60201b6200076e1760201c565b5b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506002819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f3147867c59d17e8fa9d522465651d44aae0a9e38f902f3475b97e58072f0ed4c60405160405180910390a350565b60606040518060400160405280600481526020017f57654fe400000000000000000000000000000000000000000000000000000000815250905090565b805160208201fd5b606063de16f1a060e01b82604051602401620002c2919062000337565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050509050919050565b620003318162000354565b82525050565b60006020820190506200034e600083018462000326565b92915050565b6000620003618262000368565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6114ec80620003986000396000f3fe6080604052600436106100955760003560e01c80638da5cb5b116100595780638da5cb5b146101825780639ad26744146101ad578063b9181611146101d6578063d39de6e914610213578063f2fde38b1461023e5761009c565b806342f1181e146100a1578063494503d4146100ca5780634a9023a7146101075780636133f9851461013057806370712939146101595761009c565b3661009c57005b600080fd5b3480156100ad57600080fd5b506100c860048036038101906100c3919061109f565b610267565b005b3480156100d657600080fd5b506100f160048036038101906100ec91906111a5565b61027b565b6040516100fe919061128f565b60405180910390f35b34801561011357600080fd5b5061012e6004803603810190610129919061112d565b6102b7565b005b34801561013c57600080fd5b5061015760048036038101906101529190611156565b61032d565b005b34801561016557600080fd5b50610180600480360381019061017b919061109f565b610453565b005b34801561018e57600080fd5b50610197610559565b6040516101a4919061128f565b60405180910390f35b3480156101b957600080fd5b506101d460048036038101906101cf91906110c8565b61057d565b005b3480156101e257600080fd5b506101fd60048036038101906101f8919061109f565b610593565b60405161020a919061131e565b60405180910390f35b34801561021f57600080fd5b506102286105b3565b60405161023591906112fc565b60405180910390f35b34801561024a57600080fd5b506102656004803603810190610260919061109f565b610641565b005b61026f6107f5565b6102788161087d565b50565b6002818154811061028857fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6102bf610a3e565b600047111561032a578073ffffffffffffffffffffffffffffffffffffffff1663d0e30db0476040518263ffffffff1660e01b81526004016000604051808303818588803b15801561031057600080fd5b505af1158015610324573d6000803e3d6000fd5b50505050505b50565b610335610a3e565b8273ffffffffffffffffffffffffffffffffffffffff1663095ea7b3837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6040518363ffffffff1660e01b81526004016103909291906112d3565b602060405180830381600087803b1580156103aa57600080fd5b505af11580156103be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e29190611104565b508173ffffffffffffffffffffffffffffffffffffffff1663b3e33379826040518263ffffffff1660e01b815260040161041c9190611339565b600060405180830381600087803b15801561043657600080fd5b505af115801561044a573d6000803e3d6000fd5b50505050505050565b61045b6107f5565b600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166104be576104bd6104b882610aa3565b61076e565b5b60005b600280549050811015610555578173ffffffffffffffffffffffffffffffffffffffff16600282815481106104f257fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610548576105438282610b22565b610555565b80806001019150506104c1565b5050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6105856107f5565b61058f8282610b22565b5050565b60016020528060005260406000206000915054906101000a900460ff1681565b6060600280548060200260200160405190810160405280929190818152602001828054801561063757602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116105ed575b5050505050905090565b6106496107f5565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156106935761068e610689610ddf565b61076e565b61072e565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35b50565b60606040518060400160405280600481526020017f57654fe400000000000000000000000000000000000000000000000000000000815250905090565b805160208201fd5b606063de16f1a060e01b82604051602401610791919061128f565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050509050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461087b5761087a6108753360008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610e1c565b61076e565b5b565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156108c3576108c26108bd610731565b61076e565b5b600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156109275761092661092182610776565b61076e565b5b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506002819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f3147867c59d17e8fa9d522465651d44aae0a9e38f902f3475b97e58072f0ed4c60405160405180910390a350565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610aa157610aa0610a9b33610e9e565b61076e565b5b565b606063eb5108a260e01b82604051602401610abe919061128f565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050509050919050565b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610b8557610b84610b7f83610aa3565b61076e565b5b6002805490508110610ba957610ba8610ba382600280549050610f1d565b61076e565b5b8173ffffffffffffffffffffffffffffffffffffffff1660028281548110610bcd57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610c5d57610c5c610c5760028381548110610c2657fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684610f9f565b61076e565b5b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81549060ff0219169055600260016002805490500381548110610cc157fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660028281548110610cf957fe5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506002805480610d4c57fe5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905590553373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f1f32c1b084e2de0713b8fb16bd46bb9df710a3dbeae2f3ca93af46e016dcc6b060405160405180910390a35050565b60606040518060400160405280600481526020017fe69edc3e00000000000000000000000000000000000000000000000000000000815250905090565b6060631de45ad160e01b8383604051602401610e399291906112aa565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905092915050565b606063b65a25b960e01b82604051602401610eb9919061128f565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050509050919050565b606063e9f8377160e01b8383604051602401610f3a929190611354565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905092915050565b606063140a84db60e01b8383604051602401610fbc9291906112aa565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905092915050565b6000813590506110308161142c565b92915050565b60008151905061104581611443565b92915050565b60008135905061105a8161145a565b92915050565b60008135905061106f81611471565b92915050565b60008135905061108481611488565b92915050565b6000813590506110998161149f565b92915050565b6000602082840312156110b157600080fd5b60006110bf84828501611021565b91505092915050565b600080604083850312156110db57600080fd5b60006110e985828601611021565b92505060206110fa8582860161108a565b9150509250929050565b60006020828403121561111657600080fd5b600061112484828501611036565b91505092915050565b60006020828403121561113f57600080fd5b600061114d84828501611060565b91505092915050565b60008060006060848603121561116b57600080fd5b600061117986828701611060565b935050602061118a86828701611075565b925050604061119b8682870161104b565b9150509250925092565b6000602082840312156111b757600080fd5b60006111c58482850161108a565b91505092915050565b60006111da83836111e6565b60208301905092915050565b6111ef816113b6565b82525050565b6111fe816113b6565b82525050565b600061120f8261138d565b61121981856113a5565b93506112248361137d565b8060005b8381101561125557815161123c88826111ce565b975061124783611398565b925050600181019050611228565b5085935050505092915050565b61126b816113c8565b82525050565b61127a816113d4565b82525050565b61128981611422565b82525050565b60006020820190506112a460008301846111f5565b92915050565b60006040820190506112bf60008301856111f5565b6112cc60208301846111f5565b9392505050565b60006040820190506112e860008301856111f5565b6112f56020830184611280565b9392505050565b600060208201905081810360008301526113168184611204565b905092915050565b60006020820190506113336000830184611262565b92915050565b600060208201905061134e6000830184611271565b92915050565b60006040820190506113696000830185611280565b6113766020830184611280565b9392505050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b60006113c182611402565b9050919050565b60008115159050919050565b6000819050919050565b60006113e9826113b6565b9050919050565b60006113fb826113b6565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b611435816113b6565b811461144057600080fd5b50565b61144c816113c8565b811461145757600080fd5b50565b611463816113d4565b811461146e57600080fd5b50565b61147a816113de565b811461148557600080fd5b50565b611491816113f0565b811461149c57600080fd5b50565b6114a881611422565b81146114b357600080fd5b5056fea2646970667358221220a9633d96cb9f7f833233fed57282cc7f258c2c00b428180af906ea57b343a69264736f6c634300060c0033";

type FeeCollectorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FeeCollectorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FeeCollector__factory extends ContractFactory {
  constructor(...args: FeeCollectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FeeCollector> {
    return super.deploy(overrides || {}) as Promise<FeeCollector>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): FeeCollector {
    return super.attach(address) as FeeCollector;
  }
  override connect(signer: Signer): FeeCollector__factory {
    return super.connect(signer) as FeeCollector__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FeeCollectorInterface {
    return new utils.Interface(_abi) as FeeCollectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FeeCollector {
    return new Contract(address, _abi, signerOrProvider) as FeeCollector;
  }
}
