/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  IUniswapExchange,
  IUniswapExchangeInterface,
} from "../../../../../../../contracts/src/transformers/bridges/mixins/MixinUniswap.sol/IUniswapExchange";
import type { Provider } from "@ethersproject/providers";
import { Contract, Signer, utils } from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "minTokensBought",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "ethToTokenTransferInput",
    outputs: [
      {
        internalType: "uint256",
        name: "tokensBought",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokensSold",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minEthBought",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "tokenToEthSwapInput",
    outputs: [
      {
        internalType: "uint256",
        name: "ethBought",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokensSold",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minTokensBought",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minEthBought",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "contract IERC20TokenV06",
        name: "buyToken",
        type: "address",
      },
    ],
    name: "tokenToTokenSwapInput",
    outputs: [
      {
        internalType: "uint256",
        name: "tokensBought",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokensSold",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minTokensBought",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minEthBought",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "contract IERC20TokenV06",
        name: "buyToken",
        type: "address",
      },
    ],
    name: "tokenToTokenTransferInput",
    outputs: [
      {
        internalType: "uint256",
        name: "tokensBought",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IUniswapExchange__factory {
  static readonly abi = _abi;
  static createInterface(): IUniswapExchangeInterface {
    return new utils.Interface(_abi) as IUniswapExchangeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IUniswapExchange {
    return new Contract(address, _abi, signerOrProvider) as IUniswapExchange;
  }
}
