/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  MixinGMX,
  MixinGMXInterface,
} from "../../../../../../../contracts/src/transformers/bridges/mixins/MixinGMX.sol/MixinGMX";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20TokenV06",
        name: "buyToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "sellAmount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "bridgeData",
        type: "bytes",
      },
    ],
    name: "_tradeGMX",
    outputs: [
      {
        internalType: "uint256",
        name: "boughtAmount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "";

type MixinGMXConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MixinGMXConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MixinGMX__factory extends ContractFactory {
  constructor(...args: MixinGMXConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MixinGMX> {
    return super.deploy(overrides || {}) as Promise<MixinGMX>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MixinGMX {
    return super.attach(address) as MixinGMX;
  }
  override connect(signer: Signer): MixinGMX__factory {
    return super.connect(signer) as MixinGMX__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MixinGMXInterface {
    return new utils.Interface(_abi) as MixinGMXInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MixinGMX {
    return new Contract(address, _abi, signerOrProvider) as MixinGMX;
  }
}
