/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  AffiliateFeeTransformer,
  AffiliateFeeTransformerInterface,
} from "../../../../contracts/src/transformers/AffiliateFeeTransformer";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [],
    name: "deployer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "ethRecipient",
        type: "address",
      },
    ],
    name: "die",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address payable",
            name: "sender",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct IERC20Transformer.TransformContext",
        name: "context",
        type: "tuple",
      },
    ],
    name: "transform",
    outputs: [
      {
        internalType: "bytes4",
        name: "success",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c060405234801561001057600080fd5b503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815250503073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1660601b8152505060805160601c60a05160601c610e926100b76000398061024e52806102a85250806101c8528061022252806102ed5250610e926000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063832b24bb14610046578063c9353cb514610076578063d5f3948814610092575b600080fd5b610060600480360381019061005b9190610a20565b6100b0565b60405161006d9190610be1565b60405180910390f35b610090600480360381019061008b91906109b6565b6101c6565b005b61009a6102eb565b6040516100a79190610b74565b60405180910390f35b600060608280604001906100c49190610c53565b8101906100d191906109df565b905060005b81518110156101b55760008282815181106100ed57fe5b60200260200101516020015190507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114156101475761014483838151811061013257fe5b6020026020010151600001513061030f565b90505b600081146101a9576101a883838151811061015e57fe5b6020026020010151604001518285858151811061017757fe5b60200260200101516000015173ffffffffffffffffffffffffffffffffffffffff166103d09092919063ffffffff16565b5b508060010190506100d6565b506313c9929e60e01b915050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461024c5761024b610246337f000000000000000000000000000000000000000000000000000000000000000061045b565b6104f6565b5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16146102d2576102d16102cc307f00000000000000000000000000000000000000000000000000000000000000006104fe565b6104f6565b5b8073ffffffffffffffffffffffffffffffffffffffff16ff5b7f000000000000000000000000000000000000000000000000000000000000000081565b600061031a83610599565b1561033e578173ffffffffffffffffffffffffffffffffffffffff163190506103ca565b8273ffffffffffffffffffffffffffffffffffffffff166370a08231836040518263ffffffff1660e01b81526004016103779190610b74565b60206040518083038186803b15801561038f57600080fd5b505afa1580156103a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c79190610a61565b90505b92915050565b6103d983610599565b1561042a578173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610424573d6000803e3d6000fd5b50610456565b61045582828573ffffffffffffffffffffffffffffffffffffffff166105e59092919063ffffffff16565b5b505050565b60607f5cec653b364cca3880afa73ceff506d0651d11d26abbbe4a56460aa933b21b088383604051602401610491929190610b8f565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905092915050565b805160208201fd5b60607fb5cf2cd09307d6c717473134badbb9761c2c97d7565566c2a71eba6cd6fc514d8383604051602401610534929190610b8f565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905092915050565b600073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b606063a9059cbb60e01b8383604051602401610602929190610bb8565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905061066b8482610671565b50505050565b600060608373ffffffffffffffffffffffffffffffffffffffff168360405161069a9190610b5d565b6000604051808303816000865af19150503d80600081146106d7576040519150601f19603f3d011682016040523d82523d6000602084013e6106dc565b606091505b5091509150816106f0576106ef816104f6565b5b60008151141561074b576000843b905060008111610743576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073a90610c33565b60405180910390fd5b50505061078b565b602081511061077f57600061076182600061078f565b905060018114156107745750505061078b565b61077d826104f6565b505b610788816104f6565b50505b5050565b600061079b83836107a6565b60001c905092915050565b600060208201835110156107cd576107cc6107c760058551602086016107df565b6104f6565b5b60208201915081830151905092915050565b6060632800659560e01b8484846040516024016107fe93929190610bfc565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090509392505050565b60008135905061087381610e17565b92915050565b600082601f83011261088a57600080fd5b813561089d61089882610cd7565b610caa565b915081818352602084019350602081019050838560608402820111156108c257600080fd5b60005b838110156108f257816108d88882610911565b8452602084019350606083019250506001810190506108c5565b5050505092915050565b60008135905061090b81610e2e565b92915050565b60006060828403121561092357600080fd5b61092d6060610caa565b9050600061093d848285016108fc565b60008301525060206109518482850161098c565b602083015250604061096584828501610864565b60408301525092915050565b60006060828403121561098357600080fd5b81905092915050565b60008135905061099b81610e45565b92915050565b6000815190506109b081610e45565b92915050565b6000602082840312156109c857600080fd5b60006109d684828501610864565b91505092915050565b6000602082840312156109f157600080fd5b600082013567ffffffffffffffff811115610a0b57600080fd5b610a1784828501610879565b91505092915050565b600060208284031215610a3257600080fd5b600082013567ffffffffffffffff811115610a4c57600080fd5b610a5884828501610971565b91505092915050565b600060208284031215610a7357600080fd5b6000610a81848285016109a1565b91505092915050565b610a9381610d26565b82525050565b610aa281610d4a565b82525050565b6000610ab382610cff565b610abd8185610d0a565b9350610acd818560208601610dd7565b80840191505092915050565b610ae281610dc5565b82525050565b6000610af5602783610d15565b91507f696e76616c696420746f6b656e20616464726573732c20636f6e7461696e732060008301527f6e6f20636f6465000000000000000000000000000000000000000000000000006020830152604082019050919050565b610b5781610dbb565b82525050565b6000610b698284610aa8565b915081905092915050565b6000602082019050610b896000830184610a8a565b92915050565b6000604082019050610ba46000830185610a8a565b610bb16020830184610a8a565b9392505050565b6000604082019050610bcd6000830185610a8a565b610bda6020830184610b4e565b9392505050565b6000602082019050610bf66000830184610a99565b92915050565b6000606082019050610c116000830186610ad9565b610c1e6020830185610b4e565b610c2b6040830184610b4e565b949350505050565b60006020820190508181036000830152610c4c81610ae8565b9050919050565b60008083356001602003843603038112610c6c57600080fd5b80840192508235915067ffffffffffffffff821115610c8a57600080fd5b602083019250600182023603831315610ca257600080fd5b509250929050565b6000604051905081810181811067ffffffffffffffff82111715610ccd57600080fd5b8060405250919050565b600067ffffffffffffffff821115610cee57600080fd5b602082029050602081019050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b6000610d3182610d9b565b9050919050565b6000610d4382610d9b565b9050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6000610d8182610d26565b9050919050565b6000819050610d9682610e0a565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610dd082610d88565b9050919050565b60005b83811015610df5578082015181840152602081019050610dda565b83811115610e04576000848401525b50505050565b60088110610e1457fe5b50565b610e2081610d38565b8114610e2b57600080fd5b50565b610e3781610d76565b8114610e4257600080fd5b50565b610e4e81610dbb565b8114610e5957600080fd5b5056fea26469706673582212205ad312721fd921bc2a9abbae369387b32c2f63ec3572d9da0d9886e6b1b6d1d564736f6c634300060c0033";

type AffiliateFeeTransformerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AffiliateFeeTransformerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AffiliateFeeTransformer__factory extends ContractFactory {
  constructor(...args: AffiliateFeeTransformerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AffiliateFeeTransformer> {
    return super.deploy(overrides || {}) as Promise<AffiliateFeeTransformer>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): AffiliateFeeTransformer {
    return super.attach(address) as AffiliateFeeTransformer;
  }
  override connect(signer: Signer): AffiliateFeeTransformer__factory {
    return super.connect(signer) as AffiliateFeeTransformer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AffiliateFeeTransformerInterface {
    return new utils.Interface(_abi) as AffiliateFeeTransformerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AffiliateFeeTransformer {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as AffiliateFeeTransformer;
  }
}
