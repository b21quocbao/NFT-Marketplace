/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  WethTransformer,
  WethTransformerInterface,
} from "../../../../contracts/src/transformers/WethTransformer";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IEtherTokenV06",
        name: "weth_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "deployer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "ethRecipient",
        type: "address",
      },
    ],
    name: "die",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address payable",
            name: "sender",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct IERC20Transformer.TransformContext",
        name: "context",
        type: "tuple",
      },
    ],
    name: "transform",
    outputs: [
      {
        internalType: "bytes4",
        name: "success",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "weth",
    outputs: [
      {
        internalType: "contract IEtherTokenV06",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60e060405234801561001057600080fd5b50604051610eee380380610eee833981810160405281019061003291906100f2565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815250503073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1660601b815250508073ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff1660601b8152505050610176565b6000815190506100ec8161015f565b92915050565b60006020828403121561010457600080fd5b6000610112848285016100dd565b91505092915050565b60006101268261013f565b9050919050565b60006101388261011b565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6101688161012d565b811461017357600080fd5b50565b60805160601c60a05160601c60c05160601c610d266101c86000398060db528061015352806102a4528061032a52508061044e52806104a85250806103c8528061042252806104ed5250610d266000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80633fc8cef314610051578063832b24bb1461006f578063c9353cb51461009f578063d5f39488146100bb575b600080fd5b6100596100d9565b6040516100669190610a7f565b60405180910390f35b61008960048036038101906100849190610909565b6100fd565b6040516100969190610a64565b60405180910390f35b6100b960048036038101906100b491906108e0565b6103c6565b005b6100c36104eb565b6040516100d09190610a20565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000081565b60006101076107f5565b8280604001906101179190610ae5565b810190610124919061094a565b9050610149816000015173ffffffffffffffffffffffffffffffffffffffff1661050f565b1580156101a657507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff1614155b156102115761021061020b60008580604001906101c39190610ae5565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505061055b565b6105f6565b5b6000816020015190507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114156102725761026f30836000015173ffffffffffffffffffffffffffffffffffffffff166105fe90919063ffffffff16565b90505b600081146103b55761029d826000015173ffffffffffffffffffffffffffffffffffffffff1661050f565b15610328577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b15801561030a57600080fd5b505af115801561031e573d6000803e3d6000fd5b50505050506103b4565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16632e1a7d4d826040518263ffffffff1660e01b81526004016103819190610aca565b600060405180830381600087803b15801561039b57600080fd5b505af11580156103af573d6000803e3d6000fd5b505050505b5b6313c9929e60e01b92505050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461044c5761044b610446337f00000000000000000000000000000000000000000000000000000000000000006106bf565b6105f6565b5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16146104d2576104d16104cc307f000000000000000000000000000000000000000000000000000000000000000061075a565b6105f6565b5b8073ffffffffffffffffffffffffffffffffffffffff16ff5b7f000000000000000000000000000000000000000000000000000000000000000081565b600073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b60607f505ff6a4f24a0aa989a95ffe4c8d435d76fb30dea162a3e3022e749867722deb8383604051602401610591929190610a9a565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905092915050565b805160208201fd5b60006106098361050f565b1561062d578173ffffffffffffffffffffffffffffffffffffffff163190506106b9565b8273ffffffffffffffffffffffffffffffffffffffff166370a08231836040518263ffffffff1660e01b81526004016106669190610a20565b60206040518083038186803b15801561067e57600080fd5b505afa158015610692573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b69190610973565b90505b92915050565b60607f5cec653b364cca3880afa73ceff506d0651d11d26abbbe4a56460aa933b21b0883836040516024016106f5929190610a3b565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905092915050565b60607fb5cf2cd09307d6c717473134badbb9761c2c97d7565566c2a71eba6cd6fc514d8383604051602401610790929190610a3b565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905092915050565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b60008135905061083481610cab565b92915050565b60008135905061084981610cc2565b92915050565b60006060828403121561086157600080fd5b81905092915050565b60006040828403121561087c57600080fd5b6108866040610b3c565b905060006108968482850161083a565b60008301525060206108aa848285016108b6565b60208301525092915050565b6000813590506108c581610cd9565b92915050565b6000815190506108da81610cd9565b92915050565b6000602082840312156108f257600080fd5b600061090084828501610825565b91505092915050565b60006020828403121561091b57600080fd5b600082013567ffffffffffffffff81111561093557600080fd5b6109418482850161084f565b91505092915050565b60006040828403121561095c57600080fd5b600061096a8482850161086a565b91505092915050565b60006020828403121561098557600080fd5b6000610993848285016108cb565b91505092915050565b6109a581610b85565b82525050565b6109b481610ba9565b82525050565b60006109c582610b69565b6109cf8185610b74565b93506109df818560208601610c5a565b6109e881610c8d565b840191505092915050565b6109fc81610c24565b82525050565b610a0b81610c48565b82525050565b610a1a81610c1a565b82525050565b6000602082019050610a35600083018461099c565b92915050565b6000604082019050610a50600083018561099c565b610a5d602083018461099c565b9392505050565b6000602082019050610a7960008301846109ab565b92915050565b6000602082019050610a9460008301846109f3565b92915050565b6000604082019050610aaf6000830185610a02565b8181036020830152610ac181846109ba565b90509392505050565b6000602082019050610adf6000830184610a11565b92915050565b60008083356001602003843603038112610afe57600080fd5b80840192508235915067ffffffffffffffff821115610b1c57600080fd5b602083019250600182023603831315610b3457600080fd5b509250929050565b6000604051905081810181811067ffffffffffffffff82111715610b5f57600080fd5b8060405250919050565b600081519050919050565b600082825260208201905092915050565b6000610b9082610bfa565b9050919050565b6000610ba282610bfa565b9050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6000610be082610b85565b9050919050565b6000819050610bf582610c9e565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610c2f82610c36565b9050919050565b6000610c4182610bfa565b9050919050565b6000610c5382610be7565b9050919050565b60005b83811015610c78578082015181840152602081019050610c5d565b83811115610c87576000848401525b50505050565b6000601f19601f8301169050919050565b60028110610ca857fe5b50565b610cb481610b97565b8114610cbf57600080fd5b50565b610ccb81610bd5565b8114610cd657600080fd5b50565b610ce281610c1a565b8114610ced57600080fd5b5056fea26469706673582212205ce8608acf17f04da3207cd8590abfe2fd898e79269b53e05570470af090207f64736f6c634300060c0033";

type WethTransformerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WethTransformerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WethTransformer__factory extends ContractFactory {
  constructor(...args: WethTransformerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    weth_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<WethTransformer> {
    return super.deploy(weth_, overrides || {}) as Promise<WethTransformer>;
  }
  override getDeployTransaction(
    weth_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(weth_, overrides || {});
  }
  override attach(address: string): WethTransformer {
    return super.attach(address) as WethTransformer;
  }
  override connect(signer: Signer): WethTransformer__factory {
    return super.connect(signer) as WethTransformer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WethTransformerInterface {
    return new utils.Interface(_abi) as WethTransformerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WethTransformer {
    return new Contract(address, _abi, signerOrProvider) as WethTransformer;
  }
}
