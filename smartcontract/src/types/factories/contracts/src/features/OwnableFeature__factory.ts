/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  OwnableFeature,
  OwnableFeatureInterface,
} from "../../../../contracts/src/features/OwnableFeature";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "migrator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "Migrated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "FEATURE_NAME",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "FEATURE_VERSION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bootstrap",
    outputs: [
      {
        internalType: "bytes4",
        name: "success",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "migrate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c0604052610017600160008061006660201b60201c565b60a09081525034801561002957600080fd5b503073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b81525050610090565b60008163ffffffff1660208463ffffffff16901b60408663ffffffff16901b171790509392505050565b60805160601c60a051610fc26100c06000398061011952508061060b528061069f52806107335250610fc26000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063031b905c14610067578063261fe679146100855780636ae4b4f7146100a15780638da5cb5b146100bf578063f2fde38b146100dd578063fb969b0a146100f9575b600080fd5b61006f610117565b60405161007c9190610e1e565b60405180910390f35b61009f600480360381019061009a9190610b82565b61013b565b005b6100a961036c565b6040516100b69190610dfc565b60405180910390f35b6100c76103a5565b6040516100d49190610d0d565b60405180910390f35b6100f760048036038101906100f29190610b30565b6103d8565b005b610101610599565b60405161010e9190610db8565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000081565b60003073ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561018357600080fd5b505afa158015610197573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101bb9190610b59565b90508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610203576102026101fd33836107ae565b610849565b5b50600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561024a57610249610244610851565b610849565b5b60006102546108dc565b9050308160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506102e78585858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506108f2565b818160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fe1b831b0e6f3aa16b4b1a6bd526b5cdeab4940744ca6e0251f5fe5f8caf1c81a33868460405161035d93929190610d28565b60405180910390a15050505050565b6040518060400160405280600781526020017f4f776e61626c650000000000000000000000000000000000000000000000000081525081565b60006103af6108dc565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60003073ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561042057600080fd5b505afa158015610434573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104589190610b59565b90508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104a05761049f61049a33836107ae565b610849565b5b5060006104ab6108dc565b9050600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156104f7576104f26104ed610851565b610849565b610595565b818160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35b5050565b6000306105a46108dc565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503073ffffffffffffffffffffffffffffffffffffffff16630ee8be1b63f2fde38b60e01b7f00000000000000000000000000000000000000000000000000000000000000006040518363ffffffff1660e01b8152600401610647929190610dd3565b600060405180830381600087803b15801561066157600080fd5b505af1158015610675573d6000803e3d6000fd5b505050503073ffffffffffffffffffffffffffffffffffffffff16630ee8be1b638da5cb5b60e01b7f00000000000000000000000000000000000000000000000000000000000000006040518363ffffffff1660e01b81526004016106db929190610dd3565b600060405180830381600087803b1580156106f557600080fd5b505af1158015610709573d6000803e3d6000fd5b505050503073ffffffffffffffffffffffffffffffffffffffff16630ee8be1b63261fe67960e01b7f00000000000000000000000000000000000000000000000000000000000000006040518363ffffffff1660e01b815260040161076f929190610dd3565b600060405180830381600087803b15801561078957600080fd5b505af115801561079d573d6000803e3d6000fd5b5050505063d150751b60e01b905090565b60607f1de45ad18e8a4484220a3ca14f4d977641addbaba5a344b1384dc2aa78a2e34d83836040516024016107e4929190610d5f565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905092915050565b805160208201fd5b60607fe69edc3efc558767478a6a5d807456354856039c6271507a5c1071d037e50aaf604051602401604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905090565b6000806108e960026109f0565b90508091505090565b600060608373ffffffffffffffffffffffffffffffffffffffff168360405161091b9190610cf6565b600060405180830381855af49150503d8060008114610956576040519150601f19603f3d011682016040523d82523d6000602084013e61095b565b606091505b509150915081158061096f57506020815114155b806109d25750632c64c5ef60e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916818060200190518101906109b09190610bee565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614155b156109ea576109e96109e48583610a0c565b610849565b5b50505050565b60006080600183600a811115610a0257fe5b01901b9050919050565b60607ff74b11883dedd9755c2b93d5d172e1ad0300f9d700d2a708ba05e9fd9d4d15288383604051602401610a42929190610d88565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905092915050565b600081359050610ab681610f5e565b92915050565b600081519050610acb81610f5e565b92915050565b600081519050610ae081610f75565b92915050565b60008083601f840112610af857600080fd5b8235905067ffffffffffffffff811115610b1157600080fd5b602083019150836001820283011115610b2957600080fd5b9250929050565b600060208284031215610b4257600080fd5b6000610b5084828501610aa7565b91505092915050565b600060208284031215610b6b57600080fd5b6000610b7984828501610abc565b91505092915050565b60008060008060608587031215610b9857600080fd5b6000610ba687828801610aa7565b945050602085013567ffffffffffffffff811115610bc357600080fd5b610bcf87828801610ae6565b93509350506040610be287828801610aa7565b91505092959194509250565b600060208284031215610c0057600080fd5b6000610c0e84828501610ad1565b91505092915050565b610c2081610ee4565b82525050565b610c2f81610e7c565b82525050565b610c3e81610e8e565b82525050565b6000610c4f82610e39565b610c598185610e4f565b9350610c69818560208601610f1a565b610c7281610f4d565b840191505092915050565b6000610c8882610e39565b610c928185610e60565b9350610ca2818560208601610f1a565b80840191505092915050565b6000610cb982610e44565b610cc38185610e6b565b9350610cd3818560208601610f1a565b610cdc81610f4d565b840191505092915050565b610cf081610eda565b82525050565b6000610d028284610c7d565b915081905092915050565b6000602082019050610d226000830184610c26565b92915050565b6000606082019050610d3d6000830186610c17565b610d4a6020830185610c26565b610d576040830184610c26565b949350505050565b6000604082019050610d746000830185610c26565b610d816020830184610c26565b9392505050565b6000604082019050610d9d6000830185610c26565b8181036020830152610daf8184610c44565b90509392505050565b6000602082019050610dcd6000830184610c35565b92915050565b6000604082019050610de86000830185610c35565b610df56020830184610c26565b9392505050565b60006020820190508181036000830152610e168184610cae565b905092915050565b6000602082019050610e336000830184610ce7565b92915050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b6000610e8782610eba565b9050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610eef82610ef6565b9050919050565b6000610f0182610f08565b9050919050565b6000610f1382610eba565b9050919050565b60005b83811015610f38578082015181840152602081019050610f1d565b83811115610f47576000848401525b50505050565b6000601f19601f8301169050919050565b610f6781610e7c565b8114610f7257600080fd5b50565b610f7e81610e8e565b8114610f8957600080fd5b5056fea2646970667358221220ed19067c584cca98b628ef5c5a3c470ae9a777ad0c7edaf82f9a9d89a884eee064736f6c634300060c0033";

type OwnableFeatureConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OwnableFeatureConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OwnableFeature__factory extends ContractFactory {
  constructor(...args: OwnableFeatureConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<OwnableFeature> {
    return super.deploy(overrides || {}) as Promise<OwnableFeature>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): OwnableFeature {
    return super.attach(address) as OwnableFeature;
  }
  override connect(signer: Signer): OwnableFeature__factory {
    return super.connect(signer) as OwnableFeature__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OwnableFeatureInterface {
    return new utils.Interface(_abi) as OwnableFeatureInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OwnableFeature {
    return new Contract(address, _abi, signerOrProvider) as OwnableFeature;
  }
}
