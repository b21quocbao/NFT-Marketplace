/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  FundRecoveryFeature,
  FundRecoveryFeatureInterface,
} from "../../../../contracts/src/features/FundRecoveryFeature";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [],
    name: "FEATURE_NAME",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "FEATURE_VERSION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "migrate",
    outputs: [
      {
        internalType: "bytes4",
        name: "success",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20TokenV06",
        name: "erc20",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "recipientWallet",
        type: "address",
      },
    ],
    name: "transferTrappedTokensTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c0604052610017600160008061006660201b60201c565b60a09081525034801561002957600080fd5b503073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b81525050610090565b60008163ffffffff1660208463ffffffff16901b60408663ffffffff16901b171790509392505050565b60805160601c60a051610cd36100b56000398060c952508061045f5250610cd36000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063031b905c146100515780630d3758841461006f5780636ae4b4f71461008b5780638fd3ab80146100a9575b600080fd5b6100596100c7565b6040516100669190610af2565b60405180910390f35b6100896004803603810190610084919061082d565b6100eb565b005b6100936101f9565b6040516100a09190610ab0565b60405180910390f35b6100b1610232565b6040516100be9190610a35565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000081565b60003073ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561013357600080fd5b505afa158015610147573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061016b9190610804565b90508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101b3576101b26101ad3383610251565b6102ec565b5b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156101e9576101e683306102f4565b91505b6101f48382846103b5565b505050565b6040518060400160405280601381526020017f46756e645265636f76657279466561747572650000000000000000000000000081525081565b6000610244630d37588460e01b610440565b632c64c5ef60e01b905090565b60607f1de45ad18e8a4484220a3ca14f4d977641addbaba5a344b1384dc2aa78a2e34d83836040516024016102879291906109e3565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905092915050565b805160208201fd5b60006102ff836104d0565b15610323578173ffffffffffffffffffffffffffffffffffffffff163190506103af565b8273ffffffffffffffffffffffffffffffffffffffff166370a08231836040518263ffffffff1660e01b815260040161035c91906109c8565b60206040518083038186803b15801561037457600080fd5b505afa158015610388573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ac919061087c565b90505b92915050565b6103be836104d0565b1561040f578173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610409573d6000803e3d6000fd5b5061043b565b61043a82828573ffffffffffffffffffffffffffffffffffffffff1661051c9092919063ffffffff16565b5b505050565b3073ffffffffffffffffffffffffffffffffffffffff16636eb224cb827f00000000000000000000000000000000000000000000000000000000000000006040518363ffffffff1660e01b815260040161049b929190610a50565b600060405180830381600087803b1580156104b557600080fd5b505af11580156104c9573d6000803e3d6000fd5b5050505050565b600073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b606063a9059cbb60e01b8383604051602401610539929190610a0c565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090506105a284826105a8565b50505050565b600060608373ffffffffffffffffffffffffffffffffffffffff16836040516105d191906109b1565b6000604051808303816000865af19150503d806000811461060e576040519150601f19603f3d011682016040523d82523d6000602084013e610613565b606091505b50915091508161062757610626816102ec565b5b600081511415610682576000843b90506000811161067a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067190610ad2565b60405180910390fd5b5050506106c2565b60208151106106b65760006106988260006106c6565b905060018114156106ab575050506106c2565b6106b4826102ec565b505b6106bf816102ec565b50505b5050565b60006106d283836106dd565b60001c905092915050565b60006020820183511015610704576107036106fe6005855160208601610716565b6102ec565b5b60208201915081830151905092915050565b6060632800659560e01b84848460405160240161073593929190610a79565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090509392505050565b6000815190506107aa81610c41565b92915050565b6000813590506107bf81610c58565b92915050565b6000813590506107d481610c6f565b92915050565b6000813590506107e981610c86565b92915050565b6000815190506107fe81610c86565b92915050565b60006020828403121561081657600080fd5b60006108248482850161079b565b91505092915050565b60008060006060848603121561084257600080fd5b6000610850868287016107c5565b9350506020610861868287016107da565b9250506040610872868287016107b0565b9150509250925092565b60006020828403121561088e57600080fd5b600061089c848285016107ef565b91505092915050565b6108ae81610b3f565b82525050565b6108bd81610b63565b82525050565b60006108ce82610b0d565b6108d88185610b23565b93506108e8818560208601610bf0565b80840191505092915050565b6108fd81610bde565b82525050565b600061090e82610b18565b6109188185610b2e565b9350610928818560208601610bf0565b61093181610c23565b840191505092915050565b6000610949602783610b2e565b91507f696e76616c696420746f6b656e20616464726573732c20636f6e7461696e732060008301527f6e6f20636f6465000000000000000000000000000000000000000000000000006020830152604082019050919050565b6109ab81610bd4565b82525050565b60006109bd82846108c3565b915081905092915050565b60006020820190506109dd60008301846108a5565b92915050565b60006040820190506109f860008301856108a5565b610a0560208301846108a5565b9392505050565b6000604082019050610a2160008301856108a5565b610a2e60208301846109a2565b9392505050565b6000602082019050610a4a60008301846108b4565b92915050565b6000604082019050610a6560008301856108b4565b610a7260208301846108a5565b9392505050565b6000606082019050610a8e60008301866108f4565b610a9b60208301856109a2565b610aa860408301846109a2565b949350505050565b60006020820190508181036000830152610aca8184610903565b905092915050565b60006020820190508181036000830152610aeb8161093c565b9050919050565b6000602082019050610b0760008301846109a2565b92915050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b6000610b4a82610bb4565b9050919050565b6000610b5c82610bb4565b9050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6000610b9a82610b3f565b9050919050565b6000819050610baf82610c34565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610be982610ba1565b9050919050565b60005b83811015610c0e578082015181840152602081019050610bf3565b83811115610c1d576000848401525b50505050565b6000601f19601f8301169050919050565b60088110610c3e57fe5b50565b610c4a81610b3f565b8114610c5557600080fd5b50565b610c6181610b51565b8114610c6c57600080fd5b50565b610c7881610b8f565b8114610c8357600080fd5b50565b610c8f81610bd4565b8114610c9a57600080fd5b5056fea26469706673582212209fc15184beb0b0d354d4b7dc6cc5ae3ac3fcf735735e1452218cc4149873b1a164736f6c634300060c0033";

type FundRecoveryFeatureConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FundRecoveryFeatureConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FundRecoveryFeature__factory extends ContractFactory {
  constructor(...args: FundRecoveryFeatureConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FundRecoveryFeature> {
    return super.deploy(overrides || {}) as Promise<FundRecoveryFeature>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): FundRecoveryFeature {
    return super.attach(address) as FundRecoveryFeature;
  }
  override connect(signer: Signer): FundRecoveryFeature__factory {
    return super.connect(signer) as FundRecoveryFeature__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FundRecoveryFeatureInterface {
    return new utils.Interface(_abi) as FundRecoveryFeatureInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FundRecoveryFeature {
    return new Contract(address, _abi, signerOrProvider) as FundRecoveryFeature;
  }
}
