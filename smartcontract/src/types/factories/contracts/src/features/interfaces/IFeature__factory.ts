/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  IFeature,
  IFeatureInterface,
} from "../../../../../contracts/src/features/interfaces/IFeature";
import type { Provider } from "@ethersproject/providers";
import { Contract, Signer, utils } from "ethers";

const _abi = [
  {
    inputs: [],
    name: "FEATURE_NAME",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "FEATURE_VERSION",
    outputs: [
      {
        internalType: "uint256",
        name: "version",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

export class IFeature__factory {
  static readonly abi = _abi;
  static createInterface(): IFeatureInterface {
    return new utils.Interface(_abi) as IFeatureInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IFeature {
    return new Contract(address, _abi, signerOrProvider) as IFeature;
  }
}
