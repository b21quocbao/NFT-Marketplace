/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  ITokenSpenderFeature,
  ITokenSpenderFeatureInterface,
} from "../../../../../contracts/src/features/interfaces/ITokenSpenderFeature";
import type { Provider } from "@ethersproject/providers";
import { Contract, Signer, utils } from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20TokenV06",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "_spendERC20Tokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllowanceTarget",
    outputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20TokenV06",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "getSpendableERC20BalanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

export class ITokenSpenderFeature__factory {
  static readonly abi = _abi;
  static createInterface(): ITokenSpenderFeatureInterface {
    return new utils.Interface(_abi) as ITokenSpenderFeatureInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ITokenSpenderFeature {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ITokenSpenderFeature;
  }
}
