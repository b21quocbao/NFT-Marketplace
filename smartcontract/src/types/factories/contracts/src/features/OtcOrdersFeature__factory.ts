/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  OtcOrdersFeature,
  OtcOrdersFeatureInterface,
} from "../../../../contracts/src/features/OtcOrdersFeature";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "zeroExAddress",
        type: "address",
      },
      {
        internalType: "contract IEtherTokenV06",
        name: "weth",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "maker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "taker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "makerToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "takerToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "makerTokenFilledAmount",
        type: "uint128",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "takerTokenFilledAmount",
        type: "uint128",
      },
    ],
    name: "OtcOrderFilled",
    type: "event",
  },
  {
    inputs: [],
    name: "EIP712_DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "FEATURE_NAME",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "FEATURE_VERSION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract IERC20TokenV06",
            name: "makerToken",
            type: "address",
          },
          {
            internalType: "contract IERC20TokenV06",
            name: "takerToken",
            type: "address",
          },
          {
            internalType: "uint128",
            name: "makerAmount",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "takerAmount",
            type: "uint128",
          },
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            internalType: "address",
            name: "taker",
            type: "address",
          },
          {
            internalType: "address",
            name: "txOrigin",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "expiryAndNonce",
            type: "uint256",
          },
        ],
        internalType: "struct LibNativeOrder.OtcOrder",
        name: "order",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "enum LibSignature.SignatureType",
            name: "signatureType",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
        ],
        internalType: "struct LibSignature.Signature",
        name: "makerSignature",
        type: "tuple",
      },
      {
        internalType: "uint128",
        name: "takerTokenFillAmount",
        type: "uint128",
      },
      {
        internalType: "address",
        name: "taker",
        type: "address",
      },
      {
        internalType: "bool",
        name: "useSelfBalance",
        type: "bool",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "_fillOtcOrder",
    outputs: [
      {
        internalType: "uint128",
        name: "takerTokenFilledAmount",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "makerTokenFilledAmount",
        type: "uint128",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract IERC20TokenV06",
            name: "makerToken",
            type: "address",
          },
          {
            internalType: "contract IERC20TokenV06",
            name: "takerToken",
            type: "address",
          },
          {
            internalType: "uint128",
            name: "makerAmount",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "takerAmount",
            type: "uint128",
          },
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            internalType: "address",
            name: "taker",
            type: "address",
          },
          {
            internalType: "address",
            name: "txOrigin",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "expiryAndNonce",
            type: "uint256",
          },
        ],
        internalType: "struct LibNativeOrder.OtcOrder[]",
        name: "orders",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "enum LibSignature.SignatureType",
            name: "signatureType",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
        ],
        internalType: "struct LibSignature.Signature[]",
        name: "makerSignatures",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "enum LibSignature.SignatureType",
            name: "signatureType",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
        ],
        internalType: "struct LibSignature.Signature[]",
        name: "takerSignatures",
        type: "tuple[]",
      },
      {
        internalType: "bool[]",
        name: "unwrapWeth",
        type: "bool[]",
      },
    ],
    name: "batchFillTakerSignedOtcOrders",
    outputs: [
      {
        internalType: "bool[]",
        name: "successes",
        type: "bool[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract IERC20TokenV06",
            name: "makerToken",
            type: "address",
          },
          {
            internalType: "contract IERC20TokenV06",
            name: "takerToken",
            type: "address",
          },
          {
            internalType: "uint128",
            name: "makerAmount",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "takerAmount",
            type: "uint128",
          },
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            internalType: "address",
            name: "taker",
            type: "address",
          },
          {
            internalType: "address",
            name: "txOrigin",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "expiryAndNonce",
            type: "uint256",
          },
        ],
        internalType: "struct LibNativeOrder.OtcOrder",
        name: "order",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "enum LibSignature.SignatureType",
            name: "signatureType",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
        ],
        internalType: "struct LibSignature.Signature",
        name: "makerSignature",
        type: "tuple",
      },
      {
        internalType: "uint128",
        name: "takerTokenFillAmount",
        type: "uint128",
      },
    ],
    name: "fillOtcOrder",
    outputs: [
      {
        internalType: "uint128",
        name: "takerTokenFilledAmount",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "makerTokenFilledAmount",
        type: "uint128",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract IERC20TokenV06",
            name: "makerToken",
            type: "address",
          },
          {
            internalType: "contract IERC20TokenV06",
            name: "takerToken",
            type: "address",
          },
          {
            internalType: "uint128",
            name: "makerAmount",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "takerAmount",
            type: "uint128",
          },
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            internalType: "address",
            name: "taker",
            type: "address",
          },
          {
            internalType: "address",
            name: "txOrigin",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "expiryAndNonce",
            type: "uint256",
          },
        ],
        internalType: "struct LibNativeOrder.OtcOrder",
        name: "order",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "enum LibSignature.SignatureType",
            name: "signatureType",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
        ],
        internalType: "struct LibSignature.Signature",
        name: "makerSignature",
        type: "tuple",
      },
      {
        internalType: "uint128",
        name: "takerTokenFillAmount",
        type: "uint128",
      },
    ],
    name: "fillOtcOrderForEth",
    outputs: [
      {
        internalType: "uint128",
        name: "takerTokenFilledAmount",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "makerTokenFilledAmount",
        type: "uint128",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract IERC20TokenV06",
            name: "makerToken",
            type: "address",
          },
          {
            internalType: "contract IERC20TokenV06",
            name: "takerToken",
            type: "address",
          },
          {
            internalType: "uint128",
            name: "makerAmount",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "takerAmount",
            type: "uint128",
          },
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            internalType: "address",
            name: "taker",
            type: "address",
          },
          {
            internalType: "address",
            name: "txOrigin",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "expiryAndNonce",
            type: "uint256",
          },
        ],
        internalType: "struct LibNativeOrder.OtcOrder",
        name: "order",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "enum LibSignature.SignatureType",
            name: "signatureType",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
        ],
        internalType: "struct LibSignature.Signature",
        name: "makerSignature",
        type: "tuple",
      },
    ],
    name: "fillOtcOrderWithEth",
    outputs: [
      {
        internalType: "uint128",
        name: "takerTokenFilledAmount",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "makerTokenFilledAmount",
        type: "uint128",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract IERC20TokenV06",
            name: "makerToken",
            type: "address",
          },
          {
            internalType: "contract IERC20TokenV06",
            name: "takerToken",
            type: "address",
          },
          {
            internalType: "uint128",
            name: "makerAmount",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "takerAmount",
            type: "uint128",
          },
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            internalType: "address",
            name: "taker",
            type: "address",
          },
          {
            internalType: "address",
            name: "txOrigin",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "expiryAndNonce",
            type: "uint256",
          },
        ],
        internalType: "struct LibNativeOrder.OtcOrder",
        name: "order",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "enum LibSignature.SignatureType",
            name: "signatureType",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
        ],
        internalType: "struct LibSignature.Signature",
        name: "makerSignature",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "enum LibSignature.SignatureType",
            name: "signatureType",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
        ],
        internalType: "struct LibSignature.Signature",
        name: "takerSignature",
        type: "tuple",
      },
    ],
    name: "fillTakerSignedOtcOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract IERC20TokenV06",
            name: "makerToken",
            type: "address",
          },
          {
            internalType: "contract IERC20TokenV06",
            name: "takerToken",
            type: "address",
          },
          {
            internalType: "uint128",
            name: "makerAmount",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "takerAmount",
            type: "uint128",
          },
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            internalType: "address",
            name: "taker",
            type: "address",
          },
          {
            internalType: "address",
            name: "txOrigin",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "expiryAndNonce",
            type: "uint256",
          },
        ],
        internalType: "struct LibNativeOrder.OtcOrder",
        name: "order",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "enum LibSignature.SignatureType",
            name: "signatureType",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
        ],
        internalType: "struct LibSignature.Signature",
        name: "makerSignature",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "enum LibSignature.SignatureType",
            name: "signatureType",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
        ],
        internalType: "struct LibSignature.Signature",
        name: "takerSignature",
        type: "tuple",
      },
    ],
    name: "fillTakerSignedOtcOrderForEth",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract IERC20TokenV06",
            name: "makerToken",
            type: "address",
          },
          {
            internalType: "contract IERC20TokenV06",
            name: "takerToken",
            type: "address",
          },
          {
            internalType: "uint128",
            name: "makerAmount",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "takerAmount",
            type: "uint128",
          },
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            internalType: "address",
            name: "taker",
            type: "address",
          },
          {
            internalType: "address",
            name: "txOrigin",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "expiryAndNonce",
            type: "uint256",
          },
        ],
        internalType: "struct LibNativeOrder.OtcOrder",
        name: "order",
        type: "tuple",
      },
    ],
    name: "getOtcOrderHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract IERC20TokenV06",
            name: "makerToken",
            type: "address",
          },
          {
            internalType: "contract IERC20TokenV06",
            name: "takerToken",
            type: "address",
          },
          {
            internalType: "uint128",
            name: "makerAmount",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "takerAmount",
            type: "uint128",
          },
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            internalType: "address",
            name: "taker",
            type: "address",
          },
          {
            internalType: "address",
            name: "txOrigin",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "expiryAndNonce",
            type: "uint256",
          },
        ],
        internalType: "struct LibNativeOrder.OtcOrder",
        name: "order",
        type: "tuple",
      },
    ],
    name: "getOtcOrderInfo",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "orderHash",
            type: "bytes32",
          },
          {
            internalType: "enum LibNativeOrder.OrderStatus",
            name: "status",
            type: "uint8",
          },
        ],
        internalType: "struct LibNativeOrder.OtcOrderInfo",
        name: "orderInfo",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "txOrigin",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "nonceBucket",
        type: "uint64",
      },
    ],
    name: "lastOtcTxOriginNonce",
    outputs: [
      {
        internalType: "uint128",
        name: "lastNonce",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "migrate",
    outputs: [
      {
        internalType: "bytes4",
        name: "success",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6101006040526200001a60016000806200016960201b60201c565b60c0908152503480156200002d57600080fd5b5060405162003f2738038062003f278339818101604052810190620000539190620001c1565b813073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505060004690507f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f7f9e5dae0addaf20578aeb5d70341d092b53b4e14480ac5726438fd436df7ba4277f06c015bd22b4c69690933c1058878ebdfef31f9aaae40bbe86d8a09fe1b2972c83856040516020016200010b95949392919062000235565b6040516020818303038152906040528051906020012060a0818152505050508073ffffffffffffffffffffffffffffffffffffffff1660e08173ffffffffffffffffffffffffffffffffffffffff1660601b81525050505062000322565b60008163ffffffff1660208463ffffffff16901b60408663ffffffff16901b171790509392505050565b600081519050620001a481620002ee565b92915050565b600081519050620001bb8162000308565b92915050565b60008060408385031215620001d557600080fd5b6000620001e58582860162000193565b9250506020620001f885828601620001aa565b9150509250929050565b6200020d8162000292565b82525050565b6200021e81620002a6565b82525050565b6200022f81620002e4565b82525050565b600060a0820190506200024c600083018862000213565b6200025b602083018762000213565b6200026a604083018662000213565b62000279606083018562000224565b62000288608083018462000202565b9695505050505050565b60006200029f82620002c4565b9050919050565b6000819050919050565b6000620002bd8262000292565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b620002f98162000292565b81146200030557600080fd5b50565b6200031381620002b0565b81146200031f57600080fd5b50565b60805160601c60a05160c05160e05160601c613b9c6200038b6000398061057952806105d1528061074c52806107a45280610897528061096c5280610cd15280610d965250806103c1525080610e995280611acd52508061111c5280611c435250613b9c6000f3fe6080604052600436106100dd5760003560e01c80638c807c431161007f578063dab400f311610059578063dab400f3146102db578063dac748d414610306578063e4ba843914610344578063e52d176414610382576100dd565b80638c807c43146102355780638fd3ab8014610272578063a578efaf1461029d576100dd565b806359ebfb45116100bb57806359ebfb45146101735780636ae4b4f7146101b0578063706394d5146101db578063724d39531461020c576100dd565b8063031b905c146100e25780634f9481101461010d57806353476b8914610136575b600080fd5b3480156100ee57600080fd5b506100f76103bf565b60405161010491906136e7565b60405180910390f35b34801561011957600080fd5b50610134600480360381019061012f9190612ae6565b6103e3565b005b34801561014257600080fd5b5061015d60048036038101906101589190612a7e565b610488565b60405161016a91906132e6565b60405180910390f35b34801561017f57600080fd5b5061019a6004803603810190610195919061297f565b6104a2565b6040516101a79190613688565b60405180910390f35b3480156101bc57600080fd5b506101c561053b565b6040516101d29190613551565b60405180910390f35b6101f560048036038101906101f09190612aa8565b610574565b6040516102039291906136be565b60405180910390f35b34801561021857600080fd5b50610233600480360381019061022e9190612ae6565b610895565b005b34801561024157600080fd5b5061025c60048036038101906102579190612a7e565b610a7b565b6040516102699190613633565b60405180910390f35b34801561027e57600080fd5b50610287610c1d565b6040516102949190613484565b60405180910390f35b3480156102a957600080fd5b506102c460048036038101906102bf9190612b38565b610ccc565b6040516102d29291906136be565b60405180910390f35b3480156102e757600080fd5b506102f0610e97565b6040516102fd91906132e6565b60405180910390f35b34801561031257600080fd5b5061032d60048036038101906103289190612b38565b610ebb565b60405161033b9291906136be565b60405180910390f35b34801561035057600080fd5b5061036b60048036038101906103669190612b8a565b610f4d565b6040516103799291906136be565b60405180910390f35b34801561038e57600080fd5b506103a960048036038101906103a491906129bb565b611033565b6040516103b691906132c4565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000081565b6103eb6125d5565b6103f484610a7b565b9050600061040682600001518461127f565b905061041485838684611413565b61042485866060015183846116ef565b50507fac75f773e3a92f1a02b12134d65e1f47f8a14eabe4eaf1e24624918e6a8b269f8260000151866080015183886000015189602001518a604001518b6060015160405161047997969594939291906133a7565b60405180910390a15050505050565b600061049b610496836119b4565b611ac9565b9050919050565b6000806104ad611b1b565b90508060000160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008467ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060009054906101000a90046fffffffffffffffffffffffffffffffff1691505092915050565b6040518060400160405280600981526020017f4f74634f7264657273000000000000000000000000000000000000000000000081525081565b6000807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16846020015173ffffffffffffffffffffffffffffffffffffffff161415610655577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b15801561063757600080fd5b505af115801561064b573d6000803e3d6000fd5b50505050506106dc565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee73ffffffffffffffffffffffffffffffffffffffff16846020015173ffffffffffffffffffffffffffffffffffffffff16146106db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d290613613565b60405180910390fd5b5b6106e46125d5565b6106ed85610a7b565b90506106fb85828633611413565b61070f8561070834611b31565b30336116ef565b809350819450505034836fffffffffffffffffffffffffffffffff16101561083a576000836fffffffffffffffffffffffffffffffff16340390507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16866020015173ffffffffffffffffffffffffffffffffffffffff16141561082e577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16632e1a7d4d826040518263ffffffff1660e01b81526004016107fb91906136e7565b600060405180830381600087803b15801561081557600080fd5b505af1158015610829573d6000803e3d6000fd5b505050505b6108383382611b69565b505b7fac75f773e3a92f1a02b12134d65e1f47f8a14eabe4eaf1e24624918e6a8b269f81600001518660800151338860000151896020015187896040516108859796959493929190613338565b60405180910390a1509250929050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16836000015173ffffffffffffffffffffffffffffffffffffffff1614610927576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161091e90613573565b60405180910390fd5b61092f6125d5565b61093884610a7b565b9050600061094a82600001518461127f565b905061095885838684611413565b61096885866060015183306116ef565b50507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16632e1a7d4d86604001516040518263ffffffff1660e01b81526004016109c791906136a3565b600060405180830381600087803b1580156109e157600080fd5b505af11580156109f5573d6000803e3d6000fd5b50505050610a198186604001516fffffffffffffffffffffffffffffffff16611b69565b7fac75f773e3a92f1a02b12134d65e1f47f8a14eabe4eaf1e24624918e6a8b269f8260000151866080015183886000015189602001518a604001518b60600151604051610a6c97969594939291906133a7565b60405180910390a15050505050565b610a836125d5565b610a8c82610488565b8160000181815250506000610a9f611b1b565b9050600060c08460e00151901c9050600060808560e00151901c905060008560e00151905060008460000160008860c0015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008467ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060009054906101000a90046fffffffffffffffffffffffffffffffff169050806fffffffffffffffffffffffffffffffff16826fffffffffffffffffffffffffffffffff1611610ba757600086602001906004811115610b8c57fe5b90816004811115610b9957fe5b815250505050505050610c18565b4267ffffffffffffffff168467ffffffffffffffff1611610bef57600486602001906004811115610bd457fe5b90816004811115610be157fe5b815250505050505050610c18565b600186602001906004811115610c0157fe5b90816004811115610c0e57fe5b8152505050505050505b919050565b6000610c2f63dac748d460e01b611c24565b610c3f63a578efaf60e01b611c24565b610c4f63706394d560e01b611c24565b610c5f63724d395360e01b611c24565b610c6f634f94811060e01b611c24565b610c7f63e52d176460e01b611c24565b610c8f63e4ba843960e01b611c24565b610c9f638c807c4360e01b611c24565b610caf6353476b8960e01b611c24565b610cbf6359ebfb4560e01b611c24565b632c64c5ef60e01b905090565b6000807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16856000015173ffffffffffffffffffffffffffffffffffffffff1614610d61576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d58906135d3565b60405180910390fd5b610d696125d5565b610d7286610a7b565b9050610d8086828733611413565b610d8c868533306116ef565b80935081945050507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16632e1a7d4d836040518263ffffffff1660e01b8152600401610ded91906136a3565b600060405180830381600087803b158015610e0757600080fd5b505af1158015610e1b573d6000803e3d6000fd5b50505050610e3b33836fffffffffffffffffffffffffffffffff16611b69565b7fac75f773e3a92f1a02b12134d65e1f47f8a14eabe4eaf1e24624918e6a8b269f816000015187608001513389600001518a602001518789604051610e869796959493929190613338565b60405180910390a150935093915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600080610ec66125d5565b610ecf86610a7b565b9050610edd86828733611413565b610ee9868533336116ef565b80935081945050507fac75f773e3a92f1a02b12134d65e1f47f8a14eabe4eaf1e24624918e6a8b269f816000015187608001513389600001518a602001518789604051610f3c9796959493929190613338565b60405180910390a150935093915050565b6000803073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610f9557610f94610f8f33611cb4565b611d4c565b5b610f9d6125d5565b610fa689610a7b565b9050610fb489828a89611413565b610fcc898887610fc45788610fc6565b305b876116ef565b80935081945050507fac75f773e3a92f1a02b12134d65e1f47f8a14eabe4eaf1e24624918e6a8b269f81600001518a60800151888c600001518d60200151878960405161101f97969594939291906133a7565b60405180910390a150965096945050505050565b606083518551148015611047575082518551145b8015611054575081518551145b611093576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161108a90613593565b60405180910390fd5b845167ffffffffffffffff811180156110ab57600080fd5b506040519080825280602002602001820160405280156110da5781602001602082028036833780820191505090505b50905060005b855181146112765760008382815181106110f657fe5b602002602001015161110f57634f94811060e01b611118565b63724d395360e01b5b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168188848151811061115e57fe5b602002602001015188858151811061117257fe5b602002602001015188868151811061118657fe5b60200260200101516040516024016111a09392919061364e565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161120a9190613246565b600060405180830381855af49150503d8060008114611245576040519150601f19603f3d011682016040523d82523d6000602084013e61124a565b606091505b505083838151811061125857fe5b602002602001018115151515815250505080806001019150506110e0565b50949350505050565b600061128b8383611d54565b6002600481111561129857fe5b826000015160048111156112a857fe5b141561131057600183836020015184604001518560600151604051600081526020016040526040516112dd949392919061343f565b6020604051602081039080840390855afa1580156112ff573d6000803e3d6000fd5b5050506020604051035190506113c4565b6003600481111561131d57fe5b8260000151600481111561132d57fe5b14156113c35760007f19457468657265756d205369676e6564204d6573736167653a0a33320000000060005283601c52603c600020905060018184602001518560400151866060015160405160008152602001604052604051611393949392919061343f565b6020604051602081039080840390855afa1580156113b5573d6000803e3d6000fd5b505050602060405103519150505b5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561140d5761140c611407600585611e7f565b611d4c565b5b92915050565b6001600481111561142057fe5b8360200151600481111561143057fe5b1461145b5761145a61145584600001518560200151600481111561145057fe5b611f1a565b611d4c565b5b600073ffffffffffffffffffffffffffffffffffffffff168460a0015173ffffffffffffffffffffffffffffffffffffffff16141580156114cc57508073ffffffffffffffffffffffffffffffffffffffff168460a0015173ffffffffffffffffffffffffffffffffffffffff1614155b156114ed576114ec6114e78460000151838760a00151611fb5565b611d4c565b5b60006114f7612053565b90503273ffffffffffffffffffffffffffffffffffffffff168560c0015173ffffffffffffffffffffffffffffffffffffffff16141580156115c657508060030160008660c0015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16155b156115e7576115e66115e18560000151328860c00151612069565b611d4c565b5b60006115f785600001518561127f565b9050856080015173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141580156116c65750816004016000876080015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16155b156116e7576116e66116e18660000151838960800151612107565b611d4c565b5b505050505050565b600080600060808760e00151901c905060008760e00151905080611711611b1b565b60000160008a60c0015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008467ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff160217905550505085606001516fffffffffffffffffffffffffffffffff16856fffffffffffffffffffffffffffffffff1614156117f5578560600151915085604001519050611851565b6118038587606001516121a5565b915061184e826fffffffffffffffffffffffffffffffff1687606001516fffffffffffffffffffffffffffffffff1688604001516fffffffffffffffffffffffffffffffff166121e2565b90505b3073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16141561195e5773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee73ffffffffffffffffffffffffffffffffffffffff16866020015173ffffffffffffffffffffffffffffffffffffffff16141561193357856080015173ffffffffffffffffffffffffffffffffffffffff166108fc836fffffffffffffffffffffffffffffffff169081150290604051600060405180830381858888f1935050505015801561192d573d6000803e3d6000fd5b50611959565b61195886602001518760800151846fffffffffffffffffffffffffffffffff16612212565b5b611985565b6119848660200151858860800151856fffffffffffffffffffffffffffffffff16612313565b5b6119ab8660000151876080015185846fffffffffffffffffffffffffffffffff16612313565b94509492505050565b60006040517f2f754524de756ae72459efbe1ec88c19a745639821de528ac3fb88f9e65e35c88152825173ffffffffffffffffffffffffffffffffffffffff166020820152602083015173ffffffffffffffffffffffffffffffffffffffff16604082015260408301516fffffffffffffffffffffffffffffffff16606082015260608301516fffffffffffffffffffffffffffffffff166080820152608083015173ffffffffffffffffffffffffffffffffffffffff1660a082015260a083015173ffffffffffffffffffffffffffffffffffffffff1660c082015260c083015173ffffffffffffffffffffffffffffffffffffffff1660e082015260e08301516101008201526101208120915050919050565b60007f000000000000000000000000000000000000000000000000000000000000000082604051602001611afe92919061325d565b604051602081830303815290604052805190602001209050919050565b600080611b286008612431565b90508091505090565b60006fffffffffffffffffffffffffffffffff8016821115611b6157611b60611b5b60038461244d565b611d4c565b5b819050919050565b6000811115611c205760008273ffffffffffffffffffffffffffffffffffffffff1682604051611b9890613294565b60006040518083038185875af1925050503d8060008114611bd5576040519150601f19603f3d011682016040523d82523d6000602084013e611bda565b606091505b5050905080611c1e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c15906135b3565b60405180910390fd5b505b5050565b3073ffffffffffffffffffffffffffffffffffffffff16636eb224cb827f00000000000000000000000000000000000000000000000000000000000000006040518363ffffffff1660e01b8152600401611c7f92919061349f565b600060405180830381600087803b158015611c9957600080fd5b505af1158015611cad573d6000803e3d6000fd5b5050505050565b60607ff0ec779b0bcda6d84abf99ee2c67647d1100ebbb553a9c2d1c2ba1579592832c82604051602401611ce891906132a9565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050509050919050565b805160208201fd5b7ffffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141816040015160001c101580611dbe5750600160027ffffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd036414181611db157fe5b0401816060015160001c10155b15611dd757611dd6611dd1600584611e7f565b611d4c565b5b60006004811115611de457fe5b81600001516004811115611df457fe5b1415611e0e57611e0d611e08600384611e7f565b611d4c565b5b60016004811115611e1b57fe5b81600001516004811115611e2b57fe5b1415611e4557611e44611e3f600084611e7f565b611d4c565b5b600480811115611e5157fe5b81600001516004811115611e6157fe5b1415611e7b57611e7a611e75600284611e7f565b611d4c565b5b5050565b60607ff18f11f3027e735c758137924b262d4d3aff0037dcd785aca3c699fa05d960bd8383604051602401611eb5929190613528565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905092915050565b60607f47ab394e41470191eaf9fa542e84ac483a12665fbd616eb8d1c022ced6c940008383604051602401611f50929190613416565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905092915050565b60607f5d3300180a4547b3e27137be832d3ebf56f1ba5ebb30dd580999c61f77fa6396848484604051602401611fed93929190613301565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090509392505050565b6000806120606007612431565b90508091505090565b60607fc0972f3cc4234ca2091de7e7bc7081494bd29ac280167d66f0d44168973b16348484846040516024016120a193929190613301565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090509392505050565b60607ff13e65d925201525f3d71a731833b19bb26e44cfbd97caf72a366b73866f712484848460405160240161213f93929190613301565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090509392505050565b6000816fffffffffffffffffffffffffffffffff16836fffffffffffffffffffffffffffffffff16106121d857816121da565b825b905092915050565b6000612209836121fb84876124cf90919063ffffffff16565b61251990919063ffffffff16565b90509392505050565b3073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415612281576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612278906135f3565b60405180910390fd5b6040517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83166004820152816024820152602081604483600073ffffffffffffffffffffffffffffffffffffffff89165af13d6001835114602082101516811517821691508161230b57806000843e8083fd5b505050505050565b3073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415612382576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612379906135f3565b60405180910390fd5b6040517f23b872dd00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8416600482015273ffffffffffffffffffffffffffffffffffffffff83166024820152816044820152602081606483600073ffffffffffffffffffffffffffffffffffffffff8a165af13d6001835114602082101516811517821691508161242857806000843e8083fd5b50505050505050565b60006080600183600a81111561244357fe5b01901b9050919050565b606063c996af7b60e01b838360405160240161246a9291906134ff565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905092915050565b6000808314156124e25760009050612513565b60008284029050828482816124f357fe5b041461250e5761250d61250860018686612550565b611d4c565b5b809150505b92915050565b6000808214156125385761253761253260038585612550565b611d4c565b5b600082848161254357fe5b0490508091505092915050565b606063e946c1bb60e01b84848460405160240161256f939291906134c8565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090509392505050565b604051806040016040528060008019168152602001600060048111156125f757fe5b81525090565b60008135905061260c81613a9e565b92915050565b600082601f83011261262357600080fd5b81356126366126318261372f565b613702565b9150818183526020840193506020810190508385602084028201111561265b57600080fd5b60005b8381101561268b5781612671888261279d565b84526020840193506020830192505060018101905061265e565b5050505092915050565b600082601f8301126126a657600080fd5b81356126b96126b482613757565b613702565b91508181835260208401935060208101905083856101008402820111156126df57600080fd5b60005b8381101561271057816126f588826127f1565b845260208401935061010083019250506001810190506126e2565b5050505092915050565b600082601f83011261272b57600080fd5b813561273e6127398261377f565b613702565b9150818183526020840193506020810190508385608084028201111561276357600080fd5b60005b83811015612793578161277988826128b7565b845260208401935060808301925050600181019050612766565b5050505092915050565b6000813590506127ac81613ab5565b92915050565b6000813590506127c181613acc565b92915050565b6000813590506127d681613ae3565b92915050565b6000813590506127eb81613afa565b92915050565b6000610100828403121561280457600080fd5b61280f610100613702565b9050600061281f848285016127c7565b6000830152506020612833848285016127c7565b60208301525060406128478482850161292b565b604083015250606061285b8482850161292b565b606083015250608061286f848285016125fd565b60808301525060a0612883848285016125fd565b60a08301525060c0612897848285016125fd565b60c08301525060e06128ab84828501612940565b60e08301525092915050565b6000608082840312156128c957600080fd5b6128d36080613702565b905060006128e3848285016127dc565b60008301525060206128f78482850161296a565b602083015250604061290b848285016127b2565b604083015250606061291f848285016127b2565b60608301525092915050565b60008135905061293a81613b0a565b92915050565b60008135905061294f81613b21565b92915050565b60008135905061296481613b38565b92915050565b60008135905061297981613b4f565b92915050565b6000806040838503121561299257600080fd5b60006129a0858286016125fd565b92505060206129b185828601612955565b9150509250929050565b600080600080608085870312156129d157600080fd5b600085013567ffffffffffffffff8111156129eb57600080fd5b6129f787828801612695565b945050602085013567ffffffffffffffff811115612a1457600080fd5b612a208782880161271a565b935050604085013567ffffffffffffffff811115612a3d57600080fd5b612a498782880161271a565b925050606085013567ffffffffffffffff811115612a6657600080fd5b612a7287828801612612565b91505092959194509250565b60006101008284031215612a9157600080fd5b6000612a9f848285016127f1565b91505092915050565b6000806101808385031215612abc57600080fd5b6000612aca858286016127f1565b925050610100612adc858286016128b7565b9150509250929050565b60008060006102008486031215612afc57600080fd5b6000612b0a868287016127f1565b935050610100612b1c868287016128b7565b925050610180612b2e868287016128b7565b9150509250925092565b60008060006101a08486031215612b4e57600080fd5b6000612b5c868287016127f1565b935050610100612b6e868287016128b7565b925050610180612b808682870161292b565b9150509250925092565b6000806000806000806102008789031215612ba457600080fd5b6000612bb289828a016127f1565b965050610100612bc489828a016128b7565b955050610180612bd689828a0161292b565b9450506101a0612be889828a016125fd565b9350506101c0612bfa89828a0161279d565b9250506101e0612c0c89828a016125fd565b9150509295509295509295565b6000612c258383612cbc565b60208301905092915050565b612c3a81613949565b82525050565b612c498161381d565b82525050565b612c588161381d565b82525050565b6000612c69826137b7565b612c7381856137e5565b9350612c7e836137a7565b8060005b83811015612caf578151612c968882612c19565b9750612ca1836137d8565b925050600181019050612c82565b5085935050505092915050565b612cc58161382f565b82525050565b612cd48161383b565b82525050565b612ce38161383b565b82525050565b612cfa612cf58261383b565b613a42565b82525050565b612d0981613845565b82525050565b6000612d1a826137c2565b612d2481856137f6565b9350612d34818560208601613a0f565b80840191505092915050565b612d498161395b565b82525050565b612d588161397f565b82525050565b612d6781613991565b82525050565b612d76816139a3565b82525050565b612d85816139b5565b82525050565b612d94816139c7565b82525050565b6000612da5826137cd565b612daf8185613801565b9350612dbf818560208601613a0f565b612dc881613a4c565b840191505092915050565b6000612de0603e83613801565b91507f4f74634f7264657273466561747572653a3a66696c6c54616b65725369676e6560008301527f644f74634f726465722f4d414b45525f544f4b454e5f4e4f545f5745544800006020830152604082019050919050565b6000612e46600283613812565b91507f19010000000000000000000000000000000000000000000000000000000000006000830152600282019050919050565b6000612e86604883613801565b91507f4f74634f7264657273466561747572653a3a626174636846696c6c54616b657260008301527f5369676e65644f74634f72646572732f4d49534d4154434845445f415252415960208301527f5f4c454e475448530000000000000000000000000000000000000000000000006040830152606082019050919050565b6000612f12602f83613801565b91507f466978696e546f6b656e5370656e6465723a3a5f7472616e736665724574682f60008301527f5452414e534645525f4641494c454400000000000000000000000000000000006020830152604082019050919050565b6000612f78603983613801565b91507f4f74634f7264657273466561747572653a3a66696c6c4f74634f72646572466f60008301527f724574682f4d414b45525f544f4b454e5f4e4f545f57455448000000000000006020830152604082019050919050565b6000612fde6000836137f6565b9150600082019050919050565b6000612ff8602483613801565b91507f466978696e546f6b656e5370656e6465722f43414e4e4f545f494e564f4b455f60008301527f53454c46000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061305e603983613801565b91507f4f74634f7264657273466561747572653a3a66696c6c4f74634f72646572576960008301527f74684574682f494e56414c49445f54414b45525f544f4b454e000000000000006020830152604082019050919050565b6040820160008201516130cd6000850182612ccb565b5060208201516130e06020850182612d6d565b50505050565b610100820160008201516130fd6000850182612d40565b5060208201516131106020850182612d40565b50604082015161312360408501826131dd565b50606082015161313660608501826131dd565b5060808201516131496080850182612c40565b5060a082015161315c60a0850182612c40565b5060c082015161316f60c0850182612c40565b5060e082015161318260e085018261320a565b50505050565b60808201600082015161319e6000850182612d7c565b5060208201516131b16020850182613228565b5060408201516131c46040850182612ccb565b5060608201516131d76060850182612ccb565b50505050565b6131e6816138e2565b82525050565b6131f5816138e2565b82525050565b613204816139d9565b82525050565b6132138161391e565b82525050565b6132228161391e565b82525050565b6132318161393c565b82525050565b6132408161393c565b82525050565b60006132528284612d0f565b915081905092915050565b600061326882612e39565b91506132748285612ce9565b6020820191506132848284612ce9565b6020820191508190509392505050565b600061329f82612fd1565b9150819050919050565b60006020820190506132be6000830184612c4f565b92915050565b600060208201905081810360008301526132de8184612c5e565b905092915050565b60006020820190506132fb6000830184612cda565b92915050565b60006060820190506133166000830186612cda565b6133236020830185612c4f565b6133306040830184612c4f565b949350505050565b600060e08201905061334d600083018a612cda565b61335a6020830189612c4f565b6133676040830188612c31565b6133746060830187612c4f565b6133816080830186612c4f565b61338e60a08301856131ec565b61339b60c08301846131ec565b98975050505050505050565b600060e0820190506133bc600083018a612cda565b6133c96020830189612c4f565b6133d66040830188612c4f565b6133e36060830187612c4f565b6133f06080830186612c4f565b6133fd60a08301856131ec565b61340a60c08301846131ec565b98975050505050505050565b600060408201905061342b6000830185612cda565b6134386020830184613237565b9392505050565b60006080820190506134546000830187612cda565b6134616020830186613237565b61346e6040830185612cda565b61347b6060830184612cda565b95945050505050565b60006020820190506134996000830184612d00565b92915050565b60006040820190506134b46000830185612d00565b6134c16020830184612c4f565b9392505050565b60006060820190506134dd6000830186612d4f565b6134ea6020830185613219565b6134f76040830184613219565b949350505050565b60006040820190506135146000830185612d5e565b6135216020830184613219565b9392505050565b600060408201905061353d6000830185612d8b565b61354a6020830184612cda565b9392505050565b6000602082019050818103600083015261356b8184612d9a565b905092915050565b6000602082019050818103600083015261358c81612dd3565b9050919050565b600060208201905081810360008301526135ac81612e79565b9050919050565b600060208201905081810360008301526135cc81612f05565b9050919050565b600060208201905081810360008301526135ec81612f6b565b9050919050565b6000602082019050818103600083015261360c81612feb565b9050919050565b6000602082019050818103600083015261362c81613051565b9050919050565b600060408201905061364860008301846130b7565b92915050565b60006102008201905061366460008301866130e6565b613672610100830185613188565b613680610180830184613188565b949350505050565b600060208201905061369d60008301846131ec565b92915050565b60006020820190506136b860008301846131fb565b92915050565b60006040820190506136d360008301856131ec565b6136e060208301846131ec565b9392505050565b60006020820190506136fc6000830184613219565b92915050565b6000604051905081810181811067ffffffffffffffff8211171561372557600080fd5b8060405250919050565b600067ffffffffffffffff82111561374657600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111561376e57600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111561379657600080fd5b602082029050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600081905092915050565b6000613828826138fe565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600061387c8261381d565b9050919050565b600081905061389182613a5d565b919050565b60008190506138a482613a6a565b919050565b60008190506138b782613a77565b919050565b60008190506138ca82613a84565b919050565b60008190506138dd82613a91565b919050565b60006fffffffffffffffffffffffffffffffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600067ffffffffffffffff82169050919050565b600060ff82169050919050565b6000613954826139eb565b9050919050565b60006139668261396d565b9050919050565b6000613978826138fe565b9050919050565b600061398a82613883565b9050919050565b600061399c82613896565b9050919050565b60006139ae826138a9565b9050919050565b60006139c0826138bc565b9050919050565b60006139d2826138cf565b9050919050565b60006139e4826138e2565b9050919050565b60006139f6826139fd565b9050919050565b6000613a08826138fe565b9050919050565b60005b83811015613a2d578082015181840152602081019050613a12565b83811115613a3c576000848401525b50505050565b6000819050919050565b6000601f19601f8301169050919050565b60048110613a6757fe5b50565b60048110613a7457fe5b50565b60058110613a8157fe5b50565b60058110613a8e57fe5b50565b60068110613a9b57fe5b50565b613aa78161381d565b8114613ab257600080fd5b50565b613abe8161382f565b8114613ac957600080fd5b50565b613ad58161383b565b8114613ae057600080fd5b50565b613aec81613871565b8114613af757600080fd5b50565b60058110613b0757600080fd5b50565b613b13816138e2565b8114613b1e57600080fd5b50565b613b2a8161391e565b8114613b3557600080fd5b50565b613b4181613928565b8114613b4c57600080fd5b50565b613b588161393c565b8114613b6357600080fd5b5056fea2646970667358221220a82f7fe8689ed58ee37617faafbc27d84b18d53fce01b7cc5b9cfe1b5c29fdc764736f6c634300060c0033";

type OtcOrdersFeatureConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OtcOrdersFeatureConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OtcOrdersFeature__factory extends ContractFactory {
  constructor(...args: OtcOrdersFeatureConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    zeroExAddress: string,
    weth: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<OtcOrdersFeature> {
    return super.deploy(
      zeroExAddress,
      weth,
      overrides || {}
    ) as Promise<OtcOrdersFeature>;
  }
  override getDeployTransaction(
    zeroExAddress: string,
    weth: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(zeroExAddress, weth, overrides || {});
  }
  override attach(address: string): OtcOrdersFeature {
    return super.attach(address) as OtcOrdersFeature;
  }
  override connect(signer: Signer): OtcOrdersFeature__factory {
    return super.connect(signer) as OtcOrdersFeature__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OtcOrdersFeatureInterface {
    return new utils.Interface(_abi) as OtcOrdersFeatureInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OtcOrdersFeature {
    return new Contract(address, _abi, signerOrProvider) as OtcOrdersFeature;
  }
}
