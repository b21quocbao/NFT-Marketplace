/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  BatchFillNativeOrdersFeature,
  BatchFillNativeOrdersFeatureInterface,
} from "../../../../contracts/src/features/BatchFillNativeOrdersFeature";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "zeroExAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "EIP712_DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "FEATURE_NAME",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "FEATURE_VERSION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract IERC20TokenV06",
            name: "makerToken",
            type: "address",
          },
          {
            internalType: "contract IERC20TokenV06",
            name: "takerToken",
            type: "address",
          },
          {
            internalType: "uint128",
            name: "makerAmount",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "takerAmount",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "takerTokenFeeAmount",
            type: "uint128",
          },
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            internalType: "address",
            name: "taker",
            type: "address",
          },
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "address",
            name: "feeRecipient",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "pool",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "expiry",
            type: "uint64",
          },
          {
            internalType: "uint256",
            name: "salt",
            type: "uint256",
          },
        ],
        internalType: "struct LibNativeOrder.LimitOrder[]",
        name: "orders",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "enum LibSignature.SignatureType",
            name: "signatureType",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
        ],
        internalType: "struct LibSignature.Signature[]",
        name: "signatures",
        type: "tuple[]",
      },
      {
        internalType: "uint128[]",
        name: "takerTokenFillAmounts",
        type: "uint128[]",
      },
      {
        internalType: "bool",
        name: "revertIfIncomplete",
        type: "bool",
      },
    ],
    name: "batchFillLimitOrders",
    outputs: [
      {
        internalType: "uint128[]",
        name: "takerTokenFilledAmounts",
        type: "uint128[]",
      },
      {
        internalType: "uint128[]",
        name: "makerTokenFilledAmounts",
        type: "uint128[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract IERC20TokenV06",
            name: "makerToken",
            type: "address",
          },
          {
            internalType: "contract IERC20TokenV06",
            name: "takerToken",
            type: "address",
          },
          {
            internalType: "uint128",
            name: "makerAmount",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "takerAmount",
            type: "uint128",
          },
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            internalType: "address",
            name: "taker",
            type: "address",
          },
          {
            internalType: "address",
            name: "txOrigin",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "pool",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "expiry",
            type: "uint64",
          },
          {
            internalType: "uint256",
            name: "salt",
            type: "uint256",
          },
        ],
        internalType: "struct LibNativeOrder.RfqOrder[]",
        name: "orders",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "enum LibSignature.SignatureType",
            name: "signatureType",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
        ],
        internalType: "struct LibSignature.Signature[]",
        name: "signatures",
        type: "tuple[]",
      },
      {
        internalType: "uint128[]",
        name: "takerTokenFillAmounts",
        type: "uint128[]",
      },
      {
        internalType: "bool",
        name: "revertIfIncomplete",
        type: "bool",
      },
    ],
    name: "batchFillRfqOrders",
    outputs: [
      {
        internalType: "uint128[]",
        name: "takerTokenFilledAmounts",
        type: "uint128[]",
      },
      {
        internalType: "uint128[]",
        name: "makerTokenFilledAmounts",
        type: "uint128[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "migrate",
    outputs: [
      {
        internalType: "bytes4",
        name: "success",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60e06040526200001960018060006200013060201b60201c565b60c0908152503480156200002c57600080fd5b506040516200270038038062002700833981810160405281019062000052919062000171565b803073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505060004690507f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f7f9e5dae0addaf20578aeb5d70341d092b53b4e14480ac5726438fd436df7ba4277f06c015bd22b4c69690933c1058878ebdfef31f9aaae40bbe86d8a09fe1b2972c83856040516020016200010a959493929190620001d0565b6040516020818303038152906040528051906020012060a081815250505050506200028f565b60008163ffffffff1660208463ffffffff16901b60408663ffffffff16901b171790509392505050565b6000815190506200016b8162000275565b92915050565b6000602082840312156200018457600080fd5b600062000194848285016200015a565b91505092915050565b620001a8816200022d565b82525050565b620001b98162000241565b82525050565b620001ca816200026b565b82525050565b600060a082019050620001e76000830188620001ae565b620001f66020830187620001ae565b620002056040830186620001ae565b620002146060830185620001bf565b6200022360808301846200019d565b9695505050505050565b60006200023a826200024b565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b62000280816200022d565b81146200028c57600080fd5b50565b60805160601c60a05160c05161243c620002c4600039806101775250806109b95280610bcf525080610efa525061243c6000f3fe6080604052600436106100555760003560e01c8063031b905c1461005a5780631baaa00b146100855780636ae4b4f7146100b657806375103cb9146100e15780638fd3ab801461011f578063dab400f31461014a575b600080fd5b34801561006657600080fd5b5061006f610175565b60405161007c9190611fd3565b60405180910390f35b61009f600480360381019061009a91906114d6565b610199565b6040516100ad929190611dae565b60405180910390f35b3480156100c257600080fd5b506100cb6105d2565b6040516100d89190611eb2565b60405180910390f35b3480156100ed57600080fd5b506101086004803603810190610103919061158f565b61060b565b604051610116929190611dae565b60405180910390f35b34801561012b57600080fd5b50610134610988565b6040516101419190611e37565b60405180910390f35b34801561015657600080fd5b5061015f6109b7565b60405161016c9190611de5565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000081565b60608086869050898990501480156101b657508484905089899050145b6101f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101ec90611ed4565b60405180910390fd5b8888905067ffffffffffffffff8111801561020f57600080fd5b5060405190808252806020026020018201604052801561023e5781602001602082028036833780820191505090505b5091508888905067ffffffffffffffff8111801561025b57600080fd5b5060405190808252806020026020018201604052801561028a5781602001602082028036833780820191505090505b50905060006103253a3073ffffffffffffffffffffffffffffffffffffffff1663487b5c206040518163ffffffff1660e01b815260040160206040518083038186803b1580156102d957600080fd5b505afa1580156102ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103119190611701565b63ffffffff166109db90919063ffffffff16565b9050600080600090505b8b8b905081146105ba573073ffffffffffffffffffffffffffffffffffffffff1663414e4ccf8d8d8481811061036157fe5b905061018002018c8c8581811061037457fe5b9050608002018b8b8681811061038657fe5b905060200201602081019061039b919061169c565b33336040518663ffffffff1660e01b81526004016103bd959493929190611f14565b6040805180830381600087803b1580156103d657600080fd5b505af192505050801561040757506040513d601f19601f8201168201806040525081019061040491906116c5565b60015b610410576104a2565b818188858151811061041e57fe5b6020026020010188868151811061043157fe5b60200260200101826fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16815250826fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16815250505061049d8585610a2590919063ffffffff16565b935050505b85801561050557508787828181106104b657fe5b90506020020160208101906104cb919061169c565b6fffffffffffffffffffffffffffffffff168582815181106104e957fe5b60200260200101516fffffffffffffffffffffffffffffffff16105b156105ad57600061053f61053a8e8e8581811061051e57fe5b905061018002018036038101906105359190611648565b610a54565b610bcb565b90506105ab6105a68288858151811061055457fe5b60200260200101516fffffffffffffffffffffffffffffffff168c8c8781811061057a57fe5b905060200201602081019061058f919061169c565b6fffffffffffffffffffffffffffffffff16610c1d565b610cbb565b505b808060010191505061032f565b506105c481610cc3565b505097509795505050505050565b6040518060400160405280600981526020017f426174636846696c6c000000000000000000000000000000000000000000000081525081565b606080868690508989905014801561062857508484905089899050145b610667576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065e90611ef4565b60405180910390fd5b8888905067ffffffffffffffff8111801561068157600080fd5b506040519080825280602002602001820160405280156106b05781602001602082028036833780820191505090505b5091508888905067ffffffffffffffff811180156106cd57600080fd5b506040519080825280602002602001820160405280156106fc5781602001602082028036833780820191505090505b50905060005b89899050811461097b573073ffffffffffffffffffffffffffffffffffffffff1663aa6b21cd8b8b8481811061073457fe5b905061014002018a8a8581811061074757fe5b90506080020189898681811061075957fe5b905060200201602081019061076e919061169c565b336000336040518763ffffffff1660e01b815260040161079396959493929190611f6c565b6040805180830381600087803b1580156107ac57600080fd5b505af19250505080156107dd57506040513d601f19601f820116820180604052508101906107da91906116c5565b60015b6107e657610863565b81818685815181106107f457fe5b6020026020010186868151811061080757fe5b60200260200101826fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16815250826fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16815250505050505b8380156108c6575085858281811061087757fe5b905060200201602081019061088c919061169c565b6fffffffffffffffffffffffffffffffff168382815181106108aa57fe5b60200260200101516fffffffffffffffffffffffffffffffff16105b1561096e5760006109006108fb8c8c858181106108df57fe5b905061014002018036038101906108f69190611672565b610da4565b610bcb565b905061096c6109678286858151811061091557fe5b60200260200101516fffffffffffffffffffffffffffffffff168a8a8781811061093b57fe5b9050602002016020810190610950919061169c565b6fffffffffffffffffffffffffffffffff16610c1d565b610cbb565b505b8080600101915050610702565b5097509795505050505050565b600061099a631baaa00b60e01b610edb565b6109aa6375103cb960e01b610edb565b632c64c5ef60e01b905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000808314156109ee5760009050610a1f565b60008284029050828482816109ff57fe5b0414610a1a57610a19610a1460018686610f6b565b610cbb565b5b809150505b92915050565b600080828401905083811015610a4a57610a49610a4460008686610f6b565b610cbb565b5b8091505092915050565b60006040517fce918627cb55462ddbb85e73de69a8b322f2bc88f4507c52fcad6d4c33c29d498152825173ffffffffffffffffffffffffffffffffffffffff166020820152602083015173ffffffffffffffffffffffffffffffffffffffff16604082015260408301516fffffffffffffffffffffffffffffffff16606082015260608301516fffffffffffffffffffffffffffffffff16608082015260808301516fffffffffffffffffffffffffffffffff1660a082015260a083015173ffffffffffffffffffffffffffffffffffffffff1660c082015260c083015173ffffffffffffffffffffffffffffffffffffffff1660e082015260e083015173ffffffffffffffffffffffffffffffffffffffff1661010082015261010083015173ffffffffffffffffffffffffffffffffffffffff1661012082015261012083015161014082015261014083015167ffffffffffffffff166101608201526101608301516101808201526101a08120915050919050565b60007f000000000000000000000000000000000000000000000000000000000000000082604051602001610c00929190611d39565b604051602081830303815290604052805190602001209050919050565b60607f1d44aa5d44fd7162f13b456f3c7766598d02f56029c083df67a6f11a6edd3c3e848484604051602401610c5593929190611e00565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090509392505050565b805160208201fd5b8034118015610cfe57503073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614155b15610da1576000610d188234610ff090919063ffffffff16565b905060003373ffffffffffffffffffffffffffffffffffffffff1682604051610d4090611d70565b60006040518083038185875af1925050503d8060008114610d7d576040519150601f19603f3d011682016040523d82523d6000602084013e610d82565b606091505b5050905080610d9e57610d9d610d98338461101a565b610cbb565b5b50505b50565b60006040517fe593d3fdfa8b60e5e17a1b2204662ecbe15c23f2084b9ad5bae40359540a7da98152825173ffffffffffffffffffffffffffffffffffffffff166020820152602083015173ffffffffffffffffffffffffffffffffffffffff16604082015260408301516fffffffffffffffffffffffffffffffff16606082015260608301516fffffffffffffffffffffffffffffffff166080820152608083015173ffffffffffffffffffffffffffffffffffffffff1660a082015260a083015173ffffffffffffffffffffffffffffffffffffffff1660c082015260c083015173ffffffffffffffffffffffffffffffffffffffff1660e082015260e083015161010082015261010083015167ffffffffffffffff166101208201526101208301516101408201526101608120915050919050565b3073ffffffffffffffffffffffffffffffffffffffff16636eb224cb827f00000000000000000000000000000000000000000000000000000000000000006040518363ffffffff1660e01b8152600401610f36929190611e52565b600060405180830381600087803b158015610f5057600080fd5b505af1158015610f64573d6000803e3d6000fd5b5050505050565b606063e946c1bb60e01b848484604051602401610f8a93929190611e7b565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090509392505050565b60008282111561100f5761100e61100960028585610f6b565b610cbb565b5b818303905092915050565b60607fbde95cc2119e0200d80642397198abfcf98e6e4dddd0de9c6320d86252ad40ab8383604051602401611050929190611d85565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905092915050565b6000813590506110c481612327565b92915050565b60008083601f8401126110dc57600080fd5b8235905067ffffffffffffffff8111156110f557600080fd5b6020830191508361018082028301111561110e57600080fd5b9250929050565b60008083601f84011261112757600080fd5b8235905067ffffffffffffffff81111561114057600080fd5b6020830191508361014082028301111561115957600080fd5b9250929050565b60008083601f84011261117257600080fd5b8235905067ffffffffffffffff81111561118b57600080fd5b6020830191508360808202830111156111a357600080fd5b9250929050565b60008083601f8401126111bc57600080fd5b8235905067ffffffffffffffff8111156111d557600080fd5b6020830191508360208202830111156111ed57600080fd5b9250929050565b6000813590506112038161233e565b92915050565b60008135905061121881612355565b92915050565b60008135905061122d8161236c565b92915050565b60008135905061124281612383565b92915050565b6000610180828403121561125b57600080fd5b611266610180611fee565b905060006112768482850161121e565b600083015250602061128a8482850161121e565b602083015250604061129e84828501611458565b60408301525060606112b284828501611458565b60608301525060806112c684828501611458565b60808301525060a06112da848285016110b5565b60a08301525060c06112ee848285016110b5565b60c08301525060e0611302848285016110b5565b60e083015250610100611317848285016110b5565b6101008301525061012061132d84828501611209565b61012083015250610140611343848285016114ac565b6101408301525061016061135984828501611482565b6101608301525092915050565b6000610140828403121561137957600080fd5b611384610140611fee565b905060006113948482850161121e565b60008301525060206113a88482850161121e565b60208301525060406113bc84828501611458565b60408301525060606113d084828501611458565b60608301525060806113e4848285016110b5565b60808301525060a06113f8848285016110b5565b60a08301525060c061140c848285016110b5565b60c08301525060e061142084828501611209565b60e083015250610100611435848285016114ac565b6101008301525061012061144b84828501611482565b6101208301525092915050565b60008135905061146781612393565b92915050565b60008151905061147c81612393565b92915050565b600081359050611491816123aa565b92915050565b6000815190506114a6816123c1565b92915050565b6000813590506114bb816123d8565b92915050565b6000813590506114d0816123ef565b92915050565b60008060008060008060006080888a0312156114f157600080fd5b600088013567ffffffffffffffff81111561150b57600080fd5b6115178a828b016110ca565b9750975050602088013567ffffffffffffffff81111561153657600080fd5b6115428a828b01611160565b9550955050604088013567ffffffffffffffff81111561156157600080fd5b61156d8a828b016111aa565b935093505060606115808a828b016111f4565b91505092959891949750929550565b60008060008060008060006080888a0312156115aa57600080fd5b600088013567ffffffffffffffff8111156115c457600080fd5b6115d08a828b01611115565b9750975050602088013567ffffffffffffffff8111156115ef57600080fd5b6115fb8a828b01611160565b9550955050604088013567ffffffffffffffff81111561161a57600080fd5b6116268a828b016111aa565b935093505060606116398a828b016111f4565b91505092959891949750929550565b6000610180828403121561165b57600080fd5b600061166984828501611248565b91505092915050565b6000610140828403121561168557600080fd5b600061169384828501611366565b91505092915050565b6000602082840312156116ae57600080fd5b60006116bc84828501611458565b91505092915050565b600080604083850312156116d857600080fd5b60006116e68582860161146d565b92505060206116f78582860161146d565b9150509250929050565b60006020828403121561171357600080fd5b600061172184828501611497565b91505092915050565b60006117368383611cdf565b60208301905092915050565b61174b81612241565b82525050565b61175a8161213e565b82525050565b6117698161213e565b82525050565b600061177a8261202b565b611784818561204e565b935061178f8361201b565b8060005b838110156117c05781516117a7888261172a565b97506117b283612041565b925050600181019050611793565b5085935050505092915050565b6117d681612150565b82525050565b6117e58161215c565b82525050565b6117f48161215c565b82525050565b61180b6118068261215c565b6122f2565b82525050565b61181a81612166565b82525050565b61182981612253565b82525050565b61183881612277565b82525050565b61184781612289565b82525050565b600061185882612036565b611862818561206a565b93506118728185602086016122bf565b61187b816122fc565b840191505092915050565b6000611893604b8361206a565b91507f426174636846696c6c4e61746976654f7264657273466561747572653a3a626160008301527f74636846696c6c4c696d69744f72646572732f4d49534d4154434845445f415260208301527f5241595f4c454e475448530000000000000000000000000000000000000000006040830152606082019050919050565b600061191f60028361207b565b91507f19010000000000000000000000000000000000000000000000000000000000006000830152600282019050919050565b600061195f60498361206a565b91507f426174636846696c6c4e61746976654f7264657273466561747572653a3a626160008301527f74636846696c6c5266714f72646572732f4d49534d4154434845445f4152524160208301527f595f4c454e4754485300000000000000000000000000000000000000000000006040830152606082019050919050565b60006119eb60008361205f565b9150600082019050919050565b6101808201611a0a60008301836120b4565b611a176000850182611820565b50611a2560208301836120b4565b611a326020850182611820565b50611a4060408301836120e2565b611a4d6040850182611cdf565b50611a5b60608301836120e2565b611a686060850182611cdf565b50611a7660808301836120e2565b611a836080850182611cdf565b50611a9160a0830183612086565b611a9e60a0850182611751565b50611aac60c0830183612086565b611ab960c0850182611751565b50611ac760e0830183612086565b611ad460e0850182611751565b50611ae3610100830183612086565b611af1610100850182611751565b50611b0061012083018361209d565b611b0e6101208501826117dc565b50611b1d610140830183612110565b611b2b610140850182611d1b565b50611b3a6101608301836120f9565b611b48610160850182611cfd565b50505050565b6101408201611b6060008301836120b4565b611b6d6000850182611820565b50611b7b60208301836120b4565b611b886020850182611820565b50611b9660408301836120e2565b611ba36040850182611cdf565b50611bb160608301836120e2565b611bbe6060850182611cdf565b50611bcc6080830183612086565b611bd96080850182611751565b50611be760a0830183612086565b611bf460a0850182611751565b50611c0260c0830183612086565b611c0f60c0850182611751565b50611c1d60e083018361209d565b611c2a60e08501826117dc565b50611c39610100830183612110565b611c47610100850182611d1b565b50611c566101208301836120f9565b611c64610120850182611cfd565b50505050565b60808201611c7b60008301836120cb565b611c88600085018261183e565b50611c966020830183612127565b611ca36020850182611d2a565b50611cb1604083018361209d565b611cbe60408501826117dc565b50611ccc606083018361209d565b611cd960608501826117dc565b50505050565b611ce8816121ca565b82525050565b611cf7816121ca565b82525050565b611d0681612206565b82525050565b611d1581612206565b82525050565b611d2481612220565b82525050565b611d3381612234565b82525050565b6000611d4482611912565b9150611d5082856117fa565b602082019150611d6082846117fa565b6020820191508190509392505050565b6000611d7b826119de565b9150819050919050565b6000604082019050611d9a6000830185611760565b611da76020830184611d0c565b9392505050565b60006040820190508181036000830152611dc8818561176f565b90508181036020830152611ddc818461176f565b90509392505050565b6000602082019050611dfa60008301846117eb565b92915050565b6000606082019050611e1560008301866117eb565b611e226020830185611d0c565b611e2f6040830184611d0c565b949350505050565b6000602082019050611e4c6000830184611811565b92915050565b6000604082019050611e676000830185611811565b611e746020830184611760565b9392505050565b6000606082019050611e90600083018661182f565b611e9d6020830185611d0c565b611eaa6040830184611d0c565b949350505050565b60006020820190508181036000830152611ecc818461184d565b905092915050565b60006020820190508181036000830152611eed81611886565b9050919050565b60006020820190508181036000830152611f0d81611952565b9050919050565b600061026082019050611f2a60008301886119f8565b611f38610180830187611c6a565b611f46610200830186611cee565b611f54610220830185611742565b611f62610240830184611742565b9695505050505050565b600061024082019050611f826000830189611b4e565b611f90610140830188611c6a565b611f9e6101c0830187611cee565b611fac6101e0830186611742565b611fba6102008301856117cd565b611fc8610220830184611742565b979650505050505050565b6000602082019050611fe86000830184611d0c565b92915050565b6000604051905081810181811067ffffffffffffffff8211171561201157600080fd5b8060405250919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600081905092915050565b600061209560208401846110b5565b905092915050565b60006120ac6020840184611209565b905092915050565b60006120c3602084018461121e565b905092915050565b60006120da6020840184611233565b905092915050565b60006120f16020840184611458565b905092915050565b60006121086020840184611482565b905092915050565b600061211f60208401846114ac565b905092915050565b600061213660208401846114c1565b905092915050565b6000612149826121e6565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600061219d8261213e565b9050919050565b60008190506121b28261230d565b919050565b60008190506121c58261231a565b919050565b60006fffffffffffffffffffffffffffffffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b600067ffffffffffffffff82169050919050565b600060ff82169050919050565b600061224c8261229b565b9050919050565b600061225e82612265565b9050919050565b6000612270826121e6565b9050919050565b6000612282826121a4565b9050919050565b6000612294826121b7565b9050919050565b60006122a6826122ad565b9050919050565b60006122b8826121e6565b9050919050565b60005b838110156122dd5780820151818401526020810190506122c2565b838111156122ec576000848401525b50505050565b6000819050919050565b6000601f19601f8301169050919050565b6004811061231757fe5b50565b6005811061232457fe5b50565b6123308161213e565b811461233b57600080fd5b50565b61234781612150565b811461235257600080fd5b50565b61235e8161215c565b811461236957600080fd5b50565b61237581612192565b811461238057600080fd5b50565b6005811061239057600080fd5b50565b61239c816121ca565b81146123a757600080fd5b50565b6123b381612206565b81146123be57600080fd5b50565b6123ca81612210565b81146123d557600080fd5b50565b6123e181612220565b81146123ec57600080fd5b50565b6123f881612234565b811461240357600080fd5b5056fea26469706673582212208235123b1f94b5e78f1f3b34f47b273e04c94a9ed1e2289d97743cae79d2557e64736f6c634300060c0033";

type BatchFillNativeOrdersFeatureConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BatchFillNativeOrdersFeatureConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BatchFillNativeOrdersFeature__factory extends ContractFactory {
  constructor(...args: BatchFillNativeOrdersFeatureConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    zeroExAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BatchFillNativeOrdersFeature> {
    return super.deploy(
      zeroExAddress,
      overrides || {}
    ) as Promise<BatchFillNativeOrdersFeature>;
  }
  override getDeployTransaction(
    zeroExAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(zeroExAddress, overrides || {});
  }
  override attach(address: string): BatchFillNativeOrdersFeature {
    return super.attach(address) as BatchFillNativeOrdersFeature;
  }
  override connect(signer: Signer): BatchFillNativeOrdersFeature__factory {
    return super.connect(signer) as BatchFillNativeOrdersFeature__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BatchFillNativeOrdersFeatureInterface {
    return new utils.Interface(_abi) as BatchFillNativeOrdersFeatureInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BatchFillNativeOrdersFeature {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as BatchFillNativeOrdersFeature;
  }
}
