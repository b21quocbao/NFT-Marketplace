/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  SimpleFunctionRegistryFeature,
  SimpleFunctionRegistryFeatureInterface,
} from "../../../../contracts/src/features/SimpleFunctionRegistryFeature";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes4",
        name: "selector",
        type: "bytes4",
      },
      {
        indexed: false,
        internalType: "address",
        name: "oldImpl",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newImpl",
        type: "address",
      },
    ],
    name: "ProxyFunctionUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "FEATURE_NAME",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "FEATURE_VERSION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "selector",
        type: "bytes4",
      },
      {
        internalType: "address",
        name: "impl",
        type: "address",
      },
    ],
    name: "_extendSelf",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "bootstrap",
    outputs: [
      {
        internalType: "bytes4",
        name: "success",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "selector",
        type: "bytes4",
      },
      {
        internalType: "address",
        name: "impl",
        type: "address",
      },
    ],
    name: "extend",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "selector",
        type: "bytes4",
      },
      {
        internalType: "uint256",
        name: "idx",
        type: "uint256",
      },
    ],
    name: "getRollbackEntryAtIndex",
    outputs: [
      {
        internalType: "address",
        name: "impl",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "selector",
        type: "bytes4",
      },
    ],
    name: "getRollbackLength",
    outputs: [
      {
        internalType: "uint256",
        name: "rollbackLength",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "selector",
        type: "bytes4",
      },
      {
        internalType: "address",
        name: "targetImpl",
        type: "address",
      },
    ],
    name: "rollback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c0604052610017600160008061006660201b60201c565b60a09081525034801561002957600080fd5b503073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b81525050610090565b60008163ffffffff1660208463ffffffff16901b60408663ffffffff16901b171790509392505050565b60805160601c60a0516110ea6100ca6000398061019d5250806107fd528061082e528061085f528061089052806108c152506110ea6000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80636eb224cb1161005b5780636eb224cb146101155780639db64a4014610131578063dfd007491461014d578063fb969b0a1461017d57610088565b8063031b905c1461008d5780630ee8be1b146100ab5780636ae4b4f7146100c75780636ba6bbc2146100e5575b600080fd5b61009561019b565b6040516100a29190610f8c565b60405180910390f35b6100c560048036038101906100c09190610e04565b6101bf565b005b6100cf610212565b6040516100dc9190610f6a565b60405180910390f35b6100ff60048036038101906100fa9190610e40565b61024b565b60405161010c9190610ee2565b60405180910390f35b61012f600480360381019061012a9190610e04565b6102e5565b005b61014b60048036038101906101469190610e04565b6103bc565b005b61016760048036038101906101629190610ddb565b610787565b6040516101749190610f8c565b60405180910390f35b6101856107ee565b6040516101929190610f26565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000081565b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610204576102036101fe336108f2565b61098a565b5b61020e8282610992565b5050565b6040518060400160405280601681526020017f53696d706c6546756e6374696f6e52656769737472790000000000000000000081525081565b6000610255610bc5565b6000016000847bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002082815481106102b257fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905092915050565b60003073ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561032d57600080fd5b505afa158015610341573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103659190610db2565b90508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103ad576103ac6103a73383610bdb565b61098a565b5b506103b88282610992565b5050565b60003073ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561040457600080fd5b505afa158015610418573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061043c9190610db2565b90508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104845761048361047e3383610bdb565b61098a565b5b50600080610490610c76565b915091506000816000016000867bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561054857505050610783565b6000836000016000877bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002090506000818054905090505b60008111156106765760008260018303815481106105c357fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050828054806105fa57fe5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905590558673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156106695750610676565b50806001900390506105a9565b60008114156106925761069161068c8888610c91565b61098a565b5b85846000016000897bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550867bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167f2ae221083467de52078b0096696ab88d8d53a7ecb44bb65b56a2bab6875983678488604051610775929190610efd565b60405180910390a250505050505b5050565b6000610791610bc5565b6000016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001908152602001600020805490509050919050565b6000610821636eb224cb60e01b7f0000000000000000000000000000000000000000000000000000000000000000610992565b610852630ee8be1b60e01b7f0000000000000000000000000000000000000000000000000000000000000000610992565b610883639db64a4060e01b7f0000000000000000000000000000000000000000000000000000000000000000610992565b6108b463dfd0074960e01b7f0000000000000000000000000000000000000000000000000000000000000000610992565b6108e5636ba6bbc260e01b7f0000000000000000000000000000000000000000000000000000000000000000610992565b63d150751b60e01b905090565b60607ff0ec779b0bcda6d84abf99ee2c67647d1100ebbb553a9c2d1c2ba1579592832c826040516024016109269190610ee2565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050509050919050565b805160208201fd5b60008061099d610c76565b915091506000816000016000867bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000836000016000877bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001908152602001600020905080829080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555084836000016000887bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550857bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167f2ae221083467de52078b0096696ab88d8d53a7ecb44bb65b56a2bab6875983678387604051610bb5929190610efd565b60405180910390a2505050505050565b600080610bd26001610d2c565b90508091505090565b60607f1de45ad18e8a4484220a3ca14f4d977641addbaba5a344b1384dc2aa78a2e34d8383604051602401610c11929190610efd565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905092915050565b600080610c81610bc5565b610c89610d48565b915091509091565b60607fa0425c2dc08feeb46e95a8e23b3c6d740f439b9610c5a973cad3b7eca6ccfe638383604051602401610cc7929190610f41565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905092915050565b60006080600183600a811115610d3e57fe5b01901b9050919050565b600080610d556000610d2c565b90508091505090565b600081359050610d6d8161106f565b92915050565b600081519050610d828161106f565b92915050565b600081359050610d9781611086565b92915050565b600081359050610dac8161109d565b92915050565b600060208284031215610dc457600080fd5b6000610dd284828501610d73565b91505092915050565b600060208284031215610ded57600080fd5b6000610dfb84828501610d88565b91505092915050565b60008060408385031215610e1757600080fd5b6000610e2585828601610d88565b9250506020610e3685828601610d5e565b9150509250929050565b60008060408385031215610e5357600080fd5b6000610e6185828601610d88565b9250506020610e7285828601610d9d565b9150509250929050565b610e8581610fc3565b82525050565b610e9481610fd5565b82525050565b6000610ea582610fa7565b610eaf8185610fb2565b9350610ebf81856020860161102b565b610ec88161105e565b840191505092915050565b610edc81611021565b82525050565b6000602082019050610ef76000830184610e7c565b92915050565b6000604082019050610f126000830185610e7c565b610f1f6020830184610e7c565b9392505050565b6000602082019050610f3b6000830184610e8b565b92915050565b6000604082019050610f566000830185610e8b565b610f636020830184610e7c565b9392505050565b60006020820190508181036000830152610f848184610e9a565b905092915050565b6000602082019050610fa16000830184610ed3565b92915050565b600081519050919050565b600082825260208201905092915050565b6000610fce82611001565b9050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b8381101561104957808201518184015260208101905061102e565b83811115611058576000848401525b50505050565b6000601f19601f8301169050919050565b61107881610fc3565b811461108357600080fd5b50565b61108f81610fd5565b811461109a57600080fd5b50565b6110a681611021565b81146110b157600080fd5b5056fea264697066735822122055eeff69276d6dbba72ca9766c0ddf3b588a650f7720ab836b7cdd30a4ca02d764736f6c634300060c0033";

type SimpleFunctionRegistryFeatureConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SimpleFunctionRegistryFeatureConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SimpleFunctionRegistryFeature__factory extends ContractFactory {
  constructor(...args: SimpleFunctionRegistryFeatureConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SimpleFunctionRegistryFeature> {
    return super.deploy(
      overrides || {}
    ) as Promise<SimpleFunctionRegistryFeature>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SimpleFunctionRegistryFeature {
    return super.attach(address) as SimpleFunctionRegistryFeature;
  }
  override connect(signer: Signer): SimpleFunctionRegistryFeature__factory {
    return super.connect(signer) as SimpleFunctionRegistryFeature__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimpleFunctionRegistryFeatureInterface {
    return new utils.Interface(_abi) as SimpleFunctionRegistryFeatureInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SimpleFunctionRegistryFeature {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SimpleFunctionRegistryFeature;
  }
}
