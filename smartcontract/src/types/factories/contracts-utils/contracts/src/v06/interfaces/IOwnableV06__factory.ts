/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  IOwnableV06,
  IOwnableV06Interface,
} from "../../../../../../contracts-utils/contracts/src/v06/interfaces/IOwnableV06";
import type { Provider } from "@ethersproject/providers";
import { Contract, Signer, utils } from "ethers";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "ownerAddress",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IOwnableV06__factory {
  static readonly abi = _abi;
  static createInterface(): IOwnableV06Interface {
    return new utils.Interface(_abi) as IOwnableV06Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IOwnableV06 {
    return new Contract(address, _abi, signerOrProvider) as IOwnableV06;
  }
}
