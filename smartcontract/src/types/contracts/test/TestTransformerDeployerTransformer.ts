/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
} from "../../common";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";

export interface TestTransformerDeployerTransformerInterface
  extends utils.Interface {
  functions: {
    "CONSTRUCTOR_FAIL_VALUE()": FunctionFragment;
    "deployer()": FunctionFragment;
    "die(address)": FunctionFragment;
    "isDeployedByDeployer(uint32)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "CONSTRUCTOR_FAIL_VALUE"
      | "deployer"
      | "die"
      | "isDeployedByDeployer"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "CONSTRUCTOR_FAIL_VALUE",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "deployer", values?: undefined): string;
  encodeFunctionData(functionFragment: "die", values: [string]): string;
  encodeFunctionData(
    functionFragment: "isDeployedByDeployer",
    values: [BigNumberish]
  ): string;

  decodeFunctionResult(
    functionFragment: "CONSTRUCTOR_FAIL_VALUE",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "deployer", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "die", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "isDeployedByDeployer",
    data: BytesLike
  ): Result;

  events: {};
}

export interface TestTransformerDeployerTransformer extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: TestTransformerDeployerTransformerInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    CONSTRUCTOR_FAIL_VALUE(overrides?: CallOverrides): Promise<[BigNumber]>;

    deployer(overrides?: CallOverrides): Promise<[string]>;

    die(
      ethRecipient: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    isDeployedByDeployer(
      nonce: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[boolean]>;
  };

  CONSTRUCTOR_FAIL_VALUE(overrides?: CallOverrides): Promise<BigNumber>;

  deployer(overrides?: CallOverrides): Promise<string>;

  die(
    ethRecipient: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  isDeployedByDeployer(
    nonce: BigNumberish,
    overrides?: CallOverrides
  ): Promise<boolean>;

  callStatic: {
    CONSTRUCTOR_FAIL_VALUE(overrides?: CallOverrides): Promise<BigNumber>;

    deployer(overrides?: CallOverrides): Promise<string>;

    die(ethRecipient: string, overrides?: CallOverrides): Promise<void>;

    isDeployedByDeployer(
      nonce: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;
  };

  filters: {};

  estimateGas: {
    CONSTRUCTOR_FAIL_VALUE(overrides?: CallOverrides): Promise<BigNumber>;

    deployer(overrides?: CallOverrides): Promise<BigNumber>;

    die(
      ethRecipient: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    isDeployedByDeployer(
      nonce: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    CONSTRUCTOR_FAIL_VALUE(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    deployer(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    die(
      ethRecipient: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    isDeployedByDeployer(
      nonce: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
