/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import * as Contracts from ".";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";
import { ethers } from "ethers";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Metadata__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "ERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721__factory>;
    getContractFactory(
      name: "ERC721Enumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Enumerable__factory>;
    getContractFactory(
      name: "ERC721URIStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721URIStorage__factory>;
    getContractFactory(
      name: "IERC721Enumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Enumerable__factory>;
    getContractFactory(
      name: "IERC721Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Metadata__factory>;
    getContractFactory(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721__factory>;
    getContractFactory(
      name: "IERC721Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Receiver__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "IERC20TokenV06",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20TokenV06__factory>;
    getContractFactory(
      name: "IEtherTokenV06",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IEtherTokenV06__factory>;
    getContractFactory(
      name: "AuthorizableV06",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AuthorizableV06__factory>;
    getContractFactory(
      name: "IAuthorizableV06",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAuthorizableV06__factory>;
    getContractFactory(
      name: "IOwnableV06",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IOwnableV06__factory>;
    getContractFactory(
      name: "OwnableV06",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OwnableV06__factory>;
    getContractFactory(
      name: "ERC20Token",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Token__factory>;
    getContractFactory(
      name: "ERC721Token",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Token__factory>;
    getContractFactory(
      name: "FeeCollector",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FeeCollector__factory>;
    getContractFactory(
      name: "FeeCollectorController",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FeeCollectorController__factory>;
    getContractFactory(
      name: "FlashWallet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FlashWallet__factory>;
    getContractFactory(
      name: "IFlashWallet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IFlashWallet__factory>;
    getContractFactory(
      name: "ILiquidityProviderSandbox",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILiquidityProviderSandbox__factory>;
    getContractFactory(
      name: "LiquidityProviderSandbox",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LiquidityProviderSandbox__factory>;
    getContractFactory(
      name: "PermissionlessTransformerDeployer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PermissionlessTransformerDeployer__factory>;
    getContractFactory(
      name: "IKillable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IKillable__factory>;
    getContractFactory(
      name: "TransformerDeployer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TransformerDeployer__factory>;
    getContractFactory(
      name: "BatchFillNativeOrdersFeature",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BatchFillNativeOrdersFeature__factory>;
    getContractFactory(
      name: "BootstrapFeature",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BootstrapFeature__factory>;
    getContractFactory(
      name: "ERC165Feature",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165Feature__factory>;
    getContractFactory(
      name: "FundRecoveryFeature",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FundRecoveryFeature__factory>;
    getContractFactory(
      name: "IBatchFillNativeOrdersFeature",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBatchFillNativeOrdersFeature__factory>;
    getContractFactory(
      name: "IBootstrapFeature",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBootstrapFeature__factory>;
    getContractFactory(
      name: "IERC1155OrdersFeature",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155OrdersFeature__factory>;
    getContractFactory(
      name: "IERC165Feature",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165Feature__factory>;
    getContractFactory(
      name: "IERC721OrdersFeature",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721OrdersFeature__factory>;
    getContractFactory(
      name: "IFeature",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IFeature__factory>;
    getContractFactory(
      name: "IFundRecoveryFeature",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IFundRecoveryFeature__factory>;
    getContractFactory(
      name: "ILiquidityProviderFeature",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILiquidityProviderFeature__factory>;
    getContractFactory(
      name: "IMetaTransactionsFeature",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMetaTransactionsFeature__factory>;
    getContractFactory(
      name: "IMultiplexFeature",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMultiplexFeature__factory>;
    getContractFactory(
      name: "INativeOrdersEvents",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.INativeOrdersEvents__factory>;
    getContractFactory(
      name: "INativeOrdersFeature",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.INativeOrdersFeature__factory>;
    getContractFactory(
      name: "IOtcOrdersFeature",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IOtcOrdersFeature__factory>;
    getContractFactory(
      name: "IOwnableFeature",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IOwnableFeature__factory>;
    getContractFactory(
      name: "IPancakeSwapFeature",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPancakeSwapFeature__factory>;
    getContractFactory(
      name: "ISimpleFunctionRegistryFeature",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISimpleFunctionRegistryFeature__factory>;
    getContractFactory(
      name: "ITokenSpenderFeature",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITokenSpenderFeature__factory>;
    getContractFactory(
      name: "ITransformERC20Feature",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITransformERC20Feature__factory>;
    getContractFactory(
      name: "IUniswapFeature",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapFeature__factory>;
    getContractFactory(
      name: "IUniswapV3Feature",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV3Feature__factory>;
    getContractFactory(
      name: "LiquidityProviderFeature",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LiquidityProviderFeature__factory>;
    getContractFactory(
      name: "MetaTransactionsFeature",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MetaTransactionsFeature__factory>;
    getContractFactory(
      name: "MultiplexFeature",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MultiplexFeature__factory>;
    getContractFactory(
      name: "MultiplexLiquidityProvider",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MultiplexLiquidityProvider__factory>;
    getContractFactory(
      name: "MultiplexOtc",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MultiplexOtc__factory>;
    getContractFactory(
      name: "MultiplexRfq",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MultiplexRfq__factory>;
    getContractFactory(
      name: "MultiplexUniswapV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MultiplexUniswapV2__factory>;
    getContractFactory(
      name: "NativeOrdersCancellation",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NativeOrdersCancellation__factory>;
    getContractFactory(
      name: "NativeOrdersInfo",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NativeOrdersInfo__factory>;
    getContractFactory(
      name: "NativeOrdersProtocolFees",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NativeOrdersProtocolFees__factory>;
    getContractFactory(
      name: "NativeOrdersSettlement",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NativeOrdersSettlement__factory>;
    getContractFactory(
      name: "NativeOrdersFeature",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NativeOrdersFeature__factory>;
    getContractFactory(
      name: "ERC1155OrdersFeature",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155OrdersFeature__factory>;
    getContractFactory(
      name: "ERC721OrdersFeature",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721OrdersFeature__factory>;
    getContractFactory(
      name: "NFTOrders",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NFTOrders__factory>;
    getContractFactory(
      name: "OtcOrdersFeature",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OtcOrdersFeature__factory>;
    getContractFactory(
      name: "OwnableFeature",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OwnableFeature__factory>;
    getContractFactory(
      name: "PancakeSwapFeature",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PancakeSwapFeature__factory>;
    getContractFactory(
      name: "SimpleFunctionRegistryFeature",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SimpleFunctionRegistryFeature__factory>;
    getContractFactory(
      name: "TransformERC20Feature",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TransformERC20Feature__factory>;
    getContractFactory(
      name: "UniswapFeature",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UniswapFeature__factory>;
    getContractFactory(
      name: "UniswapV3Feature",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UniswapV3Feature__factory>;
    getContractFactory(
      name: "FixinEIP712",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FixinEIP712__factory>;
    getContractFactory(
      name: "FixinProtocolFees",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FixinProtocolFees__factory>;
    getContractFactory(
      name: "IZeroEx",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IZeroEx__factory>;
    getContractFactory(
      name: "CurveLiquidityProvider",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CurveLiquidityProvider__factory>;
    getContractFactory(
      name: "MooniswapLiquidityProvider",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MooniswapLiquidityProvider__factory>;
    getContractFactory(
      name: "FullMigration",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FullMigration__factory>;
    getContractFactory(
      name: "InitialMigration",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.InitialMigration__factory>;
    getContractFactory(
      name: "AffiliateFeeTransformer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AffiliateFeeTransformer__factory>;
    getContractFactory(
      name: "BridgeAdapter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BridgeAdapter__factory>;
    getContractFactory(
      name: "IBridgeAdapter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBridgeAdapter__factory>;
    getContractFactory(
      name: "ILendingPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILendingPool__factory>;
    getContractFactory(
      name: "IBalancerPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBalancerPool__factory>;
    getContractFactory(
      name: "IBalancerV2Vault",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBalancerV2Vault__factory>;
    getContractFactory(
      name: "IBalancerV2BatchSwapVault",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBalancerV2BatchSwapVault__factory>;
    getContractFactory(
      name: "IBancorNetwork",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBancorNetwork__factory>;
    getContractFactory(
      name: "MixinBancor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MixinBancor__factory>;
    getContractFactory(
      name: "ICEther",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICEther__factory>;
    getContractFactory(
      name: "ICToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICToken__factory>;
    getContractFactory(
      name: "MixinCompound",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MixinCompound__factory>;
    getContractFactory(
      name: "MixinCurve",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MixinCurve__factory>;
    getContractFactory(
      name: "IDODO",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDODO__factory>;
    getContractFactory(
      name: "IDODOHelper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDODOHelper__factory>;
    getContractFactory(
      name: "IDODOV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDODOV2__factory>;
    getContractFactory(
      name: "IGmxRouter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGmxRouter__factory>;
    getContractFactory(
      name: "MixinGMX",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MixinGMX__factory>;
    getContractFactory(
      name: "IKyberDmmRouter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IKyberDmmRouter__factory>;
    getContractFactory(
      name: "ILido",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILido__factory>;
    getContractFactory(
      name: "MixinLido",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MixinLido__factory>;
    getContractFactory(
      name: "IPSM",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPSM__factory>;
    getContractFactory(
      name: "IMooniswapPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMooniswapPool__factory>;
    getContractFactory(
      name: "MixinMooniswap",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MixinMooniswap__factory>;
    getContractFactory(
      name: "IMStable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMStable__factory>;
    getContractFactory(
      name: "IPlatypusRouter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPlatypusRouter__factory>;
    getContractFactory(
      name: "MixinPlatypus",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MixinPlatypus__factory>;
    getContractFactory(
      name: "IShell",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IShell__factory>;
    getContractFactory(
      name: "IUniswapExchange",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapExchange__factory>;
    getContractFactory(
      name: "IUniswapExchangeFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapExchangeFactory__factory>;
    getContractFactory(
      name: "MixinUniswap",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MixinUniswap__factory>;
    getContractFactory(
      name: "IUniswapV2Router02",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV2Router02__factory>;
    getContractFactory(
      name: "IUniswapV3Router",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV3Router__factory>;
    getContractFactory(
      name: "FillQuoteTransformer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FillQuoteTransformer__factory>;
    getContractFactory(
      name: "IERC20Transformer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Transformer__factory>;
    getContractFactory(
      name: "LogMetadataTransformer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LogMetadataTransformer__factory>;
    getContractFactory(
      name: "PayTakerTransformer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PayTakerTransformer__factory>;
    getContractFactory(
      name: "PositiveSlippageFeeTransformer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PositiveSlippageFeeTransformer__factory>;
    getContractFactory(
      name: "Transformer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Transformer__factory>;
    getContractFactory(
      name: "WethTransformer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WethTransformer__factory>;
    getContractFactory(
      name: "IERC1155Token",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155Token__factory>;
    getContractFactory(
      name: "IERC721Token",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Token__factory>;
    getContractFactory(
      name: "IFeeRecipient",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IFeeRecipient__factory>;
    getContractFactory(
      name: "ILiquidityProvider",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILiquidityProvider__factory>;
    getContractFactory(
      name: "IMooniswapPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMooniswapPool__factory>;
    getContractFactory(
      name: "IPropertyValidator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPropertyValidator__factory>;
    getContractFactory(
      name: "ITakerCallback",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITakerCallback__factory>;
    getContractFactory(
      name: "IUniswapV2Pair",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV2Pair__factory>;
    getContractFactory(
      name: "IUniswapV3Pool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV3Pool__factory>;
    getContractFactory(
      name: "IERC20Bridge",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Bridge__factory>;
    getContractFactory(
      name: "IStaking",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IStaking__factory>;
    getContractFactory(
      name: "ZeroEx",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ZeroEx__factory>;
    getContractFactory(
      name: "ZeroExOptimized",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ZeroExOptimized__factory>;
    getContractFactory(
      name: "TestCurve",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestCurve__factory>;
    getContractFactory(
      name: "TestLiquidityProvider",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestLiquidityProvider__factory>;
    getContractFactory(
      name: "TestMooniswap",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestMooniswap__factory>;
    getContractFactory(
      name: "TestUniswapV2Factory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestUniswapV2Factory__factory>;
    getContractFactory(
      name: "IUniswapV2PoolDeployer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV2PoolDeployer__factory>;
    getContractFactory(
      name: "TestUniswapV2Pool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestUniswapV2Pool__factory>;
    getContractFactory(
      name: "TestUniswapV3Factory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestUniswapV3Factory__factory>;
    getContractFactory(
      name: "IUniswapV3PoolDeployer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV3PoolDeployer__factory>;
    getContractFactory(
      name: "IUniswapV3SwapCallback",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV3SwapCallback__factory>;
    getContractFactory(
      name: "TestUniswapV3Pool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestUniswapV3Pool__factory>;
    getContractFactory(
      name: "ITestSimpleFunctionRegistryFeature",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITestSimpleFunctionRegistryFeature__factory>;
    getContractFactory(
      name: "TestBridge",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestBridge__factory>;
    getContractFactory(
      name: "TestCallTarget",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestCallTarget__factory>;
    getContractFactory(
      name: "TestDelegateCaller",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestDelegateCaller__factory>;
    getContractFactory(
      name: "TestFeeCollectorController",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestFeeCollectorController__factory>;
    getContractFactory(
      name: "TestFeeRecipient",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestFeeRecipient__factory>;
    getContractFactory(
      name: "TestFillQuoteTransformerBridge",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestFillQuoteTransformerBridge__factory>;
    getContractFactory(
      name: "TestFillQuoteTransformerExchange",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestFillQuoteTransformerExchange__factory>;
    getContractFactory(
      name: "TestFillQuoteTransformerHost",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestFillQuoteTransformerHost__factory>;
    getContractFactory(
      name: "TestFixinProtocolFees",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestFixinProtocolFees__factory>;
    getContractFactory(
      name: "TestFixinTokenSpender",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestFixinTokenSpender__factory>;
    getContractFactory(
      name: "TestFullMigration",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestFullMigration__factory>;
    getContractFactory(
      name: "TestInitialMigration",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestInitialMigration__factory>;
    getContractFactory(
      name: "TestLibNativeOrder",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestLibNativeOrder__factory>;
    getContractFactory(
      name: "TestLibSignature",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestLibSignature__factory>;
    getContractFactory(
      name: "TestMetaTransactionsNativeOrdersFeature",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestMetaTransactionsNativeOrdersFeature__factory>;
    getContractFactory(
      name: "TestMetaTransactionsTransformERC20Feature",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestMetaTransactionsTransformERC20Feature__factory>;
    getContractFactory(
      name: "TestMigrator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestMigrator__factory>;
    getContractFactory(
      name: "TestMintTokenERC20Transformer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestMintTokenERC20Transformer__factory>;
    getContractFactory(
      name: "TestNativeOrdersFeature",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestNativeOrdersFeature__factory>;
    getContractFactory(
      name: "TestNFTOrderPresigner",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestNFTOrderPresigner__factory>;
    getContractFactory(
      name: "TestOrderSignerRegistryWithContractWallet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestOrderSignerRegistryWithContractWallet__factory>;
    getContractFactory(
      name: "TestPermissionlessTransformerDeployerSuicidal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestPermissionlessTransformerDeployerSuicidal__factory>;
    getContractFactory(
      name: "TestPermissionlessTransformerDeployerTransformer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestPermissionlessTransformerDeployerTransformer__factory>;
    getContractFactory(
      name: "TestPropertyValidator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestPropertyValidator__factory>;
    getContractFactory(
      name: "TestRfqOriginRegistration",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestRfqOriginRegistration__factory>;
    getContractFactory(
      name: "TestSimpleFunctionRegistryFeatureImpl1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestSimpleFunctionRegistryFeatureImpl1__factory>;
    getContractFactory(
      name: "TestSimpleFunctionRegistryFeatureImpl2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestSimpleFunctionRegistryFeatureImpl2__factory>;
    getContractFactory(
      name: "TestStaking",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestStaking__factory>;
    getContractFactory(
      name: "TestTransformerBase",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestTransformerBase__factory>;
    getContractFactory(
      name: "TestTransformERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestTransformERC20__factory>;
    getContractFactory(
      name: "TestTransformerDeployerTransformer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestTransformerDeployerTransformer__factory>;
    getContractFactory(
      name: "TestTransformerHost",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestTransformerHost__factory>;
    getContractFactory(
      name: "TestUniswapV3Feature",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestUniswapV3Feature__factory>;
    getContractFactory(
      name: "TestWethTransformerHost",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestWethTransformerHost__factory>;
    getContractFactory(
      name: "TestZeroExFeature",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestZeroExFeature__factory>;
    getContractFactory(
      name: "IERC1155Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155Receiver__factory>;
    getContractFactory(
      name: "TestMintableERC1155Token",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestMintableERC1155Token__factory>;
    getContractFactory(
      name: "TestMintableERC20Token",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestMintableERC20Token__factory>;
    getContractFactory(
      name: "IERC721Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Receiver__factory>;
    getContractFactory(
      name: "TestMintableERC721Token",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestMintableERC721Token__factory>;
    getContractFactory(
      name: "TestTokenSpenderERC20Token",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestTokenSpenderERC20Token__factory>;
    getContractFactory(
      name: "TestWeth",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestWeth__factory>;

    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "IERC20Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Metadata>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "ERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721>;
    getContractAt(
      name: "ERC721Enumerable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721Enumerable>;
    getContractAt(
      name: "ERC721URIStorage",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721URIStorage>;
    getContractAt(
      name: "IERC721Enumerable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Enumerable>;
    getContractAt(
      name: "IERC721Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Metadata>;
    getContractAt(
      name: "IERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721>;
    getContractAt(
      name: "IERC721Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Receiver>;
    getContractAt(
      name: "ERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165>;
    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "IERC20TokenV06",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20TokenV06>;
    getContractAt(
      name: "IEtherTokenV06",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IEtherTokenV06>;
    getContractAt(
      name: "AuthorizableV06",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AuthorizableV06>;
    getContractAt(
      name: "IAuthorizableV06",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAuthorizableV06>;
    getContractAt(
      name: "IOwnableV06",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IOwnableV06>;
    getContractAt(
      name: "OwnableV06",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OwnableV06>;
    getContractAt(
      name: "ERC20Token",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Token>;
    getContractAt(
      name: "ERC721Token",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721Token>;
    getContractAt(
      name: "FeeCollector",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FeeCollector>;
    getContractAt(
      name: "FeeCollectorController",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FeeCollectorController>;
    getContractAt(
      name: "FlashWallet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FlashWallet>;
    getContractAt(
      name: "IFlashWallet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IFlashWallet>;
    getContractAt(
      name: "ILiquidityProviderSandbox",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ILiquidityProviderSandbox>;
    getContractAt(
      name: "LiquidityProviderSandbox",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LiquidityProviderSandbox>;
    getContractAt(
      name: "PermissionlessTransformerDeployer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PermissionlessTransformerDeployer>;
    getContractAt(
      name: "IKillable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IKillable>;
    getContractAt(
      name: "TransformerDeployer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TransformerDeployer>;
    getContractAt(
      name: "BatchFillNativeOrdersFeature",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BatchFillNativeOrdersFeature>;
    getContractAt(
      name: "BootstrapFeature",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BootstrapFeature>;
    getContractAt(
      name: "ERC165Feature",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165Feature>;
    getContractAt(
      name: "FundRecoveryFeature",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FundRecoveryFeature>;
    getContractAt(
      name: "IBatchFillNativeOrdersFeature",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBatchFillNativeOrdersFeature>;
    getContractAt(
      name: "IBootstrapFeature",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBootstrapFeature>;
    getContractAt(
      name: "IERC1155OrdersFeature",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155OrdersFeature>;
    getContractAt(
      name: "IERC165Feature",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165Feature>;
    getContractAt(
      name: "IERC721OrdersFeature",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721OrdersFeature>;
    getContractAt(
      name: "IFeature",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IFeature>;
    getContractAt(
      name: "IFundRecoveryFeature",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IFundRecoveryFeature>;
    getContractAt(
      name: "ILiquidityProviderFeature",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ILiquidityProviderFeature>;
    getContractAt(
      name: "IMetaTransactionsFeature",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IMetaTransactionsFeature>;
    getContractAt(
      name: "IMultiplexFeature",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IMultiplexFeature>;
    getContractAt(
      name: "INativeOrdersEvents",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.INativeOrdersEvents>;
    getContractAt(
      name: "INativeOrdersFeature",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.INativeOrdersFeature>;
    getContractAt(
      name: "IOtcOrdersFeature",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IOtcOrdersFeature>;
    getContractAt(
      name: "IOwnableFeature",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IOwnableFeature>;
    getContractAt(
      name: "IPancakeSwapFeature",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPancakeSwapFeature>;
    getContractAt(
      name: "ISimpleFunctionRegistryFeature",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISimpleFunctionRegistryFeature>;
    getContractAt(
      name: "ITokenSpenderFeature",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ITokenSpenderFeature>;
    getContractAt(
      name: "ITransformERC20Feature",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ITransformERC20Feature>;
    getContractAt(
      name: "IUniswapFeature",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapFeature>;
    getContractAt(
      name: "IUniswapV3Feature",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV3Feature>;
    getContractAt(
      name: "LiquidityProviderFeature",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LiquidityProviderFeature>;
    getContractAt(
      name: "MetaTransactionsFeature",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MetaTransactionsFeature>;
    getContractAt(
      name: "MultiplexFeature",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MultiplexFeature>;
    getContractAt(
      name: "MultiplexLiquidityProvider",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MultiplexLiquidityProvider>;
    getContractAt(
      name: "MultiplexOtc",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MultiplexOtc>;
    getContractAt(
      name: "MultiplexRfq",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MultiplexRfq>;
    getContractAt(
      name: "MultiplexUniswapV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MultiplexUniswapV2>;
    getContractAt(
      name: "NativeOrdersCancellation",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NativeOrdersCancellation>;
    getContractAt(
      name: "NativeOrdersInfo",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NativeOrdersInfo>;
    getContractAt(
      name: "NativeOrdersProtocolFees",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NativeOrdersProtocolFees>;
    getContractAt(
      name: "NativeOrdersSettlement",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NativeOrdersSettlement>;
    getContractAt(
      name: "NativeOrdersFeature",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NativeOrdersFeature>;
    getContractAt(
      name: "ERC1155OrdersFeature",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155OrdersFeature>;
    getContractAt(
      name: "ERC721OrdersFeature",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721OrdersFeature>;
    getContractAt(
      name: "NFTOrders",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NFTOrders>;
    getContractAt(
      name: "OtcOrdersFeature",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OtcOrdersFeature>;
    getContractAt(
      name: "OwnableFeature",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OwnableFeature>;
    getContractAt(
      name: "PancakeSwapFeature",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PancakeSwapFeature>;
    getContractAt(
      name: "SimpleFunctionRegistryFeature",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SimpleFunctionRegistryFeature>;
    getContractAt(
      name: "TransformERC20Feature",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TransformERC20Feature>;
    getContractAt(
      name: "UniswapFeature",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UniswapFeature>;
    getContractAt(
      name: "UniswapV3Feature",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UniswapV3Feature>;
    getContractAt(
      name: "FixinEIP712",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FixinEIP712>;
    getContractAt(
      name: "FixinProtocolFees",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FixinProtocolFees>;
    getContractAt(
      name: "IZeroEx",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IZeroEx>;
    getContractAt(
      name: "CurveLiquidityProvider",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CurveLiquidityProvider>;
    getContractAt(
      name: "MooniswapLiquidityProvider",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MooniswapLiquidityProvider>;
    getContractAt(
      name: "FullMigration",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FullMigration>;
    getContractAt(
      name: "InitialMigration",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.InitialMigration>;
    getContractAt(
      name: "AffiliateFeeTransformer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AffiliateFeeTransformer>;
    getContractAt(
      name: "BridgeAdapter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BridgeAdapter>;
    getContractAt(
      name: "IBridgeAdapter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBridgeAdapter>;
    getContractAt(
      name: "ILendingPool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ILendingPool>;
    getContractAt(
      name: "IBalancerPool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBalancerPool>;
    getContractAt(
      name: "IBalancerV2Vault",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBalancerV2Vault>;
    getContractAt(
      name: "IBalancerV2BatchSwapVault",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBalancerV2BatchSwapVault>;
    getContractAt(
      name: "IBancorNetwork",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBancorNetwork>;
    getContractAt(
      name: "MixinBancor",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MixinBancor>;
    getContractAt(
      name: "ICEther",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ICEther>;
    getContractAt(
      name: "ICToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ICToken>;
    getContractAt(
      name: "MixinCompound",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MixinCompound>;
    getContractAt(
      name: "MixinCurve",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MixinCurve>;
    getContractAt(
      name: "IDODO",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IDODO>;
    getContractAt(
      name: "IDODOHelper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IDODOHelper>;
    getContractAt(
      name: "IDODOV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IDODOV2>;
    getContractAt(
      name: "IGmxRouter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IGmxRouter>;
    getContractAt(
      name: "MixinGMX",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MixinGMX>;
    getContractAt(
      name: "IKyberDmmRouter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IKyberDmmRouter>;
    getContractAt(
      name: "ILido",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ILido>;
    getContractAt(
      name: "MixinLido",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MixinLido>;
    getContractAt(
      name: "IPSM",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPSM>;
    getContractAt(
      name: "IMooniswapPool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IMooniswapPool>;
    getContractAt(
      name: "MixinMooniswap",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MixinMooniswap>;
    getContractAt(
      name: "IMStable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IMStable>;
    getContractAt(
      name: "IPlatypusRouter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPlatypusRouter>;
    getContractAt(
      name: "MixinPlatypus",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MixinPlatypus>;
    getContractAt(
      name: "IShell",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IShell>;
    getContractAt(
      name: "IUniswapExchange",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapExchange>;
    getContractAt(
      name: "IUniswapExchangeFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapExchangeFactory>;
    getContractAt(
      name: "MixinUniswap",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MixinUniswap>;
    getContractAt(
      name: "IUniswapV2Router02",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV2Router02>;
    getContractAt(
      name: "IUniswapV3Router",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV3Router>;
    getContractAt(
      name: "FillQuoteTransformer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FillQuoteTransformer>;
    getContractAt(
      name: "IERC20Transformer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Transformer>;
    getContractAt(
      name: "LogMetadataTransformer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LogMetadataTransformer>;
    getContractAt(
      name: "PayTakerTransformer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PayTakerTransformer>;
    getContractAt(
      name: "PositiveSlippageFeeTransformer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PositiveSlippageFeeTransformer>;
    getContractAt(
      name: "Transformer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Transformer>;
    getContractAt(
      name: "WethTransformer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.WethTransformer>;
    getContractAt(
      name: "IERC1155Token",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155Token>;
    getContractAt(
      name: "IERC721Token",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Token>;
    getContractAt(
      name: "IFeeRecipient",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IFeeRecipient>;
    getContractAt(
      name: "ILiquidityProvider",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ILiquidityProvider>;
    getContractAt(
      name: "IMooniswapPool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IMooniswapPool>;
    getContractAt(
      name: "IPropertyValidator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPropertyValidator>;
    getContractAt(
      name: "ITakerCallback",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ITakerCallback>;
    getContractAt(
      name: "IUniswapV2Pair",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV2Pair>;
    getContractAt(
      name: "IUniswapV3Pool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV3Pool>;
    getContractAt(
      name: "IERC20Bridge",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Bridge>;
    getContractAt(
      name: "IStaking",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IStaking>;
    getContractAt(
      name: "ZeroEx",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ZeroEx>;
    getContractAt(
      name: "ZeroExOptimized",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ZeroExOptimized>;
    getContractAt(
      name: "TestCurve",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestCurve>;
    getContractAt(
      name: "TestLiquidityProvider",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestLiquidityProvider>;
    getContractAt(
      name: "TestMooniswap",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestMooniswap>;
    getContractAt(
      name: "TestUniswapV2Factory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestUniswapV2Factory>;
    getContractAt(
      name: "IUniswapV2PoolDeployer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV2PoolDeployer>;
    getContractAt(
      name: "TestUniswapV2Pool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestUniswapV2Pool>;
    getContractAt(
      name: "TestUniswapV3Factory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestUniswapV3Factory>;
    getContractAt(
      name: "IUniswapV3PoolDeployer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV3PoolDeployer>;
    getContractAt(
      name: "IUniswapV3SwapCallback",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV3SwapCallback>;
    getContractAt(
      name: "TestUniswapV3Pool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestUniswapV3Pool>;
    getContractAt(
      name: "ITestSimpleFunctionRegistryFeature",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ITestSimpleFunctionRegistryFeature>;
    getContractAt(
      name: "TestBridge",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestBridge>;
    getContractAt(
      name: "TestCallTarget",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestCallTarget>;
    getContractAt(
      name: "TestDelegateCaller",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestDelegateCaller>;
    getContractAt(
      name: "TestFeeCollectorController",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestFeeCollectorController>;
    getContractAt(
      name: "TestFeeRecipient",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestFeeRecipient>;
    getContractAt(
      name: "TestFillQuoteTransformerBridge",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestFillQuoteTransformerBridge>;
    getContractAt(
      name: "TestFillQuoteTransformerExchange",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestFillQuoteTransformerExchange>;
    getContractAt(
      name: "TestFillQuoteTransformerHost",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestFillQuoteTransformerHost>;
    getContractAt(
      name: "TestFixinProtocolFees",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestFixinProtocolFees>;
    getContractAt(
      name: "TestFixinTokenSpender",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestFixinTokenSpender>;
    getContractAt(
      name: "TestFullMigration",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestFullMigration>;
    getContractAt(
      name: "TestInitialMigration",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestInitialMigration>;
    getContractAt(
      name: "TestLibNativeOrder",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestLibNativeOrder>;
    getContractAt(
      name: "TestLibSignature",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestLibSignature>;
    getContractAt(
      name: "TestMetaTransactionsNativeOrdersFeature",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestMetaTransactionsNativeOrdersFeature>;
    getContractAt(
      name: "TestMetaTransactionsTransformERC20Feature",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestMetaTransactionsTransformERC20Feature>;
    getContractAt(
      name: "TestMigrator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestMigrator>;
    getContractAt(
      name: "TestMintTokenERC20Transformer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestMintTokenERC20Transformer>;
    getContractAt(
      name: "TestNativeOrdersFeature",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestNativeOrdersFeature>;
    getContractAt(
      name: "TestNFTOrderPresigner",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestNFTOrderPresigner>;
    getContractAt(
      name: "TestOrderSignerRegistryWithContractWallet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestOrderSignerRegistryWithContractWallet>;
    getContractAt(
      name: "TestPermissionlessTransformerDeployerSuicidal",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestPermissionlessTransformerDeployerSuicidal>;
    getContractAt(
      name: "TestPermissionlessTransformerDeployerTransformer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestPermissionlessTransformerDeployerTransformer>;
    getContractAt(
      name: "TestPropertyValidator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestPropertyValidator>;
    getContractAt(
      name: "TestRfqOriginRegistration",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestRfqOriginRegistration>;
    getContractAt(
      name: "TestSimpleFunctionRegistryFeatureImpl1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestSimpleFunctionRegistryFeatureImpl1>;
    getContractAt(
      name: "TestSimpleFunctionRegistryFeatureImpl2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestSimpleFunctionRegistryFeatureImpl2>;
    getContractAt(
      name: "TestStaking",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestStaking>;
    getContractAt(
      name: "TestTransformerBase",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestTransformerBase>;
    getContractAt(
      name: "TestTransformERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestTransformERC20>;
    getContractAt(
      name: "TestTransformerDeployerTransformer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestTransformerDeployerTransformer>;
    getContractAt(
      name: "TestTransformerHost",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestTransformerHost>;
    getContractAt(
      name: "TestUniswapV3Feature",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestUniswapV3Feature>;
    getContractAt(
      name: "TestWethTransformerHost",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestWethTransformerHost>;
    getContractAt(
      name: "TestZeroExFeature",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestZeroExFeature>;
    getContractAt(
      name: "IERC1155Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155Receiver>;
    getContractAt(
      name: "TestMintableERC1155Token",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestMintableERC1155Token>;
    getContractAt(
      name: "TestMintableERC20Token",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestMintableERC20Token>;
    getContractAt(
      name: "IERC721Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Receiver>;
    getContractAt(
      name: "TestMintableERC721Token",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestMintableERC721Token>;
    getContractAt(
      name: "TestTokenSpenderERC20Token",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestTokenSpenderERC20Token>;
    getContractAt(
      name: "TestWeth",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestWeth>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
